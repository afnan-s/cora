; ModuleID = 'svm_utils.c'
source_filename = "svm_utils.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.svm_model = type { %struct.svm_parameter, i32, i32, %struct.svm_node**, double**, double*, double*, double*, i32*, i32*, i32*, i32 }
%struct.svm_parameter = type { i32, i32, i32, double, double, double, double, double, i32, i32*, double*, double, double, i32, i32 }
%struct.svm_node = type { i32, double }

@.str = private unnamed_addr constant [60559 x i8] c"svm_type nu_svr\0Akernel_type rbf\0Agamma 6\0Anr_class 2\0Atotal_sv 1087\0Arho 0.107628\0ASV\0A-0.2927223412287951 1:0.2 2:0.2 3:0.4 4:0 \0A-0.2726129259719185 1:0.2 2:0.2 3:0.5 4:0 \0A-0.4429394065483267 1:0.2 2:0.2 3:0.6 4:0 \0A0.3450198571957915 1:0.2 2:0.2 3:0.8 4:0 \0A1 1:0.2 2:0.25 3:0.2 4:0 \0A0.9846600387002246 1:0.2 2:0.25 3:0.5 4:0 \0A0.4361932664094919 1:0.2 2:0.3 3:0.6 4:0 \0A0.08551999173355709 1:0.2 2:0.35 3:0.8 4:0 \0A-0.459481107722125 1:0.2 2:0.45 3:0.5 4:0 \0A-0.1858952118588858 1:0.2 2:0.45 3:0.7 4:0 \0A-0.7957932783829218 1:0.2 2:0.55 3:0.2 4:0 \0A0.201173403457083 1:0.2 2:0.65 3:0.2 4:0 \0A0.8261023125933521 1:0.2 2:0.65 3:0.5 4:0 \0A0.4516612607609173 1:0.2 2:0.7 3:0.4 4:0 \0A-0.2168200098537659 1:0.2 2:0.8 3:0.4 4:0 \0A0.5314932300947524 1:0.2 2:0.8 3:0.8 4:0 \0A0.1894221561591226 1:0.22 2:0.20512821 3:0.18181818 4:0 \0A0.04669279360300833 1:0.22 2:0.25641026 3:0.18181818 4:0 \0A0.05442681853246129 1:0.22 2:0.35897436 3:0.81818182 4:0 \0A0.09890021983512577 1:0.22 2:0.48717949 3:0.54545455 4:0 \0A0.2686554290098279 1:0.22 2:0.48717949 3:0.81818182 4:0 \0A1 1:0.22 2:0.64102564 3:0.18181818 4:0 \0A0.1405848790116045 1:0.22 2:0.69230769 3:0.18181818 4:0 \0A-0.5070959537201287 1:0.22 2:0.79487179 3:0.54545455 4:0 \0A-0.2040998984440571 1:0.22 2:0.79487179 3:0.63636364 4:0 \0A-0.277322771076097 1:0.26 2:0.18918919 3:0.76923077 4:0 \0A-0.5122670878026421 1:0.26 2:0.81081081 3:0.23076923 4:0 \0A-0.003446143251586718 1:0.26 2:0.81081081 3:0.30769231 4:0 \0A-0.006051421981500459 1:0.26 2:0.81081081 3:0.69230769 4:0 \0A-0.01320777229878266 1:0.28 2:0.19444444 3:0.71428571 4:0 \0A-0.4538142175974276 1:0.28 2:0.30555556 3:0.21428571 4:0 \0A0.0140336472877628 1:0.28 2:0.36111111 3:0.21428571 4:0 \0A0.0522868337454891 1:0.28 2:0.36111111 3:0.35714286 4:0 \0A0.1852481060118741 1:0.28 2:0.36111111 3:0.42857143 4:0 \0A-0.4358393994624578 1:0.28 2:0.36111111 3:0.57142857 4:0 \0A-0.2343703447951519 1:0.3 2:0.2 3:0.8 4:0 \0A-0.9597395476970447 1:0.3 2:0.25714286 3:0.26666667 4:0 \0A-0.5480748115196359 1:0.3 2:0.71428571 3:0.8 4:0 \0A-0.1966895021798862 1:0.3 2:0.74285714 3:0.2 4:0 \0A-0.986179782297503 1:0.32 2:0.26470588 3:0.1875 4:0 \0A0.1264535134306515 1:0.32 2:0.44117647 3:0.1875 4:0 \0A1 1:0.32 2:0.44117647 3:0.375 4:0 \0A-0.893806904379465 1:0.32 2:0.5 3:0.4375 4:0 \0A-0.7931835709843101 1:0.32 2:0.58823529 3:0.375 4:0 \0A-0.8163156631224802 1:0.32 2:0.70588235 3:0.375 4:0 \0A-0.003314954359327795 1:0.32 2:0.79411765 3:0.1875 4:0 \0A-0.1456865474887121 1:0.32 2:0.79411765 3:0.8125 4:0 \0A0.5610324283222747 1:0.36 2:0.1875 3:0.55555556 4:0 \0A-0.04161722392425331 1:0.36 2:0.25 3:0.72222222 4:0 \0A-1 1:0.36 2:0.3125 3:0.44444444 4:0 \0A-0.5195901595075548 1:0.36 2:0.40625 3:0.77777778 4:0 \0A0.2275848114312543 1:0.36 2:0.4375 3:0.55555556 4:0 \0A-0.5854291383914952 1:0.36 2:0.65625 3:0.22222222 4:0 \0A0.255909726051372 1:0.36 2:0.75 3:0.38888889 4:0 \0A1 1:0.36 2:0.8125 3:0.38888889 4:0 \0A0.3295257625292804 1:0.38 2:0.19354839 3:0.36842105 4:0 \0A-0.004752910545565455 1:0.38 2:0.29032258 3:0.57894737 4:0 \0A1 1:0.38 2:0.35483871 3:0.31578947 4:0 \0A0.3159226403578163 1:0.38 2:0.48387097 3:0.36842105 4:0 \0A-0.134250099024484 1:0.38 2:0.5483871 3:0.26315789 4:0 \0A0.04990819092532525 1:0.4 2:0.2 3:0.2 4:0 \0A0.04017129911346561 1:0.4 2:0.2 3:0.45 4:0 \0A-0.08021509680003584 1:0.4 2:0.76666667 3:0.8 4:0 \0A0.02158143681261617 1:0.4 2:0.8 3:0.5 4:0 \0A0.3958409337285195 1:0.42 2:0.34482759 3:0.23809524 4:0 \0A0.04041156896377561 1:0.42 2:0.4137931 3:0.28571429 4:0 \0A0.1115032812474313 1:0.42 2:0.4137931 3:0.47619048 4:0 \0A0.2759956991939458 1:0.42 2:0.55172414 3:0.47619048 4:0 \0A-0.07685550118721433 1:0.42 2:0.55172414 3:0.80952381 4:0 \0A-0.01256651815709847 1:0.42 2:0.68965517 3:0.38095238 4:0 \0A0.7207276317326755 1:0.42 2:0.75862069 3:0.23809524 4:0 \0A0.23452088756847 1:0.42 2:0.75862069 3:0.66666667 4:0 \0A0.02788924007552103 1:0.42 2:0.79310345 3:0.61904762 4:0 \0A0.604057819756918 1:0.46 2:0.18518519 3:0.2173913 4:0 \0A0.247380746046661 1:0.46 2:0.18518519 3:0.7826087 4:0 \0A0.08997914831911716 1:0.46 2:0.25925926 3:0.7826087 4:0 \0A0.02932569922822849 1:0.46 2:0.44444444 3:0.34782609 4:0 \0A0.1316585151236409 1:0.46 2:0.59259259 3:0.56521739 4:0 \0A0.1193027227882259 1:0.46 2:0.59259259 3:0.69565217 4:0 \0A0.02072600162046559 1:0.46 2:0.66666667 3:0.47826087 4:0 \0A0.1272669594189013 1:0.46 2:0.7037037 3:0.73913043 4:0 \0A0.2084687245068163 1:0.48 2:0.19230769 3:0.70833333 4:0 \0A0.002138491324302674 1:0.48 2:0.34615385 3:0.58333333 4:0 \0A0.7484445265964226 1:0.48 2:0.5 3:0.45833333 4:0 \0A0.4116408785512746 1:0.48 2:0.65384615 3:0.20833333 4:0 \0A0.02368313464240131 1:0.48 2:0.65384615 3:0.58333333 4:0 \0A0.09027199755744481 1:0.48 2:0.80769231 3:0.58333333 4:0 \0A0.00171413298196679 1:0.5 2:0.2 3:0.64 4:0 \0A1 1:0.5 2:0.32 3:0.72 4:0 \0A0.0227170077507995 1:0.5 2:0.36 3:0.4 4:0 \0A0.7430323769767297 1:0.5 2:0.4 3:0.2 4:0 \0A0.4282042375575376 1:0.5 2:0.44 3:0.72 4:0 \0A0.7656604063598283 1:0.5 2:0.72 3:0.8 4:0 \0A0.2609457667122108 1:0.5 2:0.8 3:0.64 4:0 \0A0.2094594877840361 1:0.52 2:0.20833333 3:0.19230769 4:0 \0A0.05380375239312347 1:0.52 2:0.20833333 3:0.76923077 4:0 \0A-0.4325084912736846 1:0.52 2:0.25 3:0.61538462 4:0 \0A-0.0793380554337809 1:0.52 2:0.33333333 3:0.46153846 4:0 \0A-1 1:0.56 2:0.31818182 3:0.28571429 4:0 \0A0.01668823635096308 1:0.56 2:0.63636364 3:0.35714286 4:0 \0A-0.02738497985877556 1:0.58 2:0.28571429 3:0.48275862 4:0 \0A-0.10680638899594 1:0.58 2:0.28571429 3:0.5862069 4:0 \0A-0.01250723377023471 1:0.58 2:0.57142857 3:0.5862069 4:0 \0A0.1106674059840921 1:0.58 2:0.66666667 3:0.20689655 4:0 \0A-0.1149086920967255 1:0.58 2:0.66666667 3:0.55172414 4:0 \0A-0.2613064173282288 1:0.58 2:0.71428571 3:0.48275862 4:0 \0A-0.9687293441993543 1:0.58 2:0.71428571 3:0.5862069 4:0 \0A-1 1:0.58 2:0.80952381 3:0.4137931 4:0 \0A0.0536759694016334 1:0.6 2:0.2 3:0.36666667 4:0 \0A-0.04285819561466013 1:0.6 2:0.2 3:0.6 4:0 \0A-0.4389684809502345 1:0.6 2:0.25 3:0.4 4:0 \0A-0.1867753580098935 1:0.6 2:0.25 3:0.53333333 4:0 \0A-1 1:0.6 2:0.3 3:0.5 4:0 \0A-1 1:0.6 2:0.35 3:0.53333333 4:0 \0A0.0102195364872924 1:0.6 2:0.45 3:0.2 4:0 \0A-0.1056748551941598 1:0.6 2:0.5 3:0.53333333 4:0 \0A-0.03941368050015077 1:0.6 2:0.7 3:0.36666667 4:0 \0A0.01122846326181984 1:0.62 2:0.21052632 3:0.48387097 4:0 \0A-0.1093764012354553 1:0.62 2:0.31578947 3:0.25806452 4:0 \0A-0.3452523390386049 1:0.62 2:0.36842105 3:0.25806452 4:0 \0A0.001050308109887437 1:0.62 2:0.36842105 3:0.35483871 4:0 \0A-0.06810597824396332 1:0.62 2:0.52631579 3:0.61290323 4:0 \0A-0.4199678265352947 1:0.62 2:0.63157895 3:0.35483871 4:0 \0A-0.44625697080628 1:0.62 2:0.73684211 3:0.48387097 4:0 \0A-0.01358287824488296 1:0.62 2:0.78947368 3:0.4516129 4:0 \0A-1 1:0.66 2:0.23529412 3:0.78787879 4:0 \0A-0.4954658033850093 1:0.66 2:0.41176471 3:0.3030303 4:0 \0A-0.4684521966805765 1:0.66 2:0.64705882 3:0.60606061 4:0 \0A-0.2793322948198178 1:0.66 2:0.76470588 3:0.3030303 4:0 \0A0.2849506022237858 1:0.66 2:0.82352941 3:0.45454545 4:0 \0A0.2554007801619184 1:0.68 2:0.1875 3:0.41176471 4:0 \0A0.1297831896837497 1:0.68 2:0.25 3:0.41176471 4:0 \0A-0.03753335664157343 1:0.68 2:0.25 3:0.70588235 4:0 \0A-0.02608031772002552 1:0.68 2:0.4375 3:0.26470588 4:0 \0A-1 1:0.68 2:0.6875 3:0.26470588 4:0 \0A-0.02281343883392093 1:0.68 2:0.75 3:0.26470588 4:0 \0A0.07151312712204054 1:0.68 2:0.75 3:0.55882353 4:0 \0A-1 1:0.68 2:0.75 3:0.64705882 4:0 \0A0.6163938656707675 1:0.68 2:0.8125 3:0.41176471 4:0 \0A0.05482582811772205 1:0.68 2:0.8125 3:0.64705882 4:0 \0A-0.1252295600791277 1:0.7 2:0.26666667 3:0.25714286 4:0 \0A-0.1454166861786485 1:0.7 2:0.46666667 3:0.65714286 4:0 \0A-0.1324013043130206 1:0.7 2:0.73333333 3:0.25714286 4:0 \0A-0.9445272199786531 1:0.7 2:0.73333333 3:0.8 4:0 \0A1 1:0.72 2:0.21428571 3:0.44444444 4:0 \0A1 1:0.72 2:0.21428571 3:0.5 4:0 \0A0.9626047312933887 1:0.72 2:0.28571429 3:0.44444444 4:0 \0A-0.4512578222546959 1:0.72 2:0.28571429 3:0.80555556 4:0 \0A0.05137185671884451 1:0.72 2:0.5 3:0.38888889 4:0 \0A0.02753015992226191 1:0.72 2:0.5 3:0.44444444 4:0 \0A1 1:0.72 2:0.57142857 3:0.36111111 4:0 \0A0.7224161439688335 1:0.72 2:0.64285714 3:0.44444444 4:0 \0A-0.4538030422695079 1:0.72 2:0.71428571 3:0.25 4:0 \0A0.9952961794932015 1:0.72 2:0.71428571 3:0.44444444 4:0 \0A1 1:0.72 2:0.78571429 3:0.5 4:0 \0A1 1:0.72 2:0.78571429 3:0.55555556 4:0 \0A-1 1:0.76 2:0.16666667 3:0.28947368 4:0 \0A0.7660150530906951 1:0.76 2:0.16666667 3:0.44736842 4:0 \0A1 1:0.76 2:0.25 3:0.5 4:0 \0A0.8071418590509907 1:0.76 2:0.25 3:0.65789474 4:0 \0A1 1:0.76 2:0.33333333 3:0.39473684 4:0 \0A1 1:0.76 2:0.33333333 3:0.44736842 4:0 \0A1 1:0.76 2:0.33333333 3:0.5 4:0 \0A0.003702315572620042 1:0.76 2:0.41666667 3:0.60526316 4:0 \0A1 1:0.76 2:0.66666667 3:0.5 4:0 \0A1 1:0.76 2:0.66666667 3:0.60526316 4:0 \0A1 1:0.76 2:0.75 3:0.5 4:0 \0A0.7595359045293272 1:0.76 2:0.83333333 3:0.21052632 4:0 \0A1 1:0.76 2:0.83333333 3:0.39473684 4:0 \0A0.1097435588968492 1:0.76 2:0.83333333 3:0.5 4:0 \0A0.08137302450917316 1:0.78 2:0.18181818 3:0.20512821 4:0 \0A1 1:0.78 2:0.18181818 3:0.74358974 4:0 \0A1 1:0.78 2:0.27272727 3:0.46153846 4:0 \0A0.3829037053297411 1:0.78 2:0.45454545 3:0.79487179 4:0 \0A0.299550505687713 1:0.78 2:0.54545455 3:0.69230769 4:0 \0A0.044287210520343 1:0.78 2:0.54545455 3:0.79487179 4:0 \0A-0.5366216412686633 1:0.78 2:0.63636364 3:0.30769231 4:0 \0A0.5647571890765837 1:0.78 2:0.72727273 3:0.41025641 4:0 \0A0.01149507040932693 1:0.78 2:0.72727273 3:0.64102564 4:0 \0A-0.04153684623206437 1:0.78 2:0.81818182 3:0.53846154 4:0 \0A-0.007108344628630045 1:0.78 2:0.81818182 3:0.64102564 4:0 \0A0.7459296102482841 1:0.78 2:0.81818182 3:0.74358974 4:0 \0A1 1:0.8 2:0.2 3:0.2 4:0 \0A-0.6031520655050495 1:0.8 2:0.2 3:0.3 4:0 \0A-1 1:0.8 2:0.2 3:0.4 4:0 \0A-0.007590751973352182 1:0.8 2:0.2 3:0.45 4:0 \0A-1 1:0.8 2:0.2 3:0.5 4:0 \0A-1 1:0.8 2:0.2 3:0.55 4:0 \0A-1 1:0.8 2:0.2 3:0.6 4:0 \0A0.2140711381845247 1:0.8 2:0.2 3:0.75 4:0 \0A0.2914211623767319 1:0.8 2:0.2 3:0.8 4:0 \0A0.3422740526001184 1:0.8 2:0.3 3:0.2 4:0 \0A-1 1:0.8 2:0.3 3:0.45 4:0 \0A-0.7318598706719721 1:0.8 2:0.3 3:0.6 4:0 \0A0.002418582009178758 1:0.8 2:0.3 3:0.75 4:0 \0A-1 1:0.8 2:0.4 3:0.35 4:0 \0A-0.005074312666051498 1:0.8 2:0.4 3:0.55 4:0 \0A0.2120811616220415 1:0.8 2:0.5 3:0.2 4:0 \0A-0.1458147825770993 1:0.8 2:0.5 3:0.3 4:0 \0A-0.1408059540929924 1:0.8 2:0.5 3:0.4 4:0 \0A-1 1:0.8 2:0.5 3:0.5 4:0 \0A0.2020908287310789 1:0.8 2:0.5 3:0.7 4:0 \0A-0.03836311858537843 1:0.8 2:0.6 3:0.5 4:0 \0A-0.05208260147723191 1:0.8 2:0.6 3:0.55 4:0 \0A-1 1:0.8 2:0.6 3:0.6 4:0 \0A1 1:0.8 2:0.7 3:0.2 4:0 \0A-0.002616444284925962 1:0.8 2:0.7 3:0.55 4:0 \0A0.03336205896390394 1:0.8 2:0.7 3:0.75 4:0 \0A-1 1:0.8 2:0.8 3:0.35 4:0 \0A-1 1:0.8 2:0.8 3:0.4 4:0 \0A-1 1:0.8 2:0.8 3:0.45 4:0 \0A-1 1:0.8 2:0.8 3:0.5 4:0 \0A-1 1:0.8 2:0.8 3:0.6 4:0 \0A0.6258957493805375 1:0.8 2:0.8 3:0.8 4:0 \0A-0.05890383128415338 1:0.2 2:0.2 3:0.4 4:0.14285714 \0A0.03647635472077591 1:0.2 2:0.25 3:0.8 4:0.14285714 \0A0.1330384093878337 1:0.2 2:0.3 3:0.6 4:0.14285714 \0A-0.4208995683100714 1:0.2 2:0.45 3:0.2 4:0.14285714 \0A-0.557073487577243 1:0.2 2:0.45 3:0.55 4:0.14285714 \0A-0.05778065221265551 1:0.2 2:0.5 3:0.2 4:0.14285714 \0A-0.0821523965757199 1:0.2 2:0.5 3:0.7 4:0.14285714 \0A-0.01106357914653276 1:0.2 2:0.5 3:0.75 4:0.14285714 \0A0.2208509066786977 1:0.2 2:0.7 3:0.2 4:0.14285714 \0A0.004213129842881305 1:0.2 2:0.7 3:0.65 4:0.14285714 \0A0.1444509344431197 1:0.2 2:0.7 3:0.7 4:0.14285714 \0A-0.007265625147452436 1:0.23 2:0.19480519 3:0.34782609 4:0.14285714 \0A-0.007697160588386425 1:0.23 2:0.80519481 3:0.47826087 4:0.14285714 \0A-0.1333712851609656 1:0.28 2:0.25 3:0.21428571 4:0.14285714 \0A0.05187998291430889 1:0.28 2:0.40277778 3:0.28571429 4:0.14285714 \0A-0.2538406552302359 1:0.28 2:0.80555556 3:0.21428571 4:0.14285714 \0A-0.1271073815193153 1:0.3 2:0.2 3:0.8 4:0.14285714 \0A-0.08926749735020217 1:0.3 2:0.25714286 3:0.76666667 4:0.14285714 \0A-0.4203489420977766 1:0.3 2:0.8 3:0.76666667 4:0.14285714 \0A-0.2747402138637966 1:0.33 2:0.25373134 3:0.21212121 4:0.14285714 \0A-0.1393985966029691 1:0.33 2:0.25373134 3:0.63636364 4:0.14285714 \0A-0.03086373130647553 1:0.33 2:0.25373134 3:0.78787879 4:0.14285714 \0A-0.2729129562834839 1:0.33 2:0.40298507 3:0.75757576 4:0.14285714 \0A-0.1025205733520323 1:0.33 2:0.74626866 3:0.78787879 4:0.14285714 \0A-0.5839198127710407 1:0.35 2:0.6 3:0.2 4:0.14285714 \0A0.1074730390951445 1:0.38 2:0.80645161 3:0.39473684 4:0.14285714 \0A0.3552745806839843 1:0.38 2:0.80645161 3:0.60526316 4:0.14285714 \0A0.01126243238999126 1:0.43 2:0.40350877 3:0.48837209 4:0.14285714 \0A0.04038161021121418 1:0.43 2:0.80701754 3:0.69767442 4:0.14285714 \0A0.2644052442057925 1:0.45 2:0.34545455 3:0.48888889 4:0.14285714 \0A0.5316143238083944 1:0.45 2:0.4 3:0.55555556 4:0.14285714 \0A0.153671635506366 1:0.45 2:0.65454545 3:0.44444444 4:0.14285714 \0A0.001853029148417819 1:0.45 2:0.65454545 3:0.6 4:0.14285714 \0A0.003474698564137756 1:0.48 2:0.80769231 3:0.70833333 4:0.14285714 \0A0.04543394257623733 1:0.5 2:0.2 3:0.8 4:0.14285714 \0A0.004201899525712433 1:0.5 2:0.54 3:0.6 4:0.14285714 \0A0.0338300334523025 1:0.5 2:0.66 3:0.76 4:0.14285714 \0A0.003604719473749735 1:0.5 2:0.8 3:0.3 4:0.14285714 \0A-0.08350786336560617 1:0.53 2:0.25531915 3:0.30188679 4:0.14285714 \0A0.005826885062962134 1:0.55 2:0.4 3:0.8 4:0.14285714 \0A0.01275942950410902 1:0.55 2:0.64444444 3:0.2 4:0.14285714 \0A-0.2646298131150417 1:0.55 2:0.71111111 3:0.49090909 4:0.14285714 \0A0.08041238064858627 1:0.55 2:0.71111111 3:0.8 4:0.14285714 \0A-0.02835087907106976 1:0.58 2:0.26190476 3:0.55172414 4:0.14285714 \0A-0.4387425916769603 1:0.58 2:0.30952381 3:0.55172414 4:0.14285714 \0A0.1919667661844888 1:0.58 2:0.35714286 3:0.75862069 4:0.14285714 \0A-1 1:0.58 2:0.76190476 3:0.5 4:0.14285714 \0A-0.1118421025622999 1:0.6 2:0.25 3:0.5 4:0.14285714 \0A-0.5397389560549869 1:0.6 2:0.3 3:0.5 4:0.14285714 \0A-0.1785796450980187 1:0.6 2:0.75 3:0.3 4:0.14285714 \0A-0.02549557919331509 1:0.6 2:0.8 3:0.5 4:0.14285714 \0A-0.1029820350882626 1:0.63 2:0.18918919 3:0.25396825 4:0.14285714 \0A-0.4697941061773594 1:0.63 2:0.18918919 3:0.6031746 4:0.14285714 \0A-0.4001830643737279 1:0.63 2:0.24324324 3:0.65079365 4:0.14285714 \0A-0.1416780168834583 1:0.63 2:0.35135135 3:0.25396825 4:0.14285714 \0A-0.4338506307544635 1:0.63 2:0.75675676 3:0.6031746 4:0.14285714 \0A-0.04097893986667835 1:0.65 2:0.34285714 3:0.6 4:0.14285714 \0A-0.3087974444328873 1:0.65 2:0.65714286 3:0.55384615 4:0.14285714 \0A-0.377614746078065 1:0.65 2:0.74285714 3:0.49230769 4:0.14285714 \0A-0.00772762918944356 1:0.68 2:0.1875 3:0.25 4:0.14285714 \0A-0.369728605517054 1:0.68 2:0.25 3:0.20588235 4:0.14285714 \0A-0.004000501889438193 1:0.68 2:0.34375 3:0.70588235 4:0.14285714 \0A-0.07274170034356166 1:0.68 2:0.6875 3:0.25 4:0.14285714 \0A-0.8184396606503874 1:0.68 2:0.75 3:0.20588235 4:0.14285714 \0A-0.1363872683894876 1:0.68 2:0.8125 3:0.79411765 4:0.14285714 \0A-1 1:0.7 2:0.2 3:0.25714286 4:0.14285714 \0A-0.03118028369527123 1:0.7 2:0.2 3:0.75714286 4:0.14285714 \0A-0.02181363186270414 1:0.7 2:0.26666667 3:0.2 4:0.14285714 \0A-0.1113302533497955 1:0.73 2:0.18518519 3:0.20547945 4:0.14285714 \0A1 1:0.73 2:0.25925926 3:0.45205479 4:0.14285714 \0A-0.03442737834664072 1:0.73 2:0.2962963 3:0.24657534 4:0.14285714 \0A-0.4178121191901863 1:0.73 2:0.33333333 3:0.79452055 4:0.14285714 \0A0.9528580345965603 1:0.73 2:0.7037037 3:0.45205479 4:0.14285714 \0A-0.2024630768603559 1:0.73 2:0.74074074 3:0.79452055 4:0.14285714 \0A1 1:0.75 2:0.24 3:0.4 4:0.14285714 \0A0.1244479011966203 1:0.75 2:0.24 3:0.6 4:0.14285714 \0A-0.002202590904183391 1:0.75 2:0.24 3:0.8 4:0.14285714 \0A-0.4228940084880581 1:0.75 2:0.32 3:0.25333333 4:0.14285714 \0A0.01217370372007936 1:0.75 2:0.32 3:0.34666667 4:0.14285714 \0A-0.001694578380018039 1:0.75 2:0.36 3:0.25333333 4:0.14285714 \0A0.01572921427924467 1:0.75 2:0.44 3:0.4 4:0.14285714 \0A0.04952274628581792 1:0.75 2:0.72 3:0.4 4:0.14285714 \0A1 1:0.75 2:0.76 3:0.45333333 4:0.14285714 \0A0.9407620893274501 1:0.75 2:0.76 3:0.54666667 4:0.14285714 \0A0.9159871506295172 1:0.75 2:0.8 3:0.45333333 4:0.14285714 \0A-0.4292340325390916 1:0.75 2:0.8 3:0.8 4:0.14285714 \0A-0.1660503683447014 1:0.78 2:0.18181818 3:0.29487179 4:0.14285714 \0A0.4084556146085806 1:0.78 2:0.40909091 3:0.65384615 4:0.14285714 \0A-1 1:0.78 2:0.81818182 3:0.44871795 4:0.14285714 \0A0.4081461388888754 1:0.8 2:0.2 3:0.2 4:0.14285714 \0A-0.1138377046011816 1:0.8 2:0.2 3:0.35 4:0.14285714 \0A-0.08204833433519138 1:0.8 2:0.2 3:0.4 4:0.14285714 \0A-1 1:0.8 2:0.2 3:0.45 4:0.14285714 \0A-0.002485088614037121 1:0.8 2:0.2 3:0.5 4:0.14285714 \0A-1 1:0.8 2:0.2 3:0.55 4:0.14285714 \0A0.2402871418260354 1:0.8 2:0.25 3:0.2 4:0.14285714 \0A-0.5315970292804028 1:0.8 2:0.35 3:0.5 4:0.14285714 \0A-0.1114097110919589 1:0.8 2:0.4 3:0.4 4:0.14285714 \0A-0.01249520546891368 1:0.8 2:0.4 3:0.5 4:0.14285714 \0A-0.2953993719277596 1:0.8 2:0.5 3:0.5 4:0.14285714 \0A0.04302323505133746 1:0.8 2:0.55 3:0.2 4:0.14285714 \0A-0.1892517932217734 1:0.8 2:0.55 3:0.45 4:0.14285714 \0A-1 1:0.8 2:0.6 3:0.5 4:0.14285714 \0A-0.07615250020872869 1:0.8 2:0.6 3:0.55 4:0.14285714 \0A-0.06063302759572581 1:0.8 2:0.75 3:0.5 4:0.14285714 \0A0.1129148440567782 1:0.8 2:0.75 3:0.65 4:0.14285714 \0A-0.2346450853926897 1:0.8 2:0.8 3:0.4 4:0.14285714 \0A-1 1:0.8 2:0.8 3:0.5 4:0.14285714 \0A-1 1:0.8 2:0.8 3:0.55 4:0.14285714 \0A0.2647835241855724 1:0.2 2:0.2 3:0.2 4:0.28571429 \0A0.021681655614574 1:0.2 2:0.25 3:0.2 4:0.28571429 \0A0.1368832376463672 1:0.2 2:0.25 3:0.6 4:0.28571429 \0A0.01423844029360578 1:0.2 2:0.3 3:0.26666667 4:0.28571429 \0A0.1899008202167059 1:0.2 2:0.3 3:0.8 4:0.28571429 \0A0.1287169622780912 1:0.2 2:0.65 3:0.8 4:0.28571429 \0A0.2578924180293748 1:0.2 2:0.7 3:0.2 4:0.28571429 \0A0.08404345905705299 1:0.2 2:0.7 3:0.66666667 4:0.28571429 \0A0.07439491108482238 1:0.2 2:0.7 3:0.8 4:0.28571429 \0A-0.0006432778063540903 1:0.2 2:0.8 3:0.5 4:0.28571429 \0A0.05858956823467007 1:0.22666667 2:0.44827586 3:0.26470588 4:0.28571429 \0A0.01298937884942149 1:0.25333333 2:0.40178571 3:0.21052632 4:0.28571429 \0A0.3882896025954724 1:0.25333333 2:0.44642857 3:0.26315789 4:0.28571429 \0A-0.00911067268374835 1:0.25333333 2:0.80357143 3:0.21052632 4:0.28571429 \0A0.009029008671931273 1:0.27333333 2:0.40366972 3:0.19512195 4:0.28571429 \0A0.1418349141289324 1:0.27333333 2:0.44954128 3:0.29268293 4:0.28571429 \0A0.008227725372700887 1:0.27333333 2:0.44954128 3:0.80487805 4:0.28571429 \0A-0.04299167054302689 1:0.27333333 2:0.75229358 3:0.24390244 4:0.28571429 \0A-0.006162251566841708 1:0.3 2:0.8 3:0.2 4:0.28571429 \0A-0.09111327900633509 1:0.32666667 2:0.65346535 3:0.34693878 4:0.28571429 \0A-0.0258054626265483 1:0.32666667 2:0.7029703 3:0.75510204 4:0.28571429 \0A-0.02415259045870603 1:0.35333333 2:0.70103093 3:0.24528302 4:0.28571429 \0A-0.1469180116478655 1:0.4 2:0.54444444 3:0.8 4:0.28571429 \0A0.2833072553696485 1:0.42666667 2:0.34883721 3:0.59375 4:0.28571429 \0A0.01355303406923013 1:0.42666667 2:0.39534884 3:0.546875 4:0.28571429 \0A0.2290844196739131 1:0.42666667 2:0.65116279 3:0.546875 4:0.28571429 \0A0.1178570908434999 1:0.45333333 2:0.19512195 3:0.54411765 4:0.28571429 \0A0.06046243672977385 1:0.45333333 2:0.40243902 3:0.60294118 4:0.28571429 \0A0.1423946457416378 1:0.45333333 2:0.80487805 3:0.39705882 4:0.28571429 \0A0.007815430579740863 1:0.45333333 2:0.80487805 3:0.64705882 4:0.28571429 \0A0.1924781143075323 1:0.47333333 2:0.20253165 3:0.70422535 4:0.28571429 \0A0.1855963432528384 1:0.47333333 2:0.20253165 3:0.8028169 4:0.28571429 \0A0.1640009200706116 1:0.47333333 2:0.69620253 3:0.1971831 4:0.28571429 \0A0.3932828126755543 1:0.47333333 2:0.79746835 3:0.1971831 4:0.28571429 \0A0.7186588869997429 1:0.5 2:0.2 3:0.2 4:0.28571429 \0A0.0003513297812071051 1:0.5 2:0.2 3:0.34666667 4:0.28571429 \0A0.1391389801747556 1:0.5 2:0.25333333 3:0.65333333 4:0.28571429 \0A0.02330878996106901 1:0.5 2:0.25333333 3:0.8 4:0.28571429 \0A0.1519866436548091 1:0.5 2:0.30666667 3:0.2 4:0.28571429 \0A0.1186781443459868 1:0.5 2:0.34666667 3:0.74666667 4:0.28571429 \0A0.1053191571248003 1:0.5 2:0.49333333 3:0.6 4:0.28571429 \0A0.005010086400107649 1:0.5 2:0.54666667 3:0.49333333 4:0.28571429 \0A0.5653119554363314 1:0.52666667 2:0.74647887 3:0.79746835 4:0.28571429 \0A0.06787622926551946 1:0.52666667 2:0.8028169 3:0.74683544 4:0.28571429 \0A0.001058097652629706 1:0.55333333 2:0.25373134 3:0.79518072 4:0.28571429 \0A0.001766944959780314 1:0.55333333 2:0.40298507 3:0.79518072 4:0.28571429 \0A0.5857686285893017 1:0.55333333 2:0.65671642 3:0.20481928 4:0.28571429 \0A0.001017985380128487 1:0.57333333 2:0.203125 3:0.19767442 4:0.28571429 \0A0.03512297285302611 1:0.57333333 2:0.296875 3:0.80232558 4:0.28571429 \0A0.008309229153038602 1:0.57333333 2:0.34375 3:0.80232558 4:0.28571429 \0A0.307063276071051 1:0.57333333 2:0.453125 3:0.19767442 4:0.28571429 \0A0.1341512308934816 1:0.57333333 2:0.5 3:0.19767442 4:0.28571429 \0A0.0483398403718592 1:0.57333333 2:0.65625 3:0.80232558 4:0.28571429 \0A0.005577641881525733 1:0.6 2:0.5 3:0.2 4:0.28571429 \0A-1 1:0.62666667 2:0.30357143 3:0.5 4:0.28571429 \0A-0.1159527443159792 1:0.62666667 2:0.64285714 3:0.55319149 4:0.28571429 \0A-0.3556519136527647 1:0.65333333 2:0.34615385 3:0.5 4:0.28571429 \0A-0.5918258654696605 1:0.65333333 2:0.69230769 3:0.70408163 4:0.28571429 \0A-0.1263493413988876 1:0.67333333 2:0.75510204 3:0.24752475 4:0.28571429 \0A-0.001641870786415262 1:0.7 2:0.31111111 3:0.75238095 4:0.28571429 \0A0.02380087741021985 1:0.72666667 2:0.19512195 3:0.44954128 4:0.28571429 \0A1 1:0.72666667 2:0.19512195 3:0.49541284 4:0.28571429 \0A0.03843513168876561 1:0.72666667 2:0.19512195 3:0.59633028 4:0.28571429 \0A1 1:0.72666667 2:0.24390244 3:0.44954128 4:0.28571429 \0A0.4678339575411229 1:0.72666667 2:0.29268293 3:0.34862385 4:0.28571429 \0A1 1:0.72666667 2:0.29268293 3:0.44954128 4:0.28571429 \0A0.01584004362090234 1:0.72666667 2:0.75609756 3:0.34862385 4:0.28571429 \0A0.8621565629217485 1:0.72666667 2:0.80487805 3:0.59633028 4:0.28571429 \0A0.687293686384469 1:0.75333333 2:0.18918919 3:0.49557522 4:0.28571429 \0A1 1:0.75333333 2:0.18918919 3:0.60176991 4:0.28571429 \0A1 1:0.75333333 2:0.24324324 3:0.45132743 4:0.28571429 \0A0.01568821461940785 1:0.75333333 2:0.45945946 3:0.3539823 4:0.28571429 \0A1 1:0.75333333 2:0.7027027 3:0.60176991 4:0.28571429 \0A1 1:0.75333333 2:0.75675676 3:0.39823009 4:0.28571429 \0A0.03834645770322982 1:0.75333333 2:0.75675676 3:0.49557522 4:0.28571429 \0A0.006534719682771545 1:0.75333333 2:0.75675676 3:0.54867257 4:0.28571429 \0A1 1:0.75333333 2:0.75675676 3:0.6460177 4:0.28571429 \0A1 1:0.75333333 2:0.81081081 3:0.45132743 4:0.28571429 \0A0.00329061097157861 1:0.75333333 2:0.81081081 3:0.54867257 4:0.28571429 \0A0.1447348638769029 1:0.75333333 2:0.81081081 3:0.60176991 4:0.28571429 \0A0.04806360024793592 1:0.75333333 2:0.81081081 3:0.6460177 4:0.28571429 \0A0.6848522543397942 1:0.77333333 2:0.26470588 3:0.44827586 4:0.28571429 \0A0.8313263807588944 1:0.77333333 2:0.26470588 3:0.60344828 4:0.28571429 \0A0.0009807846298986874 1:0.77333333 2:0.5 3:0.39655172 4:0.28571429 \0A0.8000565261146639 1:0.77333333 2:0.5 3:0.60344828 4:0.28571429 \0A0.3970087667656403 1:0.77333333 2:0.58823529 3:0.44827586 4:0.28571429 \0A0.246173505555486 1:0.77333333 2:0.64705882 3:0.39655172 4:0.28571429 \0A0.06848815914870858 1:0.77333333 2:0.64705882 3:0.64655172 4:0.28571429 \0A0.2166373327562426 1:0.77333333 2:0.70588235 3:0.35344828 4:0.28571429 \0A0.001447740450808778 1:0.77333333 2:0.70588235 3:0.55172414 4:0.28571429 \0A0.3759936878439463 1:0.77333333 2:0.76470588 3:0.39655172 4:0.28571429 \0A0.01440033584811751 1:0.77333333 2:0.76470588 3:0.60344828 4:0.28571429 \0A0.1145987394309219 1:0.77333333 2:0.79411765 3:0.64655172 4:0.28571429 \0A0.7808280177979096 1:0.8 2:0.2 3:0.2 4:0.28571429 \0A-0.01094982456318567 1:0.8 2:0.2 3:0.4 4:0.28571429 \0A-1 1:0.8 2:0.2 3:0.45 4:0.28571429 \0A-0.7993432355433207 1:0.8 2:0.2 3:0.5 4:0.28571429 \0A0.1082260120851962 1:0.8 2:0.2 3:0.75 4:0.28571429 \0A0.1440633092276004 1:0.8 2:0.5 3:0.2 4:0.28571429 \0A-0.09759508856854318 1:0.8 2:0.5 3:0.5 4:0.28571429 \0A0.3777344926585111 1:0.8 2:0.8 3:0.2 4:0.28571429 \0A-0.07545914768242526 1:0.8 2:0.8 3:0.45 4:0.28571429 \0A-1 1:0.8 2:0.8 3:0.5 4:0.28571429 \0A-0.002156228737567375 1:0.8 2:0.8 3:0.55 4:0.28571429 \0A0.4283076007228073 1:0.8 2:0.8 3:0.8 4:0.28571429 \0A0.04449615215339716 1:0.2 2:0.2 3:0.2 4:0.42857143 \0A-0.1320752029012897 1:0.2 2:0.45 3:0.2 4:0.42857143 \0A-0.008173294645595859 1:0.2 2:0.45 3:0.45 4:0.42857143 \0A-0.02861952088231923 1:0.2 2:0.45 3:0.55 4:0.42857143 \0A-0.04285391432322713 1:0.2 2:0.45 3:0.75 4:0.42857143 \0A-0.03667294100190568 1:0.2 2:0.5 3:0.2 4:0.42857143 \0A-0.1060132208632206 1:0.2 2:0.5 3:0.75 4:0.42857143 \0A0.02051146031102578 1:0.2 2:0.7 3:0.8 4:0.42857143 \0A-0.01369795763331014 1:0.25 2:0.2 3:0.36 4:0.42857143 \0A-0.001352778532604716 1:0.25 2:0.25333333 3:0.44 4:0.42857143 \0A-0.03400937633471584 1:0.25 2:0.8 3:0.2 4:0.42857143 \0A-0.005384325095049922 1:0.275 2:0.24827586 3:0.49090909 4:0.42857143 \0A-0.0111263929259949 1:0.275 2:0.35172414 3:0.54545455 4:0.42857143 \0A-0.01951469286690584 1:0.3 2:0.2 3:0.3 4:0.42857143 \0A-0.1552811090343472 1:0.3 2:0.2 3:0.75 4:0.42857143 \0A-0.0137987704448756 1:0.3 2:0.25 3:0.35 4:0.42857143 \0A-0.1786137209424445 1:0.3 2:0.25 3:0.8 4:0.42857143 \0A-0.01834540145898148 1:0.3 2:0.65 3:0.25 4:0.42857143 \0A-0.2255387329099477 1:0.3 2:0.7 3:0.25 4:0.42857143 \0A-0.02516095707745136 1:0.3 2:0.75 3:0.2 4:0.42857143 \0A-0.07392356826959016 1:0.3 2:0.75 3:0.75 4:0.42857143 \0A-0.04231250680862637 1:0.3 2:0.8 3:0.25 4:0.42857143 \0A-0.007663882117388645 1:0.325 2:0.2 3:0.8 4:0.42857143 \0A-0.7457320431438289 1:0.325 2:0.25185185 3:0.2 4:0.42857143 \0A-0.005503494796048242 1:0.325 2:0.25185185 3:0.30769231 4:0.42857143 \0A-0.001357273457763573 1:0.325 2:0.25185185 3:0.44615385 4:0.42857143 \0A-0.02015869753707464 1:0.325 2:0.3037037 3:0.24615385 4:0.42857143 \0A-0.04255692541375034 1:0.325 2:0.34814815 3:0.75384615 4:0.42857143 \0A-0.05411001805859944 1:0.325 2:0.65185185 3:0.8 4:0.42857143 \0A-0.08191081364503378 1:0.325 2:0.7037037 3:0.75384615 4:0.42857143 \0A-0.05923912901288052 1:0.325 2:0.7037037 3:0.8 4:0.42857143 \0A-0.03592875561387267 1:0.35 2:0.6 3:0.75714286 4:0.42857143 \0A-0.02171630930494084 1:0.35 2:0.7 3:0.8 4:0.42857143 \0A-0.001105494591186577 1:0.35 2:0.75384615 3:0.75714286 4:0.42857143 \0A0.001216039687282729 1:0.4 2:0.8 3:0.4 4:0.42857143 \0A0.05922077774052074 1:0.4 2:0.8 3:0.5 4:0.42857143 \0A0.008878074635266964 1:0.425 2:0.2 3:0.64705882 4:0.42857143 \0A0.00240311616155475 1:0.425 2:0.8 3:0.44705882 4:0.42857143 \0A0.00212795440596023 1:0.425 2:0.8 3:0.55294118 4:0.42857143 \0A0.003011615226619774 1:0.45 2:0.5 3:0.54444444 4:0.42857143 \0A0.000889952066608308 1:0.475 2:0.2 3:0.65263158 4:0.42857143 \0A0.2330519838926279 1:0.525 2:0.25263158 3:0.8 4:0.42857143 \0A0.2166590972157478 1:0.525 2:0.74736842 3:0.8 4:0.42857143 \0A0.001579206099347716 1:0.525 2:0.8 3:0.2 4:0.42857143 \0A0.2059543629381529 1:0.55 2:0.4 3:0.8 4:0.42857143 \0A0.3544032919837971 1:0.55 2:0.65555556 3:0.8 4:0.42857143 \0A0.0008769784313698531 1:0.55 2:0.7 3:0.2 4:0.42857143 \0A0.1654339889057651 1:0.575 2:0.70588235 3:0.8 4:0.42857143 \0A-0.2791311562633449 1:0.575 2:0.75294118 3:0.45217391 4:0.42857143 \0A0.01972528685563882 1:0.575 2:0.8 3:0.8 4:0.42857143 \0A-0.001859120554721611 1:0.6 2:0.25 3:0.45 4:0.42857143 \0A0.01521119394645598 1:0.6 2:0.7 3:0.8 4:0.42857143 \0A-0.9223908503283474 1:0.625 2:0.25333333 3:0.496 4:0.42857143 \0A-1 1:0.625 2:0.25333333 3:0.552 4:0.42857143 \0A-0.2352518579793432 1:0.625 2:0.25333333 3:0.704 4:0.42857143 \0A-0.0472020210341995 1:0.625 2:0.34666667 3:0.448 4:0.42857143 \0A-0.1330625705416863 1:0.625 2:0.65333333 3:0.304 4:0.42857143 \0A-0.104505740722707 1:0.625 2:0.65333333 3:0.4 4:0.42857143 \0A-0.01211026267195599 1:0.625 2:0.70666667 3:0.448 4:0.42857143 \0A-0.1624866852405818 1:0.625 2:0.74666667 3:0.304 4:0.42857143 \0A-0.6755767835097863 1:0.625 2:0.74666667 3:0.496 4:0.42857143 \0A-0.179727315540498 1:0.625 2:0.74666667 3:0.552 4:0.42857143 \0A-0.1947022071502777 1:0.65 2:0.3 3:0.54615385 4:0.42857143 \0A-0.1388364121640707 1:0.65 2:0.3 3:0.6 4:0.42857143 \0A-0.3513782507249655 1:0.65 2:0.7 3:0.65384615 4:0.42857143 \0A-0.001406497278172898 1:0.65 2:0.75714286 3:0.3 4:0.42857143 \0A-0.0438949424857122 1:0.65 2:0.75714286 3:0.35384615 4:0.42857143 \0A-0.5861222587895963 1:0.65 2:0.75714286 3:0.75384615 4:0.42857143 \0A-0.0361440295670948 1:0.675 2:0.2 3:0.7037037 4:0.42857143 \0A-0.03168218904821609 1:0.675 2:0.2 3:0.74814815 4:0.42857143 \0A-0.003747695993699025 1:0.675 2:0.24615385 3:0.74814815 4:0.42857143 \0A-0.04675371702530456 1:0.675 2:0.30769231 3:0.74814815 4:0.42857143 \0A-0.8109528681711682 1:0.675 2:0.70769231 3:0.25185185 4:0.42857143 \0A-0.8911076996529095 1:0.675 2:0.70769231 3:0.74814815 4:0.42857143 \0A-0.2263163476346403 1:0.675 2:0.75384615 3:0.25185185 4:0.42857143 \0A-0.1921678812639322 1:0.7 2:0.2 3:0.25 4:0.42857143 \0A-0.007285272058103063 1:0.7 2:0.2 3:0.75 4:0.42857143 \0A-1 1:0.7 2:0.25 3:0.75 4:0.42857143 \0A-1 1:0.7 2:0.3 3:0.25 4:0.42857143 \0A-0.0236018935393915 1:0.7 2:0.3 3:0.8 4:0.42857143 \0A-0.5232369862086025 1:0.7 2:0.35 3:0.25 4:0.42857143 \0A-0.8130657464326642 1:0.7 2:0.7 3:0.25 4:0.42857143 \0A-0.004110223176895826 1:0.7 2:0.7 3:0.75 4:0.42857143 \0A-1 1:0.725 2:0.2 3:0.24827586 4:0.42857143 \0A0.1638768425151584 1:0.725 2:0.25454545 3:0.4 4:0.42857143 \0A-0.7174604370704605 1:0.725 2:0.74545455 3:0.75172414 4:0.42857143 \0A0.1372581740331562 1:0.725 2:0.8 3:0.55172414 4:0.42857143 \0A0.01055705620778266 1:0.75 2:0.2 3:0.54666667 4:0.42857143 \0A-0.0008443805696940013 1:0.75 2:0.3 3:0.25333333 4:0.42857143 \0A0.001780525801334438 1:0.75 2:0.66 3:0.4 4:0.42857143 \0A0.001675251116332548 1:0.75 2:0.76 3:0.4 4:0.42857143 \0A0.01323754712913269 1:0.75 2:0.76 3:0.6 4:0.42857143 \0A-0.411674530569151 1:0.8 2:0.2 3:0.4 4:0.42857143 \0A-1 1:0.8 2:0.2 3:0.45 4:0.42857143 \0A-1 1:0.8 2:0.2 3:0.5 4:0.42857143 \0A-0.75461358794671 1:0.8 2:0.2 3:0.55 4:0.42857143 \0A0.2987332118889874 1:0.8 2:0.2 3:0.8 4:0.42857143 \0A-0.02227962965903978 1:0.8 2:0.25 3:0.5 4:0.42857143 \0A-1 1:0.8 2:0.45 3:0.5 4:0.42857143 \0A0.001181195808661355 1:0.8 2:0.5 3:0.2 4:0.42857143 \0A-0.6161856681782628 1:0.8 2:0.5 3:0.5 4:0.42857143 \0A0.01125340726895895 1:0.8 2:0.55 3:0.2 4:0.42857143 \0A-1 1:0.8 2:0.6 3:0.5 4:0.42857143 \0A0.03123703831069516 1:0.8 2:0.6 3:0.8 4:0.42857143 \0A0.02521815927875169 1:0.8 2:0.7 3:0.65 4:0.42857143 \0A0.07336201444913903 1:0.8 2:0.8 3:0.2 4:0.42857143 \0A-0.01191244330449675 1:0.8 2:0.8 3:0.4 4:0.42857143 \0A-1 1:0.8 2:0.8 3:0.45 4:0.42857143 \0A-1 1:0.8 2:0.8 3:0.5 4:0.42857143 \0A-1 1:0.8 2:0.8 3:0.55 4:0.42857143 \0A0.002198590939771857 1:0.8 2:0.8 3:0.8 4:0.42857143 \0A0.3194094591056422 1:0.2 2:0.2 3:0.2 4:0.57142857 \0A0.2595885432610891 1:0.2 2:0.25 3:0.8 4:0.57142857 \0A-0.1770491446174749 1:0.2 2:0.45 3:0.2 4:0.57142857 \0A-0.01841316628279822 1:0.2 2:0.45 3:0.54 4:0.57142857 \0A-0.01268408793050939 1:0.2 2:0.45 3:0.66 4:0.57142857 \0A-0.001506635066443852 1:0.2 2:0.45 3:0.76 4:0.57142857 \0A0.1061722873362782 1:0.2 2:0.7 3:0.2 4:0.57142857 \0A0.02238808426242592 1:0.2 2:0.7 3:0.44 4:0.57142857 \0A0.05702925024283817 1:0.2 2:0.7 3:0.8 4:0.57142857 \0A0.02800424883592251 1:0.2 2:0.75 3:0.2 4:0.57142857 \0A0.00829044182454871 1:0.2 2:0.75 3:0.8 4:0.57142857 \0A-0.07003728618346666 1:0.276 2:0.24861878 3:0.69565217 4:0.57142857 \0A-0.03781633793147846 1:0.3 2:0.25142857 3:0.74666667 4:0.57142857 \0A-0.03358578288225392 1:0.3 2:0.8 3:0.2 4:0.57142857 \0A-0.04833751100888517 1:0.324 2:0.20118343 3:0.80246914 4:0.57142857 \0A-0.004432077490535249 1:0.324 2:0.69822485 3:0.75308642 4:0.57142857 \0A-0.05375455051619905 1:0.324 2:0.69822485 3:0.80246914 4:0.57142857 \0A-0.01037199916183614 1:0.324 2:0.75147929 3:0.19753086 4:0.57142857 \0A-0.02998256884048648 1:0.324 2:0.75147929 3:0.75308642 4:0.57142857 \0A-0.02065736240185986 1:0.324 2:0.79881657 3:0.24691358 4:0.57142857 \0A0.009017946376014389 1:0.376 2:0.3974359 3:0.44680851 4:0.57142857 \0A-0.03792786104854817 1:0.376 2:0.5 3:0.75531915 4:0.57142857 \0A0.0193021194933604 1:0.376 2:0.80128205 3:0.44680851 4:0.57142857 \0A0.0684274892586022 1:0.424 2:0.20138889 3:0.60377358 4:0.57142857 \0A0.2600151072698819 1:0.424 2:0.45138889 3:0.54716981 4:0.57142857 \0A5.458371023339161e-05 1:0.424 2:0.65277778 3:0.54716981 4:0.57142857 \0A0.006734190379347979 1:0.452 2:0.40145985 3:0.60176991 4:0.57142857 \0A0.005928042087922652 1:0.452 2:0.70072993 3:0.39823009 4:0.57142857 \0A0.001302010514431515 1:0.452 2:0.80291971 3:0.3539823 4:0.57142857 \0A0.1716399182562681 1:0.476 2:0.19847328 3:0.20168067 4:0.57142857 \0A0.004898400991859377 1:0.476 2:0.19847328 3:0.54621849 4:0.57142857 \0A0.007016443173052275 1:0.476 2:0.35114504 3:0.64705882 4:0.57142857 \0A0.06625124834530353 1:0.476 2:0.45038168 3:0.54621849 4:0.57142857 \0A0.1005455492686157 1:0.476 2:0.54961832 3:0.49579832 4:0.57142857 \0A0.01483612926449989 1:0.476 2:0.80152672 3:0.74789916 4:0.57142857 \0A0.1065167994688365 1:0.5 2:0.2 3:0.2 4:0.57142857 \0A0.09720847552961118 1:0.5 2:0.4 3:0.2 4:0.57142857 \0A0.007485338950095891 1:0.5 2:0.552 3:0.648 4:0.57142857 \0A0.002147017645761106 1:0.5 2:0.6 3:0.552 4:0.57142857 \0A0.06531942867022551 1:0.524 2:0.35294118 3:0.19847328 4:0.57142857 \0A0.006154569430117123 1:0.524 2:0.45378151 3:0.64885496 4:0.57142857 \0A0.02958516659478695 1:0.524 2:0.69747899 3:0.19847328 4:0.57142857 \0A0.09955755650528754 1:0.524 2:0.69747899 3:0.80152672 4:0.57142857 \0A0.013454134094283 1:0.552 2:0.34821429 3:0.20289855 4:0.57142857 \0A0.01154884317034955 1:0.6 2:0.4 3:0.2 4:0.57142857 \0A0.1814901818515004 1:0.6 2:0.45 3:0.2 4:0.57142857 \0A0.01778765539520384 1:0.6 2:0.5 3:0.2 4:0.57142857 \0A-0.01407976429396099 1:0.6 2:0.8 3:0.4 4:0.57142857 \0A-0.04252902032675845 1:0.652 2:0.1954023 3:0.6993865 4:0.57142857 \0A-0.03068500352356344 1:0.652 2:0.74712644 3:0.6993865 4:0.57142857 \0A-0.6083678203330157 1:0.652 2:0.8045977 3:0.6993865 4:0.57142857 \0A-0.01158786855433167 1:0.676 2:0.7037037 3:0.69822485 4:0.57142857 \0A0.006589358912672718 1:0.7 2:0.2 3:0.45142857 4:0.57142857 \0A-0.07604407913201865 1:0.7 2:0.30666667 3:0.74857143 4:0.57142857 \0A1 1:0.724 2:0.20289855 3:0.39779006 4:0.57142857 \0A0.6046517325982751 1:0.724 2:0.20289855 3:0.49723757 4:0.57142857 \0A0.007487814143337811 1:0.724 2:0.20289855 3:0.55248619 4:0.57142857 \0A1 1:0.724 2:0.24637681 3:0.44751381 4:0.57142857 \0A1 1:0.724 2:0.24637681 3:0.49723757 4:0.57142857 \0A0.1392614985523932 1:0.724 2:0.5942029 3:0.44751381 4:0.57142857 \0A1 1:0.724 2:0.79710145 3:0.39779006 4:0.57142857 \0A1 1:0.724 2:0.79710145 3:0.44751381 4:0.57142857 \0A0.1595638987993646 1:0.752 2:0.19354839 3:0.5 4:0.57142857 \0A0.1422554409883132 1:0.752 2:0.19354839 3:0.54787234 4:0.57142857 \0A1 1:0.752 2:0.19354839 3:0.60106383 4:0.57142857 \0A1 1:0.752 2:0.25806452 3:0.39893617 4:0.57142857 \0A0.3887822230849074 1:0.752 2:0.25806452 3:0.45212766 4:0.57142857 \0A0.06956178280044222 1:0.752 2:0.30645161 3:0.39893617 4:0.57142857 \0A0.005715940517550058 1:0.752 2:0.30645161 3:0.45212766 4:0.57142857 \0A1 1:0.752 2:0.30645161 3:0.5 4:0.57142857 \0A0.2722823231726074 1:0.752 2:0.4516129 3:0.45212766 4:0.57142857 \0A0.3807433019550806 1:0.752 2:0.4516129 3:0.60106383 4:0.57142857 \0A0.6047846303389237 1:0.752 2:0.5 3:0.60106383 4:0.57142857 \0A0.001450533209966512 1:0.752 2:0.5483871 3:0.60106383 4:0.57142857 \0A1 1:0.752 2:0.59677419 3:0.39893617 4:0.57142857 \0A0.04827236679779165 1:0.752 2:0.64516129 3:0.45212766 4:0.57142857 \0A1 1:0.752 2:0.69354839 3:0.45212766 4:0.57142857 \0A0.08940208276740273 1:0.752 2:0.69354839 3:0.54787234 4:0.57142857 \0A1 1:0.752 2:0.75806452 3:0.39893617 4:0.57142857 \0A0.4612764083531154 1:0.752 2:0.75806452 3:0.45212766 4:0.57142857 \0A1 1:0.752 2:0.75806452 3:0.54787234 4:0.57142857 \0A0.01697375620298083 1:0.752 2:0.80645161 3:0.35106383 4:0.57142857 \0A1 1:0.752 2:0.80645161 3:0.60106383 4:0.57142857 \0A0.8552689951465782 1:0.752 2:0.80645161 3:0.64893617 4:0.57142857 \0A0.002058750620567353 1:0.776 2:0.25 3:0.35051546 4:0.57142857 \0A0.2791953420144616 1:0.776 2:0.25 3:0.55154639 4:0.57142857 \0A0.1345475101092208 1:0.776 2:0.60714286 3:0.55154639 4:0.57142857 \0A0.0241993704714513 1:0.776 2:0.69642857 3:0.40206186 4:0.57142857 \0A0.0472181252384726 1:0.776 2:0.69642857 3:0.59793814 4:0.57142857 \0A1 1:0.776 2:0.75 3:0.55154639 4:0.57142857 \0A0.03395003741916533 1:0.776 2:0.75 3:0.59793814 4:0.57142857 \0A1 1:0.8 2:0.2 3:0.2 4:0.57142857 \0A-1 1:0.8 2:0.2 3:0.45 4:0.57142857 \0A-0.1242092245146457 1:0.8 2:0.2 3:0.5 4:0.57142857 \0A0.1786413344038866 1:0.8 2:0.2 3:0.8 4:0.57142857 \0A0.4091400004316592 1:0.8 2:0.26 3:0.2 4:0.57142857 \0A0.00742547942417978 1:0.8 2:0.5 3:0.2 4:0.57142857 \0A0.01278724384448108 1:0.8 2:0.5 3:0.8 4:0.57142857 \0A0.1256056693092899 1:0.8 2:0.54 3:0.2 4:0.57142857 \0A0.09351908825411137 1:0.8 2:0.54 3:0.8 4:0.57142857 \0A0.0534087520144504 1:0.8 2:0.6 3:0.2 4:0.57142857 \0A0.003715294731330602 1:0.8 2:0.66 3:0.2 4:0.57142857 \0A0.5218686334988335 1:0.8 2:0.8 3:0.2 4:0.57142857 \0A-1 1:0.8 2:0.8 3:0.45 4:0.57142857 \0A-1 1:0.8 2:0.8 3:0.5 4:0.57142857 \0A0.3981250007492238 1:0.8 2:0.8 3:0.8 4:0.57142857 \0A0.111914151071369 1:0.2 2:0.2 3:0.2 4:0.71428571 \0A0.0572968659716748 1:0.2 2:0.25 3:0.2 4:0.71428571 \0A0.01642556358498197 1:0.2 2:0.25 3:0.65 4:0.71428571 \0A0.1085607185550076 1:0.2 2:0.25 3:0.8 4:0.71428571 \0A-0.0341926625013421 1:0.2 2:0.45 3:0.55 4:0.71428571 \0A-0.004273388014296689 1:0.2 2:0.5 3:0.2 4:0.71428571 \0A-0.08648430903727522 1:0.2 2:0.5 3:0.55 4:0.71428571 \0A0.04882809343522567 1:0.2 2:0.65 3:0.8 4:0.71428571 \0A0.4562746725305334 1:0.2 2:0.7 3:0.2 4:0.71428571 \0A0.260165246465615 1:0.2 2:0.7 3:0.8 4:0.71428571 \0A0.009893925228327161 1:0.2 2:0.75 3:0.8 4:0.71428571 \0A-0.08760489234924247 1:0.22666667 2:0.5 3:0.45588235 4:0.71428571 \0A-0.1604490166836893 1:0.3 2:0.25238095 3:0.2 4:0.71428571 \0A-0.003799302824009101 1:0.3 2:0.5 3:0.54444444 4:0.71428571 \0A-0.01820707994703404 1:0.3 2:0.8 3:0.2 4:0.71428571 \0A-0.03212011092809838 1:0.32666667 2:0.5990099 3:0.20408163 4:0.71428571 \0A-0.1284860740404501 1:0.32666667 2:0.6980198 3:0.79591837 4:0.71428571 \0A-0.03778666116493984 1:0.32666667 2:0.75247525 3:0.79591837 4:0.71428571 \0A-0.08976695657381151 1:0.35 2:0.25128205 3:0.2 4:0.71428571 \0A-0.03461240375063271 1:0.35 2:0.4974359 3:0.2 4:0.71428571 \0A-0.2564946033361808 1:0.35 2:0.4974359 3:0.75238095 4:0.71428571 \0A-0.3289527913131878 1:0.35 2:0.65128205 3:0.2 4:0.71428571 \0A-0.005834621800836946 1:0.37666667 2:0.44919786 3:0.75221239 4:0.71428571 \0A-0.06601418968039603 1:0.37666667 2:0.59893048 3:0.20353982 4:0.71428571 \0A0.1325883126580945 1:0.4 2:0.2 3:0.45 4:0.71428571 \0A0.007099834614989514 1:0.4 2:0.2 3:0.6 4:0.71428571 \0A-0.03288557767774457 1:0.4 2:0.45 3:0.8 4:0.71428571 \0A-0.01610169893319351 1:0.4 2:0.55 3:0.8 4:0.71428571 \0A0.0499916471847751 1:0.42666667 2:0.19767442 3:0.546875 4:0.71428571 \0A0.1810843460054266 1:0.42666667 2:0.75 3:0.5 4:0.71428571 \0A0.001304705389312695 1:0.42666667 2:0.80232558 3:0.3515625 4:0.71428571 \0A0.001861585278038589 1:0.42666667 2:0.80232558 3:0.3984375 4:0.71428571 \0A0.09567508481579026 1:0.45 2:0.2 3:0.7037037 4:0.71428571 \0A0.0478926354752046 1:0.45 2:0.75151515 3:0.54814815 4:0.71428571 \0A0.1901165809253822 1:0.45 2:0.8 3:0.45185185 4:0.71428571 \0A0.008069465815773887 1:0.47666667 2:0.19745223 3:0.65034965 4:0.71428571 \0A0.02478984948039777 1:0.47666667 2:0.19745223 3:0.6993007 4:0.71428571 \0A0.02008348040737596 1:0.47666667 2:0.19745223 3:0.74825175 4:0.71428571 \0A0.09168899443358429 1:0.47666667 2:0.40127389 3:0.6013986 4:0.71428571 \0A0.005866005129628519 1:0.47666667 2:0.5477707 3:0.3986014 4:0.71428571 \0A0.009189574360956201 1:0.47666667 2:0.70063694 3:0.4965035 4:0.71428571 \0A0.2271731792895608 1:0.47666667 2:0.70063694 3:0.65034965 4:0.71428571 \0A0.1474306008568293 1:0.47666667 2:0.80254777 3:0.2027972 4:0.71428571 \0A0.1069337790091349 1:0.47666667 2:0.80254777 3:0.7972028 4:0.71428571 \0A0.1079170756181302 1:0.5 2:0.2 3:0.2 4:0.71428571 \0A0.07083610142076815 1:0.5 2:0.2 3:0.8 4:0.71428571 \0A0.004248171588965004 1:0.5 2:0.35333333 3:0.7 4:0.71428571 \0A0.00306381509111561 1:0.5 2:0.45333333 3:0.45333333 4:0.71428571 \0A0.001605178427371508 1:0.5 2:0.8 3:0.65333333 4:0.71428571 \0A0.09762752482872447 1:0.5 2:0.8 3:0.8 4:0.71428571 \0A0.02212882185657961 1:0.52666667 2:0.64788732 3:0.75316456 4:0.71428571 \0A0.6350511950273171 1:0.52666667 2:0.6971831 3:0.20253165 4:0.71428571 \0A0.003907613576416047 1:0.55 2:0.34814815 3:0.2 4:0.71428571 \0A0.009391064066700046 1:0.55 2:0.65185185 3:0.2 4:0.71428571 \0A0.008595365174260964 1:0.55 2:0.74814815 3:0.2 4:0.71428571 \0A0.04893072745915465 1:0.55 2:0.74814815 3:0.8 4:0.71428571 \0A0.1407944454583921 1:0.57666667 2:0.2992126 3:0.79768786 4:0.71428571 \0A0.001646072085742538 1:0.57666667 2:0.65354331 3:0.79768786 4:0.71428571 \0A-0.1988222255072646 1:0.6 2:0.25 3:0.5 4:0.71428571 \0A0.02225427678759917 1:0.6 2:0.45 3:0.2 4:0.71428571 \0A0.0100299923681623 1:0.6 2:0.6 3:0.2 4:0.71428571 \0A-0.4915091505419731 1:0.6 2:0.7 3:0.5 4:0.71428571 \0A-0.3711495780622908 1:0.6 2:0.75 3:0.45 4:0.71428571 \0A-0.03845899332892895 1:0.62666667 2:0.25 3:0.5 4:0.71428571 \0A-0.5528550217424721 1:0.62666667 2:0.30357143 3:0.54787234 4:0.71428571 \0A-1 1:0.62666667 2:0.69642857 3:0.45212766 4:0.71428571 \0A-0.0453801768157095 1:0.62666667 2:0.75 3:0.5 4:0.71428571 \0A-0.04344601505881177 1:0.65 2:0.24761905 3:0.4974359 4:0.71428571 \0A-1 1:0.65 2:0.35238095 3:0.4974359 4:0.71428571 \0A-0.02356862664658721 1:0.65 2:0.7047619 3:0.4974359 4:0.71428571 \0A-0.005916016734369745 1:0.65 2:0.75238095 3:0.45128205 4:0.71428571 \0A-0.006568492156637776 1:0.67666667 2:0.19587629 3:0.25123153 4:0.71428571 \0A-0.00571572251300171 1:0.67666667 2:0.19587629 3:0.69950739 4:0.71428571 \0A-0.6393647800651143 1:0.67666667 2:0.75257732 3:0.25123153 4:0.71428571 \0A-0.04730638409328056 1:0.67666667 2:0.75257732 3:0.74876847 4:0.71428571 \0A-1 1:0.7 2:0.2 3:0.25238095 4:0.71428571 \0A-0.00801468598796504 1:0.7 2:0.25555556 3:0.25238095 4:0.71428571 \0A-0.1556771855142582 1:0.7 2:0.25555556 3:0.7 4:0.71428571 \0A-0.08609037470548392 1:0.7 2:0.3 3:0.25238095 4:0.71428571 \0A-0.0006592782168926095 1:0.7 2:0.7 3:0.75238095 4:0.71428571 \0A-0.548100129202025 1:0.72666667 2:0.19512195 3:0.25229358 4:0.71428571 \0A0.002433618047258437 1:0.77666667 2:0.80597015 3:0.64806867 4:0.71428571 \0A0.1374125643229005 1:0.8 2:0.2 3:0.2 4:0.71428571 \0A-1 1:0.8 2:0.2 3:0.4 4:0.71428571 \0A-1 1:0.8 2:0.2 3:0.45 4:0.71428571 \0A-1 1:0.8 2:0.2 3:0.5 4:0.71428571 \0A-0.4063530938003239 1:0.8 2:0.2 3:0.55 4:0.71428571 \0A0.1229067831574859 1:0.8 2:0.2 3:0.8 4:0.71428571 \0A-0.5903236281969014 1:0.8 2:0.45 3:0.45 4:0.71428571 \0A-0.7667805710345437 1:0.8 2:0.45 3:0.5 4:0.71428571 \0A0.01390305188007804 1:0.8 2:0.45 3:0.8 4:0.71428571 \0A-0.654202641206025 1:0.8 2:0.55 3:0.5 4:0.71428571 \0A0.02109459348954012 1:0.8 2:0.55 3:0.8 4:0.71428571 \0A-0.7387868353096932 1:0.8 2:0.6 3:0.45 4:0.71428571 \0A-0.3961607097878477 1:0.8 2:0.75 3:0.45 4:0.71428571 \0A-0.1534140472868994 1:0.8 2:0.75 3:0.5 4:0.71428571 \0A-1 1:0.8 2:0.8 3:0.45 4:0.71428571 \0A-1 1:0.8 2:0.8 3:0.5 4:0.71428571 \0A-1 1:0.8 2:0.8 3:0.55 4:0.71428571 \0A0.08765777920042618 1:0.2 2:0.25 3:0.8 4:0.85714286 \0A0.08919286126596852 1:0.2 2:0.3 3:0.25714286 4:0.85714286 \0A0.09703004367426141 1:0.2 2:0.3 3:0.3 4:0.85714286 \0A0.1472637320484911 1:0.2 2:0.35 3:0.3 4:0.85714286 \0A-0.09760592158359327 1:0.2 2:0.5 3:0.5 4:0.85714286 \0A0.1850534718090514 1:0.2 2:0.7 3:0.8 4:0.85714286 \0A-0.02919463120537171 1:0.22571429 2:0.19926199 3:0.35443038 4:0.85714286 \0A-0.02390267873826181 1:0.22571429 2:0.19926199 3:0.40506329 4:0.85714286 \0A-0.1987959409198143 1:0.25142857 2:0.80152672 3:0.25 4:0.85714286 \0A-0.06258182174702752 1:0.25142857 2:0.80152672 3:0.60227273 4:0.85714286 \0A-0.3952138464800759 1:0.27428571 2:0.2007874 3:0.25 4:0.85714286 \0A-0.1174746305523112 1:0.27428571 2:0.2007874 3:0.75 4:0.85714286 \0A-0.1581544805209883 1:0.27428571 2:0.7992126 3:0.19791667 4:0.85714286 \0A-0.003970112150672717 1:0.27428571 2:0.7992126 3:0.64583333 4:0.85714286 \0A-0.003660671874936888 1:0.27428571 2:0.7992126 3:0.69791667 4:0.85714286 \0A-0.03173894509918363 1:0.27428571 2:0.7992126 3:0.75 4:0.85714286 \0A-0.03978435476465098 1:0.27428571 2:0.7992126 3:0.80208333 4:0.85714286 \0A-0.01161530796436529 1:0.3 2:0.2 3:0.75238095 4:0.85714286 \0A-0.2205029599099313 1:0.3 2:0.2 3:0.8 4:0.85714286 \0A-0.4126568151660818 1:0.3 2:0.24897959 3:0.2 4:0.85714286 \0A0.0931415116326673 1:0.3 2:0.4 3:0.3047619 4:0.85714286 \0A-0.1744963593364133 1:0.3 2:0.70204082 3:0.2 4:0.85714286 \0A-0.05752325652171417 1:0.3 2:0.70204082 3:0.24761905 4:0.85714286 \0A-0.1761851064325156 1:0.3 2:0.75102041 3:0.2 4:0.85714286 \0A-0.005817148993734977 1:0.3 2:0.8 3:0.24761905 4:0.85714286 \0A-0.002679279758798603 1:0.32571429 2:0.25 3:0.20175439 4:0.85714286 \0A-0.3221602003687812 1:0.32571429 2:0.25 3:0.79824561 4:0.85714286 \0A-0.737361617428408 1:0.32571429 2:0.75 3:0.79824561 4:0.85714286 \0A-0.003322686834884509 1:0.35142857 2:0.25110132 3:0.20325203 4:0.85714286 \0A-0.02118102981646922 1:0.35142857 2:0.25110132 3:0.79674797 4:0.85714286 \0A-0.1537205937635201 1:0.37428571 2:0.49771689 3:0.80152672 4:0.85714286 \0A-0.02436208471438989 1:0.37428571 2:0.54794521 3:0.80152672 4:0.85714286 \0A0.001465247310473992 1:0.4 2:0.35238095 3:0.35 4:0.85714286 \0A-0.02514627941119762 1:0.4 2:0.54761905 3:0.8 4:0.85714286 \0A0.0007528676692827168 1:0.42571429 2:0.19900498 3:0.4966443 4:0.85714286 \0A0.09663760466820218 1:0.42571429 2:0.19900498 3:0.59731544 4:0.85714286 \0A0.0250982158554981 1:0.42571429 2:0.34825871 3:0.59731544 4:0.85714286 \0A0.1535762870533227 1:0.42571429 2:0.39800995 3:0.40268456 4:0.85714286 \0A0.007813937418602163 1:0.42571429 2:0.39800995 3:0.44966443 4:0.85714286 \0A0.04244592748379604 1:0.42571429 2:0.70149254 3:0.40268456 4:0.85714286 \0A0.001251602678778133 1:0.42571429 2:0.80099502 3:0.34899329 4:0.85714286 \0A0.03689287249224704 1:0.42571429 2:0.80099502 3:0.40268456 4:0.85714286 \0A0.09634633942990406 1:0.42571429 2:0.80099502 3:0.55033557 4:0.85714286 \0A0.1067483802779254 1:0.45142857 2:0.19791667 3:0.60126582 4:0.85714286 \0A0.05194828423393814 1:0.45142857 2:0.40104167 3:0.34810127 4:0.85714286 \0A0.00648325215856319 1:0.45142857 2:0.5 3:0.60126582 4:0.85714286 \0A0.1462724065451693 1:0.45142857 2:0.55208333 3:0.55063291 4:0.85714286 \0A0.251023909851048 1:0.45142857 2:0.59895833 3:0.44936709 4:0.85714286 \0A0.09861577214730943 1:0.45142857 2:0.69791667 3:0.55063291 4:0.85714286 \0A0.03816618341572179 1:0.45142857 2:0.80208333 3:0.39873418 4:0.85714286 \0A0.09249947071339552 1:0.45142857 2:0.80208333 3:0.65189873 4:0.85714286 \0A0.1282268295778642 1:0.47428571 2:0.40217391 3:0.34939759 4:0.85714286 \0A0.001598595574615017 1:0.47428571 2:0.40217391 3:0.39759036 4:0.85714286 \0A0.0027079213097985 1:0.47428571 2:0.5 3:0.39759036 4:0.85714286 \0A0.01094000021594465 1:0.47428571 2:0.65217391 3:0.65060241 4:0.85714286 \0A0.02298232609024991 1:0.47428571 2:0.70108696 3:0.65060241 4:0.85714286 \0A0.4296933716061567 1:0.47428571 2:0.79891304 3:0.19879518 4:0.85714286 \0A0.8343466157357079 1:0.5 2:0.2 3:0.2 4:0.85714286 \0A0.2523643947897962 1:0.5 2:0.25142857 3:0.74857143 4:0.85714286 \0A0.4142315803658484 1:0.5 2:0.4 3:0.6 4:0.85714286 \0A0.3018496837736072 1:0.5 2:0.4 3:0.65142857 4:0.85714286 \0A0.0002207790313124873 1:0.5 2:0.45142857 3:0.4 4:0.85714286 \0A0.008990049650869711 1:0.5 2:0.6 3:0.6 4:0.85714286 \0A0.05263990146615539 1:0.5 2:0.8 3:0.2 4:0.85714286 \0A0.3216141071195111 1:0.52571429 2:0.19879518 3:0.79891304 4:0.85714286 \0A0.3011568545021911 1:0.52571429 2:0.34939759 3:0.65217391 4:0.85714286 \0A0.3548605104929952 1:0.52571429 2:0.34939759 3:0.75 4:0.85714286 \0A0.01578506777975728 1:0.52571429 2:0.39759036 3:0.20108696 4:0.85714286 \0A0.01715414279907337 1:0.52571429 2:0.75301205 3:0.20108696 4:0.85714286 \0A0.5506114582683926 1:0.52571429 2:0.75301205 3:0.79891304 4:0.85714286 \0A0.0009666660785980828 1:0.55142857 2:0.29936306 3:0.79792746 4:0.85714286 \0A0.07844443501410032 1:0.55142857 2:0.35031847 3:0.20207254 4:0.85714286 \0A0.002182260890589953 1:0.55142857 2:0.35031847 3:0.79792746 4:0.85714286 \0A0.07956385038703545 1:0.55142857 2:0.5477707 3:0.20207254 4:0.85714286 \0A0.3205002115948544 1:0.55142857 2:0.64968153 3:0.79792746 4:0.85714286 \0A0.5635618037113714 1:0.55142857 2:0.70063694 3:0.79792746 4:0.85714286 \0A0.01813744218617384 1:0.57428571 2:0.40268456 3:0.19900498 4:0.85714286 \0A0.531148854251225 1:0.57428571 2:0.4966443 3:0.19900498 4:0.85714286 \0A0.1228966024883945 1:0.57428571 2:0.55033557 3:0.19900498 4:0.85714286 \0A0.08456581834615864 1:0.57428571 2:0.65100671 3:0.19900498 4:0.85714286 \0A-0.2488456036209035 1:0.6 2:0.25 3:0.5 4:0.85714286 \0A-0.4435084889722834 1:0.6 2:0.25 3:0.54761905 4:0.85714286 \0A-0.8345928987551059 1:0.6 2:0.3 3:0.5 4:0.85714286 \0A-0.2430580115790844 1:0.6 2:0.7 3:0.5 4:0.85714286 \0A-0.07133136063096064 1:0.6 2:0.75 3:0.5 4:0.85714286 \0A-0.1127187716029414 1:0.62571429 2:0.2519084 3:0.45205479 4:0.85714286 \0A-0.01206280303133767 1:0.62571429 2:0.2519084 3:0.49771689 4:0.85714286 \0A-1 1:0.62571429 2:0.2519084 3:0.54794521 4:0.85714286 \0A-0.06617187775307089 1:0.62571429 2:0.29770992 3:0.49771689 4:0.85714286 \0A-0.0211889620280756 1:0.62571429 2:0.64885496 3:0.49771689 4:0.85714286 \0A-0.2358266303011922 1:0.62571429 2:0.70229008 3:0.30136986 4:0.85714286 \0A-0.1174084939463452 1:0.62571429 2:0.70229008 3:0.54794521 4:0.85714286 \0A-1 1:0.62571429 2:0.7480916 3:0.54794521 4:0.85714286 \0A-0.5933492724293927 1:0.62571429 2:0.7480916 3:0.69863014 4:0.85714286 \0A-0.2102256430661912 1:0.65142857 2:0.25409836 3:0.60087719 4:0.85714286 \0A-0.002082227232839903 1:0.65142857 2:0.64754098 3:0.5 4:0.85714286 \0A-0.02504777965716789 1:0.65142857 2:0.80327869 3:0.25 4:0.85714286 \0A-0.1265138037680781 1:0.67428571 2:0.25438596 3:0.25 4:0.85714286 \0A-0.09040048893231334 1:0.67428571 2:0.25438596 3:0.69915254 4:0.85714286 \0A-1 1:0.67428571 2:0.25438596 3:0.75 4:0.85714286 \0A-1 1:0.67428571 2:0.29824561 3:0.25 4:0.85714286 \0A-0.124044199434486 1:0.67428571 2:0.29824561 3:0.69915254 4:0.85714286 \0A-0.4712389738651734 1:0.67428571 2:0.64912281 3:0.69915254 4:0.85714286 \0A-0.8985785571914334 1:0.67428571 2:0.70175439 3:0.25 4:0.85714286 \0A-1 1:0.67428571 2:0.75438596 3:0.25 4:0.85714286 \0A-0.02008988290526038 1:0.67428571 2:0.79824561 3:0.75 4:0.85714286 \0A-0.06749479863679134 1:0.7 2:0.2 3:0.24897959 4:0.85714286 \0A-0.2116589932740051 1:0.7 2:0.3047619 3:0.24897959 4:0.85714286 \0A-0.01270680354331095 1:0.7 2:0.35238095 3:0.24897959 4:0.85714286 \0A-0.2476868768683578 1:0.7 2:0.4 3:0.24897959 4:0.85714286 \0A-1 1:0.7 2:0.7047619 3:0.75102041 4:0.85714286 \0A-0.177226038197963 1:0.7 2:0.75238095 3:0.24897959 4:0.85714286 \0A-0.7036854230085693 1:0.7 2:0.75238095 3:0.75102041 4:0.85714286 \0A-0.002599878957436338 1:0.72571429 2:0.19791667 3:0.2519685 4:0.85714286 \0A0.5553476751488744 1:0.72571429 2:0.19791667 3:0.4015748 4:0.85714286 \0A-0.01002580419227577 1:0.72571429 2:0.25 3:0.2519685 4:0.85714286 \0A-0.2980767656719146 1:0.72571429 2:0.25 3:0.7519685 4:0.85714286 \0A-0.06719697119983729 1:0.72571429 2:0.30208333 3:0.7519685 4:0.85714286 \0A-0.3275892093015475 1:0.72571429 2:0.35416667 3:0.2519685 4:0.85714286 \0A-0.03050478002482472 1:0.72571429 2:0.69791667 3:0.7519685 4:0.85714286 \0A0.09366558925133391 1:0.72571429 2:0.80208333 3:0.4015748 4:0.85714286 \0A1 1:0.75142857 2:0.1954023 3:0.39923954 4:0.85714286 \0A1 1:0.75142857 2:0.1954023 3:0.5513308 4:0.85714286 \0A1 1:0.75142857 2:0.25287356 3:0.39923954 4:0.85714286 \0A0.7548424542608771 1:0.75142857 2:0.25287356 3:0.4486692 4:0.85714286 \0A0.5751555828244868 1:0.75142857 2:0.25287356 3:0.49809886 4:0.85714286 \0A1 1:0.75142857 2:0.25287356 3:0.60076046 4:0.85714286 \0A1 1:0.75142857 2:0.29885057 3:0.39923954 4:0.85714286 \0A-0.1486200869932708 1:0.75142857 2:0.34482759 3:0.20152091 4:0.85714286 \0A0.007660383136791137 1:0.75142857 2:0.34482759 3:0.60076046 4:0.85714286 \0A0.3583576259088807 1:0.75142857 2:0.49425287 3:0.60076046 4:0.85714286 \0A0.4801991654945708 1:0.75142857 2:0.55172414 3:0.39923954 4:0.85714286 \0A0.8441041300991878 1:0.75142857 2:0.70114943 3:0.49809886 4:0.85714286 \0A1 1:0.75142857 2:0.74712644 3:0.39923954 4:0.85714286 \0A0.309917918662752 1:0.75142857 2:0.74712644 3:0.4486692 4:0.85714286 \0A1 1:0.75142857 2:0.74712644 3:0.5513308 4:0.85714286 \0A0.4119164281399212 1:0.75142857 2:0.8045977 3:0.39923954 4:0.85714286 \0A0.02864435625264824 1:0.75142857 2:0.8045977 3:0.4486692 4:0.85714286 \0A1 1:0.75142857 2:0.8045977 3:0.5513308 4:0.85714286 \0A0.2090177831217086 1:0.77428571 2:0.20253165 3:0.60147601 4:0.85714286 \0A0.2967601798030067 1:0.77428571 2:0.25316456 3:0.35055351 4:0.85714286 \0A1 1:0.77428571 2:0.25316456 3:0.39852399 4:0.85714286 \0A0.1226401752491351 1:0.77428571 2:0.25316456 3:0.5498155 4:0.85714286 \0A0.1089346134758622 1:0.77428571 2:0.25316456 3:0.60147601 4:0.85714286 \0A0.001536588079682942 1:0.77428571 2:0.35443038 3:0.64944649 4:0.85714286 \0A0.07185555400458639 1:0.77428571 2:0.59493671 3:0.60147601 4:0.85714286 \0A0.004484529922136751 1:0.77428571 2:0.59493671 3:0.64944649 4:0.85714286 \0A0.001553007252178545 1:0.77428571 2:0.64556962 3:0.39852399 4:0.85714286 \0A0.5407059569140784 1:0.77428571 2:0.69620253 3:0.39852399 4:0.85714286 \0A0.1181015935779041 1:0.77428571 2:0.69620253 3:0.60147601 4:0.85714286 \0A0.6534752253511928 1:0.77428571 2:0.74683544 3:0.35055351 4:0.85714286 \0A0.05156169695670536 1:0.77428571 2:0.74683544 3:0.39852399 4:0.85714286 \0A0.01684974695714773 1:0.77428571 2:0.74683544 3:0.5498155 4:0.85714286 \0A1 1:0.77428571 2:0.74683544 3:0.60147601 4:0.85714286 \0A0.6988842941285649 1:0.77428571 2:0.79746835 3:0.35055351 4:0.85714286 \0A0.2257905895779414 1:0.77428571 2:0.79746835 3:0.60147601 4:0.85714286 \0A0.1331604254747003 1:0.77428571 2:0.79746835 3:0.64944649 4:0.85714286 \0A0.286561201541061 1:0.8 2:0.2 3:0.2 4:0.85714286 \0A-1 1:0.8 2:0.2 3:0.45 4:0.85714286 \0A-0.4446614518088314 1:0.8 2:0.2 3:0.5 4:0.85714286 \0A0.009844897220184006 1:0.8 2:0.25714286 3:0.65 4:0.85714286 \0A0.1947211367397144 1:0.8 2:0.4 3:0.65 4:0.85714286 \0A0.2241666247189819 1:0.8 2:0.75714286 3:0.65 4:0.85714286 \0A-0.2179287099307207 1:0.8 2:0.8 3:0.45 4:0.85714286 \0A-1 1:0.8 2:0.8 3:0.5 4:0.85714286 \0A0.7701382046363671 1:0.2 2:0.2 3:0.2 4:1 \0A0.022912806676384 1:0.2 2:0.2 3:0.55 4:1 \0A0.007204062692520255 1:0.2 2:0.2 3:0.65 4:1 \0A0.03395401032147928 1:0.2 2:0.2 3:0.8 4:1 \0A0.005299703845324283 1:0.2 2:0.25 3:0.55 4:1 \0A0.003125880171505727 1:0.2 2:0.25 3:0.6 4:1 \0A0.2783647026239084 1:0.2 2:0.25 3:0.8 4:1 \0A-0.4716423808737542 1:0.2 2:0.45 3:0.2 4:1 \0A-0.2734590453977904 1:0.2 2:0.45 3:0.7 4:1 \0A-0.07028503477929243 1:0.2 2:0.5 3:0.2 4:1 \0A-0.05017350694866365 1:0.2 2:0.5 3:0.75 4:1 \0A0.5186546710497647 1:0.2 2:0.7 3:0.2 4:1 \0A0.004645560524967936 1:0.2 2:0.7 3:0.45 4:1 \0A0.001353172908302549 1:0.2 2:0.75 3:0.4 4:1 \0A0.003406749978541838 1:0.2 2:0.75 3:0.5 4:1 \0A0.08622486459118847 1:0.2 2:0.75 3:0.6 4:1 \0A0.1017965163725525 1:0.2 2:0.75 3:0.8 4:1 \0A0.07658942430814428 1:0.2 2:0.8 3:0.8 4:1 \0A-0.4843176676550269 1:0.275 2:0.25172414 3:0.2 4:1 \0A-0.006136227295083907 1:0.275 2:0.75172414 3:0.25454545 4:1 \0A-0.001887771612514745 1:0.275 2:0.75172414 3:0.75454545 4:1 \0A-0.002956545153611366 1:0.3 2:0.25 3:0.2 4:1 \0A-0.05778072982023798 1:0.3 2:0.25 3:0.75 4:1 \0A-0.1077811657290382 1:0.325 2:0.25185185 3:0.2 4:1 \0A0.009278336488820262 1:0.325 2:0.44814815 3:0.35384615 4:1 \0A-0.03188703124654534 1:0.325 2:0.7 3:0.25384615 4:1 \0A-0.09743974820498237 1:0.35 2:0.7 3:0.25 4:1 \0A-0.05242498313990111 1:0.35 2:0.75 3:0.25 4:1 \0A0.03935646293484464 1:0.375 2:0.4 3:0.4 4:1 \0A0.01629838011267691 1:0.375 2:0.4 3:0.45333333 4:1 \0A0.1192411418537781 1:0.4 2:0.2 3:0.55 4:1 \0A0.01485863724009909 1:0.4 2:0.4 3:0.35 4:1 \0A0.1160490637113425 1:0.4 2:0.45 3:0.5 4:1 \0A0.03299635349014299 1:0.4 2:0.8 3:0.55 4:1 \0A0.007956533238726556 1:0.425 2:0.2 3:0.5 4:1 \0A0.02024089914480534 1:0.425 2:0.44782609 3:0.44705882 4:1 \0A0.02391431149676934 1:0.425 2:0.44782609 3:0.6 4:1 \0A0.03174219641038035 1:0.425 2:0.8 3:0.4 4:1 \0A0.02432377503766425 1:0.425 2:0.8 3:0.44705882 4:1 \0A0.02363694053946517 1:0.45 2:0.8 3:0.55 4:1 \0A0.001042736159722426 1:0.475 2:0.2 3:0.8 4:1 \0A0.1447975643701009 1:0.475 2:0.44761905 3:0.2 4:1 \0A0.1038593739161337 1:0.475 2:0.44761905 3:0.6 4:1 \0A0.1844812132607302 1:0.475 2:0.8 3:0.2 4:1 \0A0.04093814386745822 1:0.5 2:0.2 3:0.8 4:1 \0A0.05142898821652411 1:0.5 2:0.4 3:0.2 4:1 \0A0.002165661552251341 1:0.5 2:0.45 3:0.2 4:1 \0A0.00519431839200823 1:0.5 2:0.5 3:0.2 4:1 \0A0.1718653493752084 1:0.5 2:0.8 3:0.8 4:1 \0A0.4049712339593572 1:0.525 2:0.2 3:0.2 4:1 \0A0.14832728498623 1:0.525 2:0.2 3:0.8 4:1 \0A0.01100027845534088 1:0.525 2:0.35263158 3:0.8 4:1 \0A0.05651520976883886 1:0.525 2:0.54736842 3:0.2 4:1 \0A0.06091146364266471 1:0.525 2:0.65263158 3:0.8 4:1 \0A0.2762992443402494 1:0.55 2:0.45 3:0.8 4:1 \0A0.5257993965504466 1:0.55 2:0.6 3:0.2 4:1 \0A0.1938012762203732 1:0.55 2:0.65 3:0.8 4:1 \0A-0.04732871121984281 1:0.575 2:0.3 3:0.44782609 4:1 \0A-1 1:0.575 2:0.3 3:0.54782609 4:1 \0A0.04876195737874708 1:0.575 2:0.44705882 3:0.2 4:1 \0A-0.17247502590852 1:0.575 2:0.65294118 3:0.4 4:1 \0A-0.02949564419735785 1:0.6 2:0.25 3:0.55 4:1 \0A-0.07944313097997377 1:0.6 2:0.3 3:0.55 4:1 \0A-0.007423242548971131 1:0.6 2:0.35 3:0.45 4:1 \0A-0.006907327875827325 1:0.6 2:0.35 3:0.55 4:1 \0A-0.006865100690315262 1:0.6 2:0.4 3:0.5 4:1 \0A-0.003994656142166409 1:0.6 2:0.6 3:0.5 4:1 \0A-0.2843697251301747 1:0.6 2:0.7 3:0.5 4:1 \0A-0.1382891222607892 1:0.6 2:0.7 3:0.65 4:1 \0A-0.1058950421548418 1:0.6 2:0.75 3:0.7 4:1 \0A-0.01227909611307111 1:0.625 2:0.25333333 3:0.252 4:1 \0A-0.04316747796113499 1:0.625 2:0.25333333 3:0.652 4:1 \0A-0.1800465211948526 1:0.625 2:0.3 3:0.252 4:1 \0A-0.3378602416990719 1:0.625 2:0.3 3:0.548 4:1 \0A-0.02013321846626782 1:0.625 2:0.4 3:0.3 4:1 \0A-0.03065237333546398 1:0.625 2:0.4 3:0.448 4:1 \0A-0.003082092015115281 1:0.625 2:0.65333333 3:0.5 4:1 \0A-1 1:0.625 2:0.65333333 3:0.548 4:1 \0A-0.02311762179361539 1:0.625 2:0.65333333 3:0.652 4:1 \0A-0.1084896037828497 1:0.625 2:0.7 3:0.252 4:1 \0A-0.5375509877413922 1:0.625 2:0.7 3:0.3 4:1 \0A-0.00480943170214846 1:0.625 2:0.7 3:0.5 4:1 \0A-0.1318946959076682 1:0.625 2:0.75333333 3:0.3 4:1 \0A-1 1:0.65 2:0.25 3:0.25 4:1 \0A-0.004211555208391299 1:0.65 2:0.3 3:0.25 4:1 \0A-0.2293400078540429 1:0.65 2:0.3 3:0.65 4:1 \0A-0.004736591096826993 1:0.65 2:0.35 3:0.25 4:1 \0A-0.001279831412365493 1:0.65 2:0.5 3:0.3 4:1 \0A-0.001542137654182646 1:0.65 2:0.6 3:0.55 4:1 \0A-0.1036915794062673 1:0.65 2:0.6 3:0.7 4:1 \0A-1 1:0.65 2:0.65 3:0.25 4:1 \0A-0.06551477716126226 1:0.65 2:0.7 3:0.25 4:1 \0A-0.06613931630571263 1:0.65 2:0.7 3:0.7 4:1 \0A-0.2895275908723252 1:0.65 2:0.75 3:0.75 4:1 \0A-0.02432563932156021 1:0.65 2:0.8 3:0.7 4:1 \0A-0.005489093884508384 1:0.675 2:0.2 3:0.25185185 4:1 \0A-0.5101318600084738 1:0.675 2:0.25384615 3:0.75185185 4:1 \0A-0.2925830051653954 1:0.675 2:0.3 3:0.75185185 4:1 \0A-0.06702209214609454 1:0.675 2:0.35384615 3:0.25185185 4:1 \0A-0.01050359350112916 1:0.675 2:0.65384615 3:0.25185185 4:1 \0A-0.285954228358017 1:0.675 2:0.7 3:0.75185185 4:1 \0A-0.2119976736847874 1:0.7 2:0.2 3:0.25 4:1 \0A0.004210653049139839 1:0.7 2:0.2 3:0.45 4:1 \0A0.3029701164850029 1:0.7 2:0.2 3:0.5 4:1 \0A-0.07935876351705756 1:0.7 2:0.25 3:0.25 4:1 \0A-0.005833378759883277 1:0.7 2:0.4 3:0.25 4:1 \0A-0.7318370573478258 1:0.7 2:0.7 3:0.75 4:1 \0A-1 1:0.725 2:0.2 3:0.25172414 4:1 \0A0.002872605074246928 1:0.725 2:0.2 3:0.45172414 4:1 \0A0.6026875636179937 1:0.725 2:0.2 3:0.5 4:1 \0A0.8051189196894369 1:0.725 2:0.25454545 3:0.4 4:1 \0A1 1:0.725 2:0.25454545 3:0.45172414 4:1 \0A0.519762122601788 1:0.725 2:0.25454545 3:0.5 4:1 \0A0.3401037185533743 1:0.725 2:0.3 3:0.45172414 4:1 \0A0.9708763782257754 1:0.725 2:0.8 3:0.4 4:1 \0A0.336159430127944 1:0.725 2:0.8 3:0.6 4:1 \0A0.3181570100264368 1:0.75 2:0.2 3:0.6 4:1 \0A1 1:0.75 2:0.25 3:0.4 4:1 \0A1 1:0.75 2:0.25 3:0.45 4:1 \0A0.2772796779742901 1:0.75 2:0.25 3:0.5 4:1 \0A1 1:0.75 2:0.25 3:0.55 4:1 \0A0.3047767591702688 1:0.75 2:0.25 3:0.6 4:1 \0A0.008159285965778237 1:0.75 2:0.3 3:0.4 4:1 \0A0.4273531419079107 1:0.75 2:0.3 3:0.6 4:1 \0A0.04634433359752101 1:0.75 2:0.35 3:0.5 4:1 \0A0.2057967253695801 1:0.75 2:0.6 3:0.4 4:1 \0A1 1:0.75 2:0.6 3:0.55 4:1 \0A0.8702115064058801 1:0.75 2:0.65 3:0.6 4:1 \0A1 1:0.75 2:0.7 3:0.4 4:1 \0A1 1:0.75 2:0.7 3:0.45 4:1 \0A0.7128060380885816 1:0.75 2:0.7 3:0.5 4:1 \0A1 1:0.75 2:0.7 3:0.55 4:1 \0A1 1:0.75 2:0.7 3:0.6 4:1 \0A0.3014104995700555 1:0.75 2:0.75 3:0.35 4:1 \0A0.9481422857015841 1:0.75 2:0.75 3:0.4 4:1 \0A1 1:0.75 2:0.8 3:0.6 4:1 \0A0.06965804196080849 1:0.775 2:0.25555556 3:0.3516129 4:1 \0A0.1681580499760123 1:0.775 2:0.34444444 3:0.6 4:1 \0A0.01005580801730846 1:0.775 2:0.54444444 3:0.3516129 4:1 \0A0.5914353948629942 1:0.775 2:0.6 3:0.4 4:1 \0A0.02075841330356008 1:0.775 2:0.7 3:0.3516129 4:1 \0A0.04709816856807648 1:0.775 2:0.7 3:0.6 4:1 \0A1 1:0.8 2:0.2 3:0.2 4:1 \0A-0.1463880022275328 1:0.8 2:0.2 3:0.3 4:1 \0A-1 1:0.8 2:0.2 3:0.35 4:1 \0A-1 1:0.8 2:0.2 3:0.4 4:1 \0A-1 1:0.8 2:0.2 3:0.45 4:1 \0A-1 1:0.8 2:0.2 3:0.5 4:1 \0A-1 1:0.8 2:0.2 3:0.55 4:1 \0A0.6319473117775735 1:0.8 2:0.2 3:0.8 4:1 \0A1 1:0.8 2:0.25 3:0.2 4:1 \0A-1 1:0.8 2:0.25 3:0.45 4:1 \0A-1 1:0.8 2:0.25 3:0.5 4:1 \0A0.009428333112103825 1:0.8 2:0.3 3:0.2 4:1 \0A-0.2332948670645713 1:0.8 2:0.3 3:0.5 4:1 \0A-0.1496338278930457 1:0.8 2:0.4 3:0.45 4:1 \0A-0.5087834825808425 1:0.8 2:0.45 3:0.5 4:1 \0A0.00192176388767527 1:0.8 2:0.5 3:0.2 4:1 \0A-0.7111071952312533 1:0.8 2:0.5 3:0.45 4:1 \0A-0.01444407952319081 1:0.8 2:0.5 3:0.5 4:1 \0A0.07360896881238908 1:0.8 2:0.55 3:0.2 4:1 \0A-1 1:0.8 2:0.55 3:0.5 4:1 \0A0.2640513445664476 1:0.8 2:0.55 3:0.8 4:1 \0A0.1122599329843315 1:0.8 2:0.6 3:0.2 4:1 \0A-0.4434275352399362 1:0.8 2:0.6 3:0.5 4:1 \0A0.03478630367088049 1:0.8 2:0.65 3:0.2 4:1 \0A-1 1:0.8 2:0.65 3:0.5 4:1 \0A-1 1:0.8 2:0.7 3:0.5 4:1 \0A-1 1:0.8 2:0.75 3:0.45 4:1 \0A-1 1:0.8 2:0.75 3:0.5 4:1 \0A0.6796334291542261 1:0.8 2:0.8 3:0.2 4:1 \0A-0.1698672787287688 1:0.8 2:0.8 3:0.35 4:1 \0A-1 1:0.8 2:0.8 3:0.4 4:1 \0A-1 1:0.8 2:0.8 3:0.45 4:1 \0A-1 1:0.8 2:0.8 3:0.5 4:1 \0A-1 1:0.8 2:0.8 3:0.55 4:1 \0A-0.0310377630670289 1:0.8 2:0.8 3:0.6 4:1 \0A0.6119531131910538 1:0.8 2:0.8 3:0.8 4:1 \0A\00", align 1
@avg_model_string = dso_local global i8* getelementptr inbounds ([60559 x i8], [60559 x i8]* @.str, i32 0, i32 0), align 8
@.str.1 = private unnamed_addr constant [54409 x i8] c"svm_type nu_svr\0Akernel_type rbf\0Agamma 7\0Anr_class 2\0Atotal_sv 1060\0Arho -0.187768\0ASV\0A-0.7363563768676624 1:0.2 2:0.2 3:0.2 4:0 \0A-1 1:0.2 2:0.2 3:0.4 4:0 \0A-0.5817626972471229 1:0.2 2:0.2 3:0.6 4:0 \0A-0.4178464036231969 1:0.2 2:0.25 3:0.7 4:0 \0A0.07807074474787239 1:0.2 2:0.3 3:0.4 4:0 \0A0.9523642403699546 1:0.2 2:0.55 3:0.7 4:0 \0A0.6398678471913775 1:0.2 2:0.65 3:0.2 4:0 \0A-1 1:0.2 2:0.75 3:0.2 4:0 \0A-1 1:0.2 2:0.75 3:0.4 4:0 \0A-0.4313097127070922 1:0.2 2:0.75 3:0.6 4:0 \0A-0.4870752319526939 1:0.2 2:0.75 3:0.8 4:0 \0A-0.6950639820227301 1:0.22 2:0.20512821 3:0.72727273 4:0 \0A0.9771153944690636 1:0.22 2:0.30769231 3:0.45454545 4:0 \0A0.4925134087753923 1:0.22 2:0.41025641 3:0.18181818 4:0 \0A-0.2487246380748831 1:0.22 2:0.79487179 3:0.18181818 4:0 \0A-1 1:0.22 2:0.79487179 3:0.36363636 4:0 \0A-0.6547084088405088 1:0.22 2:0.79487179 3:0.45454545 4:0 \0A-1 1:0.26 2:0.18918919 3:0.69230769 4:0 \0A0.6065056116371278 1:0.26 2:0.24324324 3:0.61538462 4:0 \0A0.1644717660251948 1:0.26 2:0.40540541 3:0.76923077 4:0 \0A1 1:0.26 2:0.7027027 3:0.30769231 4:0 \0A0.9898992118889675 1:0.26 2:0.75675676 3:0.38461538 4:0 \0A-0.9366794506156393 1:0.28 2:0.44444444 3:0.57142857 4:0 \0A-1 1:0.28 2:0.55555556 3:0.5 4:0 \0A0.8603145833954182 1:0.28 2:0.61111111 3:0.21428571 4:0 \0A1 1:0.28 2:0.69444444 3:0.42857143 4:0 \0A0.5396227936950618 1:0.3 2:0.2 3:0.4 4:0 \0A1 1:0.3 2:0.31428571 3:0.66666667 4:0 \0A1 1:0.3 2:0.71428571 3:0.4 4:0 \0A-1 1:0.3 2:0.8 3:0.2 4:0 \0A1 1:0.32 2:0.20588235 3:0.375 4:0 \0A0.8363269611810621 1:0.32 2:0.26470588 3:0.1875 4:0 \0A1 1:0.32 2:0.26470588 3:0.75 4:0 \0A1 1:0.32 2:0.41176471 3:0.3125 4:0 \0A-1 1:0.32 2:0.44117647 3:0.1875 4:0 \0A1 1:0.32 2:0.5 3:0.4375 4:0 \0A-1 1:0.32 2:0.55882353 3:0.8125 4:0 \0A1 1:0.32 2:0.70588235 3:0.375 4:0 \0A-0.2716257869415996 1:0.32 2:0.79411765 3:0.1875 4:0 \0A1 1:0.36 2:0.25 3:0.72222222 4:0 \0A0.9460857435038026 1:0.36 2:0.3125 3:0.44444444 4:0 \0A1 1:0.36 2:0.3125 3:0.55555556 4:0 \0A-1 1:0.36 2:0.34375 3:0.38888889 4:0 \0A-1 1:0.36 2:0.40625 3:0.33333333 4:0 \0A-1 1:0.36 2:0.5 3:0.44444444 4:0 \0A0.4666911153940065 1:0.38 2:0.19354839 3:0.21052632 4:0 \0A-0.3679093797612711 1:0.38 2:0.19354839 3:0.78947368 4:0 \0A-1 1:0.38 2:0.25806452 3:0.31578947 4:0 \0A-1 1:0.38 2:0.35483871 3:0.31578947 4:0 \0A-0.5244997336393352 1:0.38 2:0.38709677 3:0.36842105 4:0 \0A-0.5942033352043439 1:0.38 2:0.38709677 3:0.63157895 4:0 \0A0.6553693633612112 1:0.38 2:0.5483871 3:0.26315789 4:0 \0A1 1:0.38 2:0.5483871 3:0.57894737 4:0 \0A-0.9532572502392046 1:0.38 2:0.61290323 3:0.42105263 4:0 \0A-1 1:0.38 2:0.64516129 3:0.31578947 4:0 \0A0.9181216030006814 1:0.38 2:0.70967742 3:0.21052632 4:0 \0A0.8406182491140477 1:0.38 2:0.70967742 3:0.26315789 4:0 \0A1 1:0.4 2:0.3 3:0.3 4:0 \0A-0.9364696955414865 1:0.4 2:0.53333333 3:0.2 4:0 \0A-1 1:0.4 2:0.6 3:0.35 4:0 \0A-1 1:0.4 2:0.66666667 3:0.35 4:0 \0A0.658077614573009 1:0.4 2:0.7 3:0.75 4:0 \0A-0.9923478684628275 1:0.42 2:0.20689655 3:0.42857143 4:0 \0A1 1:0.42 2:0.24137931 3:0.28571429 4:0 \0A-1 1:0.42 2:0.24137931 3:0.80952381 4:0 \0A0.2745417674520128 1:0.42 2:0.31034483 3:0.71428571 4:0 \0A-1 1:0.42 2:0.34482759 3:0.47619048 4:0 \0A-1 1:0.42 2:0.34482759 3:0.61904762 4:0 \0A-0.8980326499738261 1:0.42 2:0.34482759 3:0.80952381 4:0 \0A0.07029237206620208 1:0.42 2:0.4137931 3:0.76190476 4:0 \0A1 1:0.42 2:0.44827586 3:0.47619048 4:0 \0A0.01638387273179614 1:0.42 2:0.55172414 3:0.76190476 4:0 \0A-0.9920292514815255 1:0.42 2:0.65517241 3:0.33333333 4:0 \0A0.2902237946267846 1:0.42 2:0.65517241 3:0.66666667 4:0 \0A1 1:0.42 2:0.75862069 3:0.76190476 4:0 \0A0.1906634538436009 1:0.42 2:0.79310345 3:0.57142857 4:0 \0A-0.04833178027831733 1:0.42 2:0.79310345 3:0.80952381 4:0 \0A-0.3907742563155945 1:0.46 2:0.18518519 3:0.2173913 4:0 \0A1 1:0.46 2:0.18518519 3:0.69565217 4:0 \0A-1 1:0.46 2:0.2962963 3:0.30434783 4:0 \0A-1 1:0.46 2:0.2962963 3:0.60869565 4:0 \0A1 1:0.46 2:0.40740741 3:0.43478261 4:0 \0A1 1:0.46 2:0.44444444 3:0.43478261 4:0 \0A-1 1:0.46 2:0.44444444 3:0.56521739 4:0 \0A-1 1:0.46 2:0.48148148 3:0.65217391 4:0 \0A-1 1:0.46 2:0.55555556 3:0.60869565 4:0 \0A1 1:0.46 2:0.55555556 3:0.65217391 4:0 \0A0.8448819072349042 1:0.46 2:0.59259259 3:0.47826087 4:0 \0A-0.3714223663291514 1:0.46 2:0.66666667 3:0.47826087 4:0 \0A-1 1:0.46 2:0.66666667 3:0.65217391 4:0 \0A0.4006138837863371 1:0.46 2:0.74074074 3:0.69565217 4:0 \0A0.0538378782246542 1:0.46 2:0.81481481 3:0.30434783 4:0 \0A-1 1:0.48 2:0.19230769 3:0.29166667 4:0 \0A0.01972706150638374 1:0.48 2:0.30769231 3:0.20833333 4:0 \0A-1 1:0.48 2:0.34615385 3:0.41666667 4:0 \0A0.851940977873443 1:0.48 2:0.34615385 3:0.54166667 4:0 \0A1 1:0.48 2:0.46153846 3:0.58333333 4:0 \0A1 1:0.48 2:0.76923077 3:0.33333333 4:0 \0A-1 1:0.48 2:0.80769231 3:0.79166667 4:0 \0A0.08737037115441017 1:0.5 2:0.2 3:0.72 4:0 \0A-0.4224730313050076 1:0.5 2:0.2 3:0.8 4:0 \0A1 1:0.5 2:0.32 3:0.76 4:0 \0A1 1:0.5 2:0.4 3:0.44 4:0 \0A-1 1:0.5 2:0.44 3:0.44 4:0 \0A0.6904008998969356 1:0.5 2:0.44 3:0.56 4:0 \0A-1 1:0.5 2:0.44 3:0.6 4:0 \0A-0.004380864230783311 1:0.5 2:0.64 3:0.56 4:0 \0A-1 1:0.5 2:0.72 3:0.8 4:0 \0A-1 1:0.5 2:0.8 3:0.48 4:0 \0A-0.6346423135556399 1:0.52 2:0.20833333 3:0.80769231 4:0 \0A0.9850633403914929 1:0.52 2:0.29166667 3:0.76923077 4:0 \0A1 1:0.52 2:0.33333333 3:0.30769231 4:0 \0A0.5949274112576541 1:0.52 2:0.33333333 3:0.46153846 4:0 \0A1 1:0.52 2:0.41666667 3:0.26923077 4:0 \0A1 1:0.52 2:0.45833333 3:0.30769231 4:0 \0A0.08668357542314302 1:0.52 2:0.5 3:0.19230769 4:0 \0A0.0517982341325497 1:0.52 2:0.5 3:0.65384615 4:0 \0A1 1:0.52 2:0.54166667 3:0.46153846 4:0 \0A-0.1280547510237239 1:0.52 2:0.66666667 3:0.19230769 4:0 \0A-0.3356880461332991 1:0.52 2:0.66666667 3:0.34615385 4:0 \0A-0.07575318986456843 1:0.56 2:0.18181818 3:0.60714286 4:0 \0A1 1:0.56 2:0.27272727 3:0.39285714 4:0 \0A-1 1:0.56 2:0.27272727 3:0.60714286 4:0 \0A-1 1:0.56 2:0.31818182 3:0.21428571 4:0 \0A-1 1:0.56 2:0.31818182 3:0.46428571 4:0 \0A-0.2905756973820707 1:0.56 2:0.36363636 3:0.21428571 4:0 \0A-1 1:0.56 2:0.36363636 3:0.46428571 4:0 \0A1 1:0.56 2:0.36363636 3:0.53571429 4:0 \0A-1 1:0.56 2:0.63636364 3:0.35714286 4:0 \0A1 1:0.56 2:0.68181818 3:0.75 4:0 \0A0.09348882192165238 1:0.56 2:0.77272727 3:0.64285714 4:0 \0A1 1:0.56 2:0.77272727 3:0.75 4:0 \0A0.3166998678005198 1:0.56 2:0.81818182 3:0.71428571 4:0 \0A-0.4260517271618464 1:0.58 2:0.19047619 3:0.44827586 4:0 \0A1 1:0.58 2:0.19047619 3:0.48275862 4:0 \0A1 1:0.58 2:0.23809524 3:0.4137931 4:0 \0A-0.9925301847251352 1:0.58 2:0.28571429 3:0.5862069 4:0 \0A0.6497271665147746 1:0.58 2:0.42857143 3:0.4137931 4:0 \0A1 1:0.58 2:0.66666667 3:0.75862069 4:0 \0A1 1:0.58 2:0.80952381 3:0.4137931 4:0 \0A-0.4717024472816282 1:0.58 2:0.80952381 3:0.44827586 4:0 \0A0.2854282084898161 1:0.58 2:0.80952381 3:0.55172414 4:0 \0A0.3310846395375033 1:0.6 2:0.35 3:0.43333333 4:0 \0A1 1:0.6 2:0.35 3:0.5 4:0 \0A1 1:0.6 2:0.35 3:0.53333333 4:0 \0A-1 1:0.6 2:0.45 3:0.4 4:0 \0A-1 1:0.6 2:0.5 3:0.6 4:0 \0A1 1:0.6 2:0.55 3:0.6 4:0 \0A1 1:0.6 2:0.6 3:0.3 4:0 \0A0.8821905929437969 1:0.6 2:0.65 3:0.3 4:0 \0A-1 1:0.6 2:0.65 3:0.66666667 4:0 \0A1 1:0.6 2:0.65 3:0.76666667 4:0 \0A-0.6060756704341599 1:0.6 2:0.65 3:0.8 4:0 \0A1 1:0.6 2:0.7 3:0.4 4:0 \0A1 1:0.6 2:0.7 3:0.43333333 4:0 \0A-0.004793770874371793 1:0.6 2:0.8 3:0.8 4:0 \0A1 1:0.62 2:0.21052632 3:0.29032258 4:0 \0A1 1:0.62 2:0.21052632 3:0.70967742 4:0 \0A1 1:0.62 2:0.21052632 3:0.74193548 4:0 \0A0.0299021110057953 1:0.62 2:0.31578947 3:0.48387097 4:0 \0A-1 1:0.62 2:0.42105263 3:0.5483871 4:0 \0A-0.1545424353917149 1:0.62 2:0.42105263 3:0.80645161 4:0 \0A1 1:0.62 2:0.47368421 3:0.74193548 4:0 \0A-0.2581478467317246 1:0.62 2:0.52631579 3:0.38709677 4:0 \0A0.5074921703322104 1:0.62 2:0.52631579 3:0.4516129 4:0 \0A-0.3437154540569268 1:0.62 2:0.57894737 3:0.29032258 4:0 \0A-1 1:0.62 2:0.57894737 3:0.80645161 4:0 \0A-1 1:0.62 2:0.63157895 3:0.38709677 4:0 \0A1 1:0.62 2:0.68421053 3:0.48387097 4:0 \0A-0.2442209513782373 1:0.62 2:0.73684211 3:0.64516129 4:0 \0A-1 1:0.62 2:0.78947368 3:0.70967742 4:0 \0A-1 1:0.62 2:0.78947368 3:0.80645161 4:0 \0A-1 1:0.66 2:0.17647059 3:0.63636364 4:0 \0A-1 1:0.66 2:0.29411765 3:0.48484848 4:0 \0A-1 1:0.66 2:0.35294118 3:0.45454545 4:0 \0A0.1524267994692118 1:0.66 2:0.41176471 3:0.3030303 4:0 \0A1 1:0.66 2:0.41176471 3:0.60606061 4:0 \0A0.2791149611531762 1:0.66 2:0.47058824 3:0.75757576 4:0 \0A1 1:0.66 2:0.52941176 3:0.24242424 4:0 \0A-1 1:0.66 2:0.52941176 3:0.45454545 4:0 \0A-1 1:0.66 2:0.58823529 3:0.21212121 4:0 \0A-1 1:0.66 2:0.58823529 3:0.54545455 4:0 \0A-1 1:0.66 2:0.70588235 3:0.36363636 4:0 \0A-0.6436259558106683 1:0.66 2:0.76470588 3:0.21212121 4:0 \0A-1 1:0.66 2:0.76470588 3:0.63636364 4:0 \0A0.1271433494957664 1:0.68 2:0.1875 3:0.5 4:0 \0A-1 1:0.68 2:0.1875 3:0.79411765 4:0 \0A-1 1:0.68 2:0.25 3:0.41176471 4:0 \0A-1 1:0.68 2:0.3125 3:0.55882353 4:0 \0A1 1:0.68 2:0.3125 3:0.70588235 4:0 \0A0.1480043942705204 1:0.68 2:0.375 3:0.70588235 4:0 \0A-1 1:0.68 2:0.4375 3:0.35294118 4:0 \0A0.9365230229594439 1:0.68 2:0.5625 3:0.5 4:0 \0A-0.008516292609770578 1:0.68 2:0.6875 3:0.44117647 4:0 \0A-1 1:0.68 2:0.6875 3:0.5 4:0 \0A-1 1:0.68 2:0.75 3:0.58823529 4:0 \0A1 1:0.68 2:0.8125 3:0.76470588 4:0 \0A-0.001432571849798507 1:0.68 2:0.8125 3:0.79411765 4:0 \0A-0.3554903896331749 1:0.7 2:0.26666667 3:0.54285714 4:0 \0A1 1:0.7 2:0.46666667 3:0.34285714 4:0 \0A-1 1:0.7 2:0.53333333 3:0.48571429 4:0 \0A1 1:0.7 2:0.6 3:0.45714286 4:0 \0A1 1:0.7 2:0.66666667 3:0.71428571 4:0 \0A-1 1:0.7 2:0.66666667 3:0.8 4:0 \0A-1 1:0.7 2:0.73333333 3:0.34285714 4:0 \0A0.2070556056571206 1:0.72 2:0.21428571 3:0.30555556 4:0 \0A-1 1:0.72 2:0.21428571 3:0.80555556 4:0 \0A1 1:0.72 2:0.28571429 3:0.55555556 4:0 \0A-0.9122445886983376 1:0.72 2:0.28571429 3:0.80555556 4:0 \0A-1 1:0.72 2:0.42857143 3:0.44444444 4:0 \0A1 1:0.72 2:0.64285714 3:0.30555556 4:0 \0A-1 1:0.72 2:0.71428571 3:0.44444444 4:0 \0A1 1:0.72 2:0.71428571 3:0.5 4:0 \0A1 1:0.72 2:0.78571429 3:0.75 4:0 \0A-1 1:0.72 2:0.78571429 3:0.80555556 4:0 \0A1 1:0.76 2:0.16666667 3:0.76315789 4:0 \0A-1 1:0.76 2:0.33333333 3:0.34210526 4:0 \0A1 1:0.76 2:0.41666667 3:0.34210526 4:0 \0A-1 1:0.76 2:0.41666667 3:0.5 4:0 \0A0.3432488098085674 1:0.76 2:0.5 3:0.60526316 4:0 \0A0.7462270587993467 1:0.76 2:0.75 3:0.34210526 4:0 \0A1 1:0.76 2:0.75 3:0.71052632 4:0 \0A0.3318962452637436 1:0.76 2:0.83333333 3:0.26315789 4:0 \0A0.3948659537459074 1:0.76 2:0.83333333 3:0.71052632 4:0 \0A0.2143333521924379 1:0.78 2:0.18181818 3:0.25641026 4:0 \0A-0.3407614661319019 1:0.78 2:0.27272727 3:0.46153846 4:0 \0A1 1:0.78 2:0.27272727 3:0.53846154 4:0 \0A-1 1:0.78 2:0.27272727 3:0.58974359 4:0 \0A-0.5288027535957321 1:0.78 2:0.27272727 3:0.69230769 4:0 \0A1 1:0.78 2:0.36363636 3:0.30769231 4:0 \0A1 1:0.78 2:0.45454545 3:0.46153846 4:0 \0A-1 1:0.78 2:0.63636364 3:0.41025641 4:0 \0A-0.04344357111417033 1:0.78 2:0.63636364 3:0.53846154 4:0 \0A1 1:0.78 2:0.63636364 3:0.58974359 4:0 \0A-1 1:0.78 2:0.63636364 3:0.69230769 4:0 \0A0.1994254430552846 1:0.78 2:0.81818182 3:0.58974359 4:0 \0A0.005659180594987566 1:0.78 2:0.81818182 3:0.69230769 4:0 \0A0.8381087643483256 1:0.8 2:0.2 3:0.5 4:0 \0A1 1:0.8 2:0.2 3:0.75 4:0 \0A-0.184642318063764 1:0.8 2:0.2 3:0.8 4:0 \0A1 1:0.8 2:0.3 3:0.45 4:0 \0A-1 1:0.8 2:0.3 3:0.55 4:0 \0A1 1:0.8 2:0.3 3:0.6 4:0 \0A-1 1:0.8 2:0.4 3:0.25 4:0 \0A0.585221005633252 1:0.8 2:0.5 3:0.5 4:0 \0A-1 1:0.8 2:0.6 3:0.7 4:0 \0A0.2941193604796581 1:0.8 2:0.6 3:0.8 4:0 \0A0.1592012573097206 1:0.8 2:0.7 3:0.2 4:0 \0A1 1:0.8 2:0.7 3:0.65 4:0 \0A-0.05520193805896165 1:0.8 2:0.8 3:0.3 4:0 \0A0.9676978202167011 1:0.8 2:0.8 3:0.5 4:0 \0A-1 1:0.8 2:0.8 3:0.65 4:0 \0A1 1:0.2 2:0.25 3:0.55 4:0.14285714 \0A1 1:0.2 2:0.25 3:0.75 4:0.14285714 \0A0.0135812449218331 1:0.2 2:0.25 3:0.8 4:0.14285714 \0A-0.8026014410769956 1:0.2 2:0.3 3:0.4 4:0.14285714 \0A-0.7685256146757016 1:0.2 2:0.3 3:0.6 4:0.14285714 \0A0.9775756677521732 1:0.2 2:0.35 3:0.4 4:0.14285714 \0A0.4012079565297025 1:0.2 2:0.35 3:0.8 4:0.14285714 \0A0.084205326941587 1:0.2 2:0.4 3:0.2 4:0.14285714 \0A-0.9325615875333091 1:0.2 2:0.6 3:0.25 4:0.14285714 \0A-0.5090757378913543 1:0.2 2:0.6 3:0.55 4:0.14285714 \0A0.3145545343993413 1:0.2 2:0.65 3:0.5 4:0.14285714 \0A1 1:0.2 2:0.7 3:0.25 4:0.14285714 \0A0.9013755166996397 1:0.2 2:0.7 3:0.5 4:0.14285714 \0A0.6994024769900444 1:0.2 2:0.7 3:0.8 4:0.14285714 \0A1 1:0.2 2:0.75 3:0.35 4:0.14285714 \0A-0.6235990890611504 1:0.2 2:0.8 3:0.65 4:0.14285714 \0A0.2958250027729296 1:0.23 2:0.4025974 3:0.30434783 4:0.14285714 \0A-0.2192056942899054 1:0.23 2:0.4025974 3:0.34782609 4:0.14285714 \0A-1 1:0.23 2:0.54545455 3:0.2173913 4:0.14285714 \0A-1 1:0.23 2:0.5974026 3:0.34782609 4:0.14285714 \0A0.8422731689814177 1:0.23 2:0.7012987 3:0.60869565 4:0.14285714 \0A1 1:0.23 2:0.75324675 3:0.2173913 4:0.14285714 \0A0.7191435535347683 1:0.23 2:0.75324675 3:0.26086957 4:0.14285714 \0A0.8036040151192584 1:0.25 2:0.2 3:0.32 4:0.14285714 \0A0.0531837268725287 1:0.25 2:0.2 3:0.48 4:0.14285714 \0A0.07948171232753268 1:0.25 2:0.25333333 3:0.72 4:0.14285714 \0A-1 1:0.25 2:0.30666667 3:0.48 4:0.14285714 \0A1 1:0.25 2:0.4 3:0.24 4:0.14285714 \0A-1 1:0.25 2:0.4 3:0.72 4:0.14285714 \0A-1 1:0.25 2:0.65333333 3:0.32 4:0.14285714 \0A-0.2889520237414525 1:0.25 2:0.8 3:0.2 4:0.14285714 \0A1 1:0.28 2:0.25 3:0.60714286 4:0.14285714 \0A1 1:0.28 2:0.69444444 3:0.60714286 4:0.14285714 \0A1 1:0.28 2:0.75 3:0.21428571 4:0.14285714 \0A-0.2464607732202429 1:0.3 2:0.25714286 3:0.2 4:0.14285714 \0A-0.6712518318458536 1:0.3 2:0.35714286 3:0.4 4:0.14285714 \0A-0.1282745858845328 1:0.3 2:0.5 3:0.3 4:0.14285714 \0A-0.4303798348941193 1:0.3 2:0.6 3:0.36666667 4:0.14285714 \0A0.3061341905860213 1:0.33 2:0.19402985 3:0.60606061 4:0.14285714 \0A1 1:0.33 2:0.25373134 3:0.75757576 4:0.14285714 \0A-1 1:0.33 2:0.34328358 3:0.60606061 4:0.14285714 \0A-1 1:0.33 2:0.49253731 3:0.24242424 4:0.14285714 \0A-0.1916075978069539 1:0.33 2:0.70149254 3:0.39393939 4:0.14285714 \0A-0.8107959204598276 1:0.33 2:0.74626866 3:0.45454545 4:0.14285714 \0A1 1:0.33 2:0.80597015 3:0.45454545 4:0.14285714 \0A0.03383131775163409 1:0.33 2:0.80597015 3:0.60606061 4:0.14285714 \0A1 1:0.35 2:0.44615385 3:0.48571429 4:0.14285714 \0A-0.8410280016447177 1:0.35 2:0.6 3:0.65714286 4:0.14285714 \0A-1 1:0.35 2:0.70769231 3:0.34285714 4:0.14285714 \0A0.5900178416694913 1:0.38 2:0.19354839 3:0.34210526 4:0.14285714 \0A-1 1:0.38 2:0.25806452 3:0.26315789 4:0.14285714 \0A1 1:0.38 2:0.25806452 3:0.34210526 4:0.14285714 \0A-0.7412654209023689 1:0.38 2:0.25806452 3:0.39473684 4:0.14285714 \0A-1 1:0.38 2:0.30645161 3:0.5 4:0.14285714 \0A-0.235475636679371 1:0.38 2:0.35483871 3:0.39473684 4:0.14285714 \0A0.3141595494818585 1:0.38 2:0.40322581 3:0.5 4:0.14285714 \0A-0.05407698055811676 1:0.38 2:0.40322581 3:0.55263158 4:0.14285714 \0A1 1:0.38 2:0.4516129 3:0.28947368 4:0.14285714 \0A-1 1:0.38 2:0.69354839 3:0.60526316 4:0.14285714 \0A0.07137123820619147 1:0.38 2:0.75806452 3:0.71052632 4:0.14285714 \0A1 1:0.4 2:0.45 3:0.25 4:0.14285714 \0A0.413986588069465 1:0.4 2:0.45 3:0.55 4:0.14285714 \0A0.3359383378486254 1:0.4 2:0.55 3:0.5 4:0.14285714 \0A0.1256586161151745 1:0.4 2:0.65 3:0.7 4:0.14285714 \0A0.00252607753861751 1:0.4 2:0.75 3:0.45 4:0.14285714 \0A-0.2144156128093337 1:0.43 2:0.29824561 3:0.65116279 4:0.14285714 \0A-0.7087597365855008 1:0.43 2:0.29824561 3:0.69767442 4:0.14285714 \0A1 1:0.43 2:0.40350877 3:0.44186047 4:0.14285714 \0A1 1:0.43 2:0.40350877 3:0.74418605 4:0.14285714 \0A1 1:0.43 2:0.59649123 3:0.30232558 4:0.14285714 \0A-1 1:0.43 2:0.64912281 3:0.30232558 4:0.14285714 \0A-1 1:0.43 2:0.70175439 3:0.65116279 4:0.14285714 \0A-1 1:0.45 2:0.25454545 3:0.44444444 4:0.14285714 \0A-1 1:0.45 2:0.30909091 3:0.24444444 4:0.14285714 \0A-1 1:0.45 2:0.34545455 3:0.71111111 4:0.14285714 \0A1 1:0.45 2:0.45454545 3:0.44444444 4:0.14285714 \0A0.5215742201315625 1:0.45 2:0.45454545 3:0.75555556 4:0.14285714 \0A-0.05451925094449037 1:0.45 2:0.65454545 3:0.31111111 4:0.14285714 \0A-0.2890098682620317 1:0.45 2:0.65454545 3:0.48888889 4:0.14285714 \0A1 1:0.45 2:0.70909091 3:0.48888889 4:0.14285714 \0A-0.9349799701267902 1:0.48 2:0.75 3:0.54166667 4:0.14285714 \0A0.4758927948722542 1:0.48 2:0.75 3:0.79166667 4:0.14285714 \0A-1 1:0.5 2:0.26 3:0.66 4:0.14285714 \0A-1 1:0.5 2:0.4 3:0.54 4:0.14285714 \0A-0.3058869998982018 1:0.5 2:0.44 3:0.4 4:0.14285714 \0A-1 1:0.5 2:0.5 3:0.4 4:0.14285714 \0A1 1:0.5 2:0.66 3:0.26 4:0.14285714 \0A0.8303820099239545 1:0.53 2:0.19148936 3:0.75471698 4:0.14285714 \0A1 1:0.53 2:0.25531915 3:0.20754717 4:0.14285714 \0A0.1114349604130157 1:0.53 2:0.25531915 3:0.24528302 4:0.14285714 \0A0.008105863078445264 1:0.53 2:0.29787234 3:0.79245283 4:0.14285714 \0A1 1:0.53 2:0.44680851 3:0.24528302 4:0.14285714 \0A-1 1:0.53 2:0.55319149 3:0.49056604 4:0.14285714 \0A0.7086960866800173 1:0.53 2:0.55319149 3:0.79245283 4:0.14285714 \0A0.3601005783740542 1:0.53 2:0.59574468 3:0.69811321 4:0.14285714 \0A-0.3376548789646864 1:0.53 2:0.74468085 3:0.24528302 4:0.14285714 \0A-1 1:0.55 2:0.31111111 3:0.4 4:0.14285714 \0A1 1:0.55 2:0.35555556 3:0.49090909 4:0.14285714 \0A-1 1:0.55 2:0.4 3:0.34545455 4:0.14285714 \0A-1 1:0.55 2:0.44444444 3:0.45454545 4:0.14285714 \0A-0.1014765660528771 1:0.55 2:0.44444444 3:0.65454545 4:0.14285714 \0A1 1:0.55 2:0.48888889 3:0.6 4:0.14285714 \0A-0.9063870089311084 1:0.55 2:0.71111111 3:0.34545455 4:0.14285714 \0A1 1:0.55 2:0.71111111 3:0.49090909 4:0.14285714 \0A-1 1:0.55 2:0.75555556 3:0.30909091 4:0.14285714 \0A1 1:0.58 2:0.45238095 3:0.5 4:0.14285714 \0A1 1:0.58 2:0.45238095 3:0.55172414 4:0.14285714 \0A-1 1:0.58 2:0.45238095 3:0.65517241 4:0.14285714 \0A-0.4973715725957024 1:0.58 2:0.5 3:0.20689655 4:0.14285714 \0A-0.7771073676239159 1:0.58 2:0.54761905 3:0.29310345 4:0.14285714 \0A1 1:0.58 2:0.69047619 3:0.29310345 4:0.14285714 \0A0.08248852075435595 1:0.58 2:0.76190476 3:0.5 4:0.14285714 \0A1 1:0.6 2:0.5 3:0.5 4:0.14285714 \0A-1 1:0.6 2:0.6 3:0.5 4:0.14285714 \0A1 1:0.6 2:0.65 3:0.45 4:0.14285714 \0A-0.003486673199532867 1:0.6 2:0.7 3:0.65 4:0.14285714 \0A0.1122273763084038 1:0.6 2:0.75 3:0.6 4:0.14285714 \0A1 1:0.63 2:0.18918919 3:0.44444444 4:0.14285714 \0A1 1:0.63 2:0.24324324 3:0.49206349 4:0.14285714 \0A0.2321579262749023 1:0.63 2:0.2972973 3:0.55555556 4:0.14285714 \0A-1 1:0.63 2:0.2972973 3:0.6031746 4:0.14285714 \0A-0.01636137455530932 1:0.63 2:0.2972973 3:0.65079365 4:0.14285714 \0A-1 1:0.63 2:0.40540541 3:0.34920635 4:0.14285714 \0A-0.5597514498395699 1:0.63 2:0.45945946 3:0.6031746 4:0.14285714 \0A-1 1:0.63 2:0.48648649 3:0.65079365 4:0.14285714 \0A-1 1:0.63 2:0.59459459 3:0.6984127 4:0.14285714 \0A0.06433561841474116 1:0.63 2:0.64864865 3:0.20634921 4:0.14285714 \0A-0.07691991093928076 1:0.63 2:0.64864865 3:0.6984127 4:0.14285714 \0A-0.01873148930413057 1:0.63 2:0.81081081 3:0.20634921 4:0.14285714 \0A1 1:0.65 2:0.31428571 3:0.44615385 4:0.14285714 \0A1 1:0.65 2:0.34285714 3:0.49230769 4:0.14285714 \0A1 1:0.65 2:0.4 3:0.30769231 4:0.14285714 \0A-1 1:0.65 2:0.45714286 3:0.35384615 4:0.14285714 \0A-1 1:0.65 2:0.48571429 3:0.64615385 4:0.14285714 \0A1 1:0.65 2:0.54285714 3:0.44615385 4:0.14285714 \0A0.3480305908398122 1:0.65 2:0.65714286 3:0.4 4:0.14285714 \0A0.6868904453565011 1:0.65 2:0.8 3:0.24615385 4:0.14285714 \0A-0.1104392735732009 1:0.65 2:0.8 3:0.8 4:0.14285714 \0A-1 1:0.68 2:0.1875 3:0.45588235 4:0.14285714 \0A-1 1:0.68 2:0.3125 3:0.35294118 4:0.14285714 \0A1 1:0.68 2:0.3125 3:0.39705882 4:0.14285714 \0A0.9468809409993679 1:0.68 2:0.3125 3:0.70588235 4:0.14285714 \0A-0.8960939004407403 1:0.68 2:0.40625 3:0.35294118 4:0.14285714 \0A-1 1:0.68 2:0.4375 3:0.45588235 4:0.14285714 \0A0.06760220585767736 1:0.68 2:0.65625 3:0.64705882 4:0.14285714 \0A0.162399393019196 1:0.68 2:0.6875 3:0.54411765 4:0.14285714 \0A0.3309947291828618 1:0.68 2:0.75 3:0.35294118 4:0.14285714 \0A1 1:0.68 2:0.75 3:0.64705882 4:0.14285714 \0A-1 1:0.7 2:0.2 3:0.35714286 4:0.14285714 \0A-0.3113899174485042 1:0.7 2:0.2 3:0.5 4:0.14285714 \0A0.710057180189838 1:0.7 2:0.2 3:0.75714286 4:0.14285714 \0A1 1:0.7 2:0.36666667 3:0.5 4:0.14285714 \0A1 1:0.7 2:0.4 3:0.44285714 4:0.14285714 \0A1 1:0.7 2:0.5 3:0.44285714 4:0.14285714 \0A-1 1:0.7 2:0.6 3:0.44285714 4:0.14285714 \0A1 1:0.7 2:0.66666667 3:0.75714286 4:0.14285714 \0A-1 1:0.7 2:0.8 3:0.44285714 4:0.14285714 \0A0.7188623512484075 1:0.7 2:0.8 3:0.7 4:0.14285714 \0A-0.7518566797217892 1:0.73 2:0.18518519 3:0.30136986 4:0.14285714 \0A1 1:0.73 2:0.25925926 3:0.49315068 4:0.14285714 \0A-1 1:0.73 2:0.33333333 3:0.64383562 4:0.14285714 \0A0.06042968540423314 1:0.73 2:0.40740741 3:0.75342466 4:0.14285714 \0A1 1:0.73 2:0.55555556 3:0.49315068 4:0.14285714 \0A-1 1:0.73 2:0.55555556 3:0.64383562 4:0.14285714 \0A1 1:0.73 2:0.59259259 3:0.75342466 4:0.14285714 \0A-1 1:0.75 2:0.2 3:0.49333333 4:0.14285714 \0A-0.6683909180333789 1:0.75 2:0.36 3:0.8 4:0.14285714 \0A-1 1:0.75 2:0.48 3:0.4 4:0.14285714 \0A-1 1:0.75 2:0.72 3:0.65333333 4:0.14285714 \0A-0.4874925451625081 1:0.75 2:0.76 3:0.2 4:0.14285714 \0A0.8632010530330415 1:0.78 2:0.18181818 3:0.3974359 4:0.14285714 \0A-0.8522146967960993 1:0.78 2:0.18181818 3:0.6025641 4:0.14285714 \0A-0.3865716017775887 1:0.78 2:0.27272727 3:0.29487179 4:0.14285714 \0A-1 1:0.78 2:0.27272727 3:0.65384615 4:0.14285714 \0A1 1:0.78 2:0.31818182 3:0.75641026 4:0.14285714 \0A0.7293614336893464 1:0.78 2:0.40909091 3:0.20512821 4:0.14285714 \0A0.05514930970405035 1:0.78 2:0.45454545 3:0.55128205 4:0.14285714 \0A-1 1:0.78 2:0.5 3:0.44871795 4:0.14285714 \0A1 1:0.78 2:0.5 3:0.5 4:0.14285714 \0A0.3051973680621083 1:0.78 2:0.5 3:0.65384615 4:0.14285714 \0A1 1:0.78 2:0.59090909 3:0.5 4:0.14285714 \0A1 1:0.78 2:0.59090909 3:0.75641026 4:0.14285714 \0A-1 1:0.78 2:0.68181818 3:0.34615385 4:0.14285714 \0A-1 1:0.78 2:0.77272727 3:0.5 4:0.14285714 \0A-1 1:0.8 2:0.25 3:0.3 4:0.14285714 \0A1 1:0.8 2:0.3 3:0.35 4:0.14285714 \0A-1 1:0.8 2:0.3 3:0.55 4:0.14285714 \0A-1 1:0.8 2:0.3 3:0.65 4:0.14285714 \0A1 1:0.8 2:0.35 3:0.75 4:0.14285714 \0A0.248332642183202 1:0.8 2:0.4 3:0.2 4:0.14285714 \0A-1 1:0.8 2:0.4 3:0.3 4:0.14285714 \0A1 1:0.8 2:0.4 3:0.5 4:0.14285714 \0A-0.009407532520902937 1:0.8 2:0.45 3:0.7 4:0.14285714 \0A-1 1:0.8 2:0.5 3:0.55 4:0.14285714 \0A-0.7145209728416626 1:0.8 2:0.6 3:0.6 4:0.14285714 \0A1 1:0.8 2:0.65 3:0.45 4:0.14285714 \0A-1 1:0.8 2:0.7 3:0.65 4:0.14285714 \0A-0.6890954729149655 1:0.8 2:0.75 3:0.65 4:0.14285714 \0A-1 1:0.2 2:0.2 3:0.8 4:0.28571429 \0A-0.009153621697841157 1:0.2 2:0.25 3:0.6 4:0.28571429 \0A-0.1313784341058974 1:0.2 2:0.3 3:0.2 4:0.28571429 \0A-0.002479834842920828 1:0.2 2:0.35 3:0.43333333 4:0.28571429 \0A0.4565628345544172 1:0.2 2:0.45 3:0.2 4:0.28571429 \0A0.1383189806349542 1:0.2 2:0.55 3:0.5 4:0.28571429 \0A-0.5164845584433336 1:0.2 2:0.6 3:0.7 4:0.28571429 \0A0.0707607192624703 1:0.2 2:0.7 3:0.2 4:0.28571429 \0A1 1:0.2 2:0.75 3:0.26666667 4:0.28571429 \0A-1 1:0.2 2:0.8 3:0.2 4:0.28571429 \0A-1 1:0.2 2:0.8 3:0.26666667 4:0.28571429 \0A-0.2414697052861657 1:0.2 2:0.8 3:0.3 4:0.28571429 \0A-1 1:0.2 2:0.8 3:0.36666667 4:0.28571429 \0A-0.4444893268470444 1:0.2 2:0.8 3:0.53333333 4:0.28571429 \0A-0.1956618504441442 1:0.2 2:0.8 3:0.8 4:0.28571429 \0A-0.009805760377205651 1:0.22666667 2:0.19827586 3:0.5 4:0.28571429 \0A-1 1:0.22666667 2:0.30172414 3:0.29411765 4:0.28571429 \0A0.6454748818995671 1:0.22666667 2:0.5 3:0.41176471 4:0.28571429 \0A-1 1:0.22666667 2:0.64655172 3:0.41176471 4:0.28571429 \0A-0.6997076741276671 1:0.25333333 2:0.34821429 3:0.21052632 4:0.28571429 \0A1 1:0.25333333 2:0.40178571 3:0.26315789 4:0.28571429 \0A-0.04834090877712734 1:0.25333333 2:0.5 3:0.28947368 4:0.28571429 \0A-0.02232260439728159 1:0.25333333 2:0.65178571 3:0.26315789 4:0.28571429 \0A-0.3405173591588186 1:0.27333333 2:0.20183486 3:0.80487805 4:0.28571429 \0A-0.3266420577485906 1:0.27333333 2:0.40366972 3:0.34146341 4:0.28571429 \0A-0.4141392763783503 1:0.27333333 2:0.44954128 3:0.80487805 4:0.28571429 \0A0.8758516620226078 1:0.27333333 2:0.75229358 3:0.29268293 4:0.28571429 \0A1 1:0.27333333 2:0.79816514 3:0.48780488 4:0.28571429 \0A1 1:0.3 2:0.4952381 3:0.48888889 4:0.28571429 \0A-0.0215540361498599 1:0.3 2:0.55238095 3:0.31111111 4:0.28571429 \0A-1 1:0.3 2:0.6 3:0.2 4:0.28571429 \0A-0.2092678511592358 1:0.3 2:0.7047619 3:0.44444444 4:0.28571429 \0A1 1:0.32666667 2:0.3960396 3:0.20408163 4:0.28571429 \0A-0.2062452460202211 1:0.32666667 2:0.55445545 3:0.55102041 4:0.28571429 \0A-0.9161086752999634 1:0.32666667 2:0.65346535 3:0.59183673 4:0.28571429 \0A0.1806946055210689 1:0.37333333 2:0.5 3:0.25 4:0.28571429 \0A-0.00868962573219461 1:0.4 2:0.2 3:0.2 4:0.28571429 \0A-0.2393378447072121 1:0.4 2:0.2 3:0.65 4:0.28571429 \0A1 1:0.4 2:0.44444444 3:0.6 4:0.28571429 \0A1 1:0.4 2:0.54444444 3:0.4 4:0.28571429 \0A-0.002414819981314899 1:0.4 2:0.8 3:0.8 4:0.28571429 \0A-0.020036072540305 1:0.42666667 2:0.30232558 3:0.59375 4:0.28571429 \0A0.03398685675855961 1:0.42666667 2:0.80232558 3:0.5 4:0.28571429 \0A0.2112501195531246 1:0.45333333 2:0.30487805 3:0.39705882 4:0.28571429 \0A-0.3883166443521887 1:0.45333333 2:0.69512195 3:0.29411765 4:0.28571429 \0A-0.7831384196100754 1:0.45333333 2:0.80487805 3:0.35294118 4:0.28571429 \0A1 1:0.47333333 2:0.4556962 3:0.29577465 4:0.28571429 \0A0.3378134201057068 1:0.47333333 2:0.49367089 3:0.45070423 4:0.28571429 \0A0.04082363374500229 1:0.47333333 2:0.59493671 3:0.54929577 4:0.28571429 \0A-0.1532313631608456 1:0.5 2:0.2 3:0.25333333 4:0.28571429 \0A0.1380902769140323 1:0.5 2:0.65333333 3:0.74666667 4:0.28571429 \0A-0.01975576171928858 1:0.52666667 2:0.1971831 3:0.69620253 4:0.28571429 \0A-1 1:0.52666667 2:0.45070423 3:0.20253165 4:0.28571429 \0A-1 1:0.52666667 2:0.49295775 3:0.25316456 4:0.28571429 \0A-0.3103618655012569 1:0.52666667 2:0.49295775 3:0.4556962 4:0.28571429 \0A1 1:0.52666667 2:0.70422535 3:0.5443038 4:0.28571429 \0A0.9381322913971272 1:0.55333333 2:0.34328358 3:0.4939759 4:0.28571429 \0A-0.0994378374125251 1:0.55333333 2:0.40298507 3:0.20481928 4:0.28571429 \0A-0.05038129662857919 1:0.55333333 2:0.40298507 3:0.34939759 4:0.28571429 \0A-0.01254952373562108 1:0.55333333 2:0.44776119 3:0.20481928 4:0.28571429 \0A-1 1:0.55333333 2:0.49253731 3:0.4939759 4:0.28571429 \0A-0.2830598088943482 1:0.55333333 2:0.55223881 3:0.39759036 4:0.28571429 \0A-1 1:0.55333333 2:0.74626866 3:0.60240964 4:0.28571429 \0A1 1:0.57333333 2:0.453125 3:0.75581395 4:0.28571429 \0A1 1:0.57333333 2:0.546875 3:0.25581395 4:0.28571429 \0A1 1:0.57333333 2:0.796875 3:0.60465116 4:0.28571429 \0A1 1:0.6 2:0.55 3:0.5 4:0.28571429 \0A-0.2212560033820343 1:0.6 2:0.75 3:0.75555556 4:0.28571429 \0A-0.1960173777076425 1:0.6 2:0.8 3:0.75555556 4:0.28571429 \0A-1 1:0.62666667 2:0.44642857 3:0.44680851 4:0.28571429 \0A-0.9474008171313877 1:0.62666667 2:0.55357143 3:0.75531915 4:0.28571429 \0A0.320042701644004 1:0.62666667 2:0.64285714 3:0.55319149 4:0.28571429 \0A0.5572991210357569 1:0.62666667 2:0.80357143 3:0.25531915 4:0.28571429 \0A-0.01674810004851782 1:0.62666667 2:0.80357143 3:0.59574468 4:0.28571429 \0A-0.9665533284427191 1:0.65333333 2:0.25 3:0.79591837 4:0.28571429 \0A0.07370729259835491 1:0.65333333 2:0.34615385 3:0.29591837 4:0.28571429 \0A-0.634320632020838 1:0.65333333 2:0.44230769 3:0.5 4:0.28571429 \0A-1 1:0.65333333 2:0.55769231 3:0.79591837 4:0.28571429 \0A0.6678250558289185 1:0.67333333 2:0.20408163 3:0.75247525 4:0.28571429 \0A1 1:0.67333333 2:0.30612245 3:0.2970297 4:0.28571429 \0A1 1:0.67333333 2:0.55102041 3:0.2970297 4:0.28571429 \0A1 1:0.67333333 2:0.55102041 3:0.7029703 4:0.28571429 \0A-1 1:0.67333333 2:0.69387755 3:0.65346535 4:0.28571429 \0A1 1:0.67333333 2:0.75510204 3:0.6039604 4:0.28571429 \0A-1 1:0.67333333 2:0.75510204 3:0.65346535 4:0.28571429 \0A-0.03088693046397993 1:0.67333333 2:0.75510204 3:0.8019802 4:0.28571429 \0A-1 1:0.7 2:0.4 3:0.4 4:0.28571429 \0A-0.2665795502294132 1:0.7 2:0.48888889 3:0.4 4:0.28571429 \0A-1 1:0.72666667 2:0.19512195 3:0.79816514 4:0.28571429 \0A1 1:0.72666667 2:0.29268293 3:0.69724771 4:0.28571429 \0A0.5562062357584229 1:0.72666667 2:0.34146341 3:0.55045872 4:0.28571429 \0A0.3350906470285724 1:0.72666667 2:0.3902439 3:0.69724771 4:0.28571429 \0A0.08458464490745297 1:0.72666667 2:0.48780488 3:0.30275229 4:0.28571429 \0A0.1350030748690175 1:0.72666667 2:0.48780488 3:0.75229358 4:0.28571429 \0A-0.1355959759370596 1:0.72666667 2:0.65853659 3:0.40366972 4:0.28571429 \0A1 1:0.75333333 2:0.24324324 3:0.3539823 4:0.28571429 \0A1 1:0.75333333 2:0.2972973 3:0.39823009 4:0.28571429 \0A-0.01076458780598754 1:0.75333333 2:0.35135135 3:0.3539823 4:0.28571429 \0A0.3325062184578695 1:0.75333333 2:0.40540541 3:0.60176991 4:0.28571429 \0A0.02056886229053846 1:0.75333333 2:0.40540541 3:0.75221239 4:0.28571429 \0A-1 1:0.75333333 2:0.54054054 3:0.79646018 4:0.28571429 \0A-1 1:0.75333333 2:0.7027027 3:0.45132743 4:0.28571429 \0A0.7225386657005112 1:0.77333333 2:0.26470588 3:0.75 4:0.28571429 \0A-1 1:0.77333333 2:0.29411765 3:0.39655172 4:0.28571429 \0A1 1:0.77333333 2:0.35294118 3:0.39655172 4:0.28571429 \0A1 1:0.77333333 2:0.55882353 3:0.5 4:0.28571429 \0A-0.0398919154630647 1:0.77333333 2:0.55882353 3:0.80172414 4:0.28571429 \0A1 1:0.77333333 2:0.70588235 3:0.39655172 4:0.28571429 \0A-0.3099185012768485 1:0.77333333 2:0.76470588 3:0.44827586 4:0.28571429 \0A0.1517874822132456 1:0.77333333 2:0.79411765 3:0.25 4:0.28571429 \0A-1 1:0.77333333 2:0.79411765 3:0.80172414 4:0.28571429 \0A0.8484813143651385 1:0.8 2:0.2 3:0.4 4:0.28571429 \0A0.07388690945811932 1:0.8 2:0.2 3:0.45 4:0.28571429 \0A-0.373632180136441 1:0.8 2:0.2 3:0.6 4:0.28571429 \0A0.7126087501272269 1:0.8 2:0.2 3:0.7 4:0.28571429 \0A0.5129897115547946 1:0.8 2:0.26666667 3:0.4 4:0.28571429 \0A-0.2368856415330242 1:0.8 2:0.3 3:0.8 4:0.28571429 \0A-0.9909047365137956 1:0.8 2:0.36666667 3:0.6 4:0.28571429 \0A-1 1:0.8 2:0.4 3:0.3 4:0.28571429 \0A-1 1:0.8 2:0.43333333 3:0.6 4:0.28571429 \0A1 1:0.8 2:0.5 3:0.5 4:0.28571429 \0A0.747915267823167 1:0.8 2:0.53333333 3:0.2 4:0.28571429 \0A-1 1:0.8 2:0.53333333 3:0.4 4:0.28571429 \0A0.4684610012873625 1:0.8 2:0.6 3:0.5 4:0.28571429 \0A-1 1:0.8 2:0.66666667 3:0.4 4:0.28571429 \0A1 1:0.8 2:0.7 3:0.45 4:0.28571429 \0A1 1:0.8 2:0.7 3:0.75 4:0.28571429 \0A1 1:0.8 2:0.8 3:0.45 4:0.28571429 \0A0.7667760031688282 1:0.8 2:0.8 3:0.75 4:0.28571429 \0A0.4366790463419795 1:0.2 2:0.25 3:0.8 4:0.42857143 \0A0.3572713472673389 1:0.2 2:0.35 3:0.8 4:0.42857143 \0A0.05157729569715787 1:0.2 2:0.7 3:0.35 4:0.42857143 \0A0.1437015156792416 1:0.2 2:0.7 3:0.8 4:0.42857143 \0A0.1057391078643923 1:0.2 2:0.75 3:0.2 4:0.42857143 \0A1 1:0.2 2:0.75 3:0.3 4:0.42857143 \0A0.4022295227494483 1:0.2 2:0.75 3:0.7 4:0.42857143 \0A-0.2603521454922373 1:0.2 2:0.8 3:0.45 4:0.42857143 \0A-1 1:0.2 2:0.8 3:0.8 4:0.42857143 \0A1 1:0.225 2:0.70322581 3:0.71111111 4:0.42857143 \0A0.2930549178660014 1:0.25 2:0.2 3:0.3 4:0.42857143 \0A0.06075958724395708 1:0.25 2:0.3 3:0.8 4:0.42857143 \0A0.02473138698924355 1:0.275 2:0.35172414 3:0.2 4:0.42857143 \0A0.9258466140296825 1:0.275 2:0.75172414 3:0.25454545 4:0.42857143 \0A-0.3334464080350779 1:0.3 2:0.6 3:0.3 4:0.42857143 \0A0.3738127282221404 1:0.325 2:0.25185185 3:0.70769231 4:0.42857143 \0A0.4720824546089779 1:0.325 2:0.8 3:0.75384615 4:0.42857143 \0A-0.5059930574106354 1:0.35 2:0.5 3:0.65714286 4:0.42857143 \0A-0.570070026957038 1:0.375 2:0.352 3:0.34666667 4:0.42857143 \0A-0.9127675552221619 1:0.375 2:0.552 3:0.34666667 4:0.42857143 \0A0.05084456245536301 1:0.375 2:0.752 3:0.70666667 4:0.42857143 \0A0.2253435845961116 1:0.4 2:0.2 3:0.75 4:0.42857143 \0A-1 1:0.4 2:0.35 3:0.55 4:0.42857143 \0A0.02857420325203806 1:0.425 2:0.70434783 3:0.44705882 4:0.42857143 \0A0.537774891139509 1:0.45 2:0.2 3:0.5 4:0.42857143 \0A-0.2396129229583656 1:0.45 2:0.5 3:0.44444444 4:0.42857143 \0A1 1:0.45 2:0.75454545 3:0.34444444 4:0.42857143 \0A-0.01947665695048613 1:0.475 2:0.44761905 3:0.65263158 4:0.42857143 \0A-0.06355054168217732 1:0.475 2:0.75238095 3:0.65263158 4:0.42857143 \0A-0.1023698115433003 1:0.475 2:0.8 3:0.2 4:0.42857143 \0A-0.260002898212768 1:0.55 2:0.4 3:0.7 4:0.42857143 \0A0.006775525698276211 1:0.55 2:0.44444444 3:0.54545455 4:0.42857143 \0A-1 1:0.55 2:0.75555556 3:0.5 4:0.42857143 \0A-0.8480186571824878 1:0.575 2:0.49411765 3:0.4 4:0.42857143 \0A1 1:0.575 2:0.49411765 3:0.74782609 4:0.42857143 \0A1 1:0.575 2:0.70588235 3:0.6 4:0.42857143 \0A0.1938086729646508 1:0.6 2:0.3 3:0.75 4:0.42857143 \0A1 1:0.6 2:0.5 3:0.35 4:0.42857143 \0A0.002158969435392604 1:0.6 2:0.65 3:0.6 4:0.42857143 \0A-0.86397623646373 1:0.625 2:0.2 3:0.8 4:0.42857143 \0A1 1:0.625 2:0.25333333 3:0.752 4:0.42857143 \0A-0.5026859450455132 1:0.625 2:0.4 3:0.648 4:0.42857143 \0A-1 1:0.625 2:0.74666667 3:0.448 4:0.42857143 \0A0.004427053303566669 1:0.65 2:0.2 3:0.54615385 4:0.42857143 \0A1 1:0.65 2:0.4 3:0.35384615 4:0.42857143 \0A0.1691176442758703 1:0.65 2:0.6 3:0.54615385 4:0.42857143 \0A0.8639009881525169 1:0.65 2:0.65714286 3:0.25384615 4:0.42857143 \0A1 1:0.675 2:0.24615385 3:0.74814815 4:0.42857143 \0A0.001828468693192025 1:0.675 2:0.30769231 3:0.25185185 4:0.42857143 \0A-1 1:0.675 2:0.30769231 3:0.45185185 4:0.42857143 \0A-1 1:0.675 2:0.30769231 3:0.7037037 4:0.42857143 \0A-1 1:0.675 2:0.44615385 3:0.7037037 4:0.42857143 \0A-1 1:0.675 2:0.6 3:0.4 4:0.42857143 \0A-0.7965613850269518 1:0.675 2:0.70769231 3:0.2 4:0.42857143 \0A1 1:0.675 2:0.70769231 3:0.4962963 4:0.42857143 \0A-0.4252722687880143 1:0.675 2:0.8 3:0.74814815 4:0.42857143 \0A0.1450719021423953 1:0.7 2:0.2 3:0.35 4:0.42857143 \0A-1 1:0.7 2:0.3 3:0.8 4:0.42857143 \0A-0.09386434943975405 1:0.7 2:0.7 3:0.45 4:0.42857143 \0A1 1:0.7 2:0.8 3:0.3 4:0.42857143 \0A-1 1:0.7 2:0.8 3:0.5 4:0.42857143 \0A0.6704062739379355 1:0.7 2:0.8 3:0.7 4:0.42857143 \0A-1 1:0.725 2:0.2 3:0.49655172 4:0.42857143 \0A-1 1:0.725 2:0.25454545 3:0.4 4:0.42857143 \0A1 1:0.725 2:0.4 3:0.6 4:0.42857143 \0A-1 1:0.725 2:0.54545455 3:0.30344828 4:0.42857143 \0A-1 1:0.725 2:0.65454545 3:0.6 4:0.42857143 \0A1 1:0.725 2:0.74545455 3:0.6 4:0.42857143 \0A-0.9851987897531498 1:0.725 2:0.8 3:0.2 4:0.42857143 \0A1 1:0.75 2:0.4 3:0.75333333 4:0.42857143 \0A0.6146634558397266 1:0.75 2:0.6 3:0.7 4:0.42857143 \0A-0.5077443792130245 1:0.75 2:0.66 3:0.65333333 4:0.42857143 \0A1 1:0.75 2:0.66 3:0.75333333 4:0.42857143 \0A0.5774658285198147 1:0.75 2:0.7 3:0.5 4:0.42857143 \0A0.03261634404365939 1:0.75 2:0.8 3:0.25333333 4:0.42857143 \0A0.1454829506812746 1:0.75 2:0.8 3:0.54666667 4:0.42857143 \0A1 1:0.75 2:0.8 3:0.7 4:0.42857143 \0A1 1:0.775 2:0.2 3:0.70322581 4:0.42857143 \0A-0.8677231718298125 1:0.775 2:0.24444444 3:0.6 4:0.42857143 \0A-0.1952018655833204 1:0.775 2:0.35555556 3:0.4 4:0.42857143 \0A-0.3890047346408281 1:0.775 2:0.55555556 3:0.4 4:0.42857143 \0A-0.01748297460381265 1:0.775 2:0.55555556 3:0.8 4:0.42857143 \0A0.02535137763971316 1:0.775 2:0.75555556 3:0.3483871 4:0.42857143 \0A-1 1:0.775 2:0.75555556 3:0.70322581 4:0.42857143 \0A0.04041888343494857 1:0.8 2:0.2 3:0.5 4:0.42857143 \0A-1 1:0.8 2:0.25 3:0.3 4:0.42857143 \0A1 1:0.8 2:0.25 3:0.5 4:0.42857143 \0A-1 1:0.8 2:0.3 3:0.6 4:0.42857143 \0A-0.004157921718993903 1:0.8 2:0.4 3:0.35 4:0.42857143 \0A0.8317551307043267 1:0.8 2:0.45 3:0.5 4:0.42857143 \0A-0.004684526955486306 1:0.8 2:0.5 3:0.35 4:0.42857143 \0A-0.03411606823771664 1:0.8 2:0.55 3:0.6 4:0.42857143 \0A0.08549004309450049 1:0.8 2:0.6 3:0.65 4:0.42857143 \0A-1 1:0.8 2:0.7 3:0.6 4:0.42857143 \0A-0.5603259898836467 1:0.8 2:0.8 3:0.45 4:0.42857143 \0A-0.248683869085667 1:0.2 2:0.2 3:0.8 4:0.57142857 \0A-0.4435068371696607 1:0.2 2:0.3 3:0.5 4:0.57142857 \0A-0.02614612852331612 1:0.2 2:0.35 3:0.6 4:0.57142857 \0A0.549513470453233 1:0.2 2:0.45 3:0.44 4:0.57142857 \0A0.1310224869014791 1:0.2 2:0.5 3:0.2 4:0.57142857 \0A-0.2518864135271009 1:0.2 2:0.6 3:0.26 4:0.57142857 \0A0.5732588312696995 1:0.2 2:0.7 3:0.2 4:0.57142857 \0A-1 1:0.2 2:0.8 3:0.2 4:0.57142857 \0A-0.1316570467674567 1:0.2 2:0.8 3:0.7 4:0.57142857 \0A-0.07832078323597566 1:0.224 2:0.44845361 3:0.69642857 4:0.57142857 \0A0.1545579400717304 1:0.224 2:0.70103093 3:0.80357143 4:0.57142857 \0A-0.5516831168581388 1:0.252 2:0.59893048 3:0.55555556 4:0.57142857 \0A-1 1:0.252 2:0.65240642 3:0.3968254 4:0.57142857 \0A-0.1051219257679478 1:0.276 2:0.49723757 3:0.65217391 4:0.57142857 \0A-0.04656017637359811 1:0.276 2:0.60220994 3:0.75362319 4:0.57142857 \0A0.2267013047439382 1:0.276 2:0.80110497 3:0.5942029 4:0.57142857 \0A0.02555419951336271 1:0.3 2:0.2 3:0.70666667 4:0.57142857 \0A1 1:0.3 2:0.70285714 3:0.45333333 4:0.57142857 \0A-0.004030793361216982 1:0.3 2:0.8 3:0.2 4:0.57142857 \0A-0.2019590919288011 1:0.3 2:0.8 3:0.34666667 4:0.57142857 \0A-0.2702371300494925 1:0.324 2:0.59763314 3:0.19753086 4:0.57142857 \0A0.02911726719890843 1:0.352 2:0.25308642 3:0.60227273 4:0.57142857 \0A1 1:0.352 2:0.5 3:0.54545455 4:0.57142857 \0A0.120159090037537 1:0.376 2:0.19871795 3:0.55319149 4:0.57142857 \0A-0.4870567741773891 1:0.4 2:0.5 3:0.8 4:0.57142857 \0A-0.6398816697426281 1:0.4 2:0.6 3:0.4 4:0.57142857 \0A1 1:0.424 2:0.45138889 3:0.3490566 4:0.57142857 \0A0.3225747150594811 1:0.424 2:0.65277778 3:0.30188679 4:0.57142857 \0A-1 1:0.424 2:0.79861111 3:0.60377358 4:0.57142857 \0A-0.3501770185889966 1:0.452 2:0.49635036 3:0.60176991 4:0.57142857 \0A0.987382344515616 1:0.452 2:0.54744526 3:0.54867257 4:0.57142857 \0A-1 1:0.452 2:0.59854015 3:0.54867257 4:0.57142857 \0A-0.3553346371671059 1:0.476 2:0.19847328 3:0.54621849 4:0.57142857 \0A-0.02054932002366963 1:0.476 2:0.7480916 3:0.25210084 4:0.57142857 \0A-0.1011297794658766 1:0.5 2:0.4 3:0.2 4:0.57142857 \0A0.903827915244604 1:0.524 2:0.79831933 3:0.54961832 4:0.57142857 \0A1 1:0.552 2:0.44642857 3:0.55072464 4:0.57142857 \0A0.02610800579090693 1:0.552 2:0.65178571 3:0.44927536 4:0.57142857 \0A-1 1:0.552 2:0.69642857 3:0.60144928 4:0.57142857 \0A0.05126280856125113 1:0.576 2:0.5 3:0.65277778 4:0.57142857 \0A0.4365498590176495 1:0.6 2:0.2 3:0.4 4:0.57142857 \0A0.168156828489498 1:0.6 2:0.25 3:0.45333333 4:0.57142857 \0A-0.5316033897367828 1:0.6 2:0.7 3:0.25333333 4:0.57142857 \0A0.3990919785436484 1:0.624 2:0.79787234 3:0.75 4:0.57142857 \0A-1 1:0.652 2:0.40229885 3:0.34969325 4:0.57142857 \0A-1 1:0.652 2:0.49425287 3:0.49693252 4:0.57142857 \0A0.009090282594725678 1:0.652 2:0.8045977 3:0.60122699 4:0.57142857 \0A1 1:0.676 2:0.19753086 3:0.65088757 4:0.57142857 \0A-1 1:0.676 2:0.24691358 3:0.44970414 4:0.57142857 \0A1 1:0.676 2:0.65432099 3:0.49704142 4:0.57142857 \0A-0.1966678137844305 1:0.676 2:0.80246914 3:0.49704142 4:0.57142857 \0A-0.5375743443093622 1:0.7 2:0.30666667 3:0.6 4:0.57142857 \0A-0.2757255542119076 1:0.7 2:0.30666667 3:0.8 4:0.57142857 \0A1 1:0.7 2:0.34666667 3:0.49714286 4:0.57142857 \0A1 1:0.7 2:0.45333333 3:0.49714286 4:0.57142857 \0A1 1:0.7 2:0.6 3:0.54857143 4:0.57142857 \0A0.6563317356723883 1:0.7 2:0.8 3:0.30285714 4:0.57142857 \0A-0.5277498611765581 1:0.724 2:0.20289855 3:0.80110497 4:0.57142857 \0A0.2253991767298014 1:0.724 2:0.24637681 3:0.29834254 4:0.57142857 \0A1 1:0.724 2:0.4057971 3:0.75138122 4:0.57142857 \0A1 1:0.724 2:0.55072464 3:0.24861878 4:0.57142857 \0A-1 1:0.724 2:0.79710145 3:0.80110497 4:0.57142857 \0A-0.9139287476476388 1:0.752 2:0.19354839 3:0.60106383 4:0.57142857 \0A0.01510594093804324 1:0.752 2:0.30645161 3:0.5 4:0.57142857 \0A-0.3765018769372125 1:0.752 2:0.35483871 3:0.79787234 4:0.57142857 \0A0.05784418861773129 1:0.752 2:0.4516129 3:0.25 4:0.57142857 \0A-1 1:0.752 2:0.5 3:0.60106383 4:0.57142857 \0A-1 1:0.752 2:0.5483871 3:0.60106383 4:0.57142857 \0A-1 1:0.752 2:0.75806452 3:0.45212766 4:0.57142857 \0A-1 1:0.752 2:0.75806452 3:0.64893617 4:0.57142857 \0A0.8773866125398948 1:0.776 2:0.19642857 3:0.5 4:0.57142857 \0A1 1:0.776 2:0.19642857 3:0.75257732 4:0.57142857 \0A-1 1:0.776 2:0.30357143 3:0.59793814 4:0.57142857 \0A-1 1:0.776 2:0.30357143 3:0.64948454 4:0.57142857 \0A0.8944113653306498 1:0.776 2:0.35714286 3:0.44845361 4:0.57142857 \0A1 1:0.776 2:0.39285714 3:0.5 4:0.57142857 \0A0.40295585925151 1:0.776 2:0.69642857 3:0.5 4:0.57142857 \0A-1 1:0.776 2:0.75 3:0.35051546 4:0.57142857 \0A1 1:0.776 2:0.80357143 3:0.29896907 4:0.57142857 \0A0.5735811617234569 1:0.776 2:0.80357143 3:0.79896907 4:0.57142857 \0A1 1:0.8 2:0.26 3:0.5 4:0.57142857 \0A-0.004178710305404516 1:0.8 2:0.26 3:0.6 4:0.57142857 \0A-1 1:0.8 2:0.26 3:0.65 4:0.57142857 \0A0.4352646269774724 1:0.8 2:0.36 3:0.75 4:0.57142857 \0A1 1:0.8 2:0.4 3:0.7 4:0.57142857 \0A-0.8388704402027475 1:0.8 2:0.5 3:0.65 4:0.57142857 \0A-1 1:0.8 2:0.54 3:0.65 4:0.57142857 \0A0.5700763153796304 1:0.8 2:0.54 3:0.75 4:0.57142857 \0A1 1:0.8 2:0.66 3:0.5 4:0.57142857 \0A0.06095501860553268 1:0.8 2:0.8 3:0.75 4:0.57142857 \0A0.1820322643164359 1:0.2 2:0.2 3:0.2 4:0.71428571 \0A-0.3926416480088391 1:0.2 2:0.2 3:0.8 4:0.71428571 \0A0.02606168692091194 1:0.2 2:0.45 3:0.2 4:0.71428571 \0A0.6294920100913898 1:0.2 2:0.75 3:0.2 4:0.71428571 \0A-0.04388624806780776 1:0.2 2:0.8 3:0.2 4:0.71428571 \0A-0.238752128416839 1:0.2 2:0.8 3:0.5 4:0.71428571 \0A-0.01897166667052623 1:0.2 2:0.8 3:0.8 4:0.71428571 \0A-0.7256467153918188 1:0.22666667 2:0.25 3:0.20588235 4:0.71428571 \0A0.001176557978518363 1:0.22666667 2:0.25 3:0.64705882 4:0.71428571 \0A-0.06607514719955758 1:0.22666667 2:0.30172414 3:0.35294118 4:0.71428571 \0A0.08546225442915459 1:0.22666667 2:0.40086207 3:0.35294118 4:0.71428571 \0A-0.3354199807240861 1:0.22666667 2:0.59913793 3:0.25 4:0.71428571 \0A0.08395321030371307 1:0.22666667 2:0.75 3:0.39705882 4:0.71428571 \0A0.497639704713658 1:0.25 2:0.24888889 3:0.74666667 4:0.71428571 \0A0.3261724365532827 1:0.25 2:0.44888889 3:0.2 4:0.71428571 \0A-1 1:0.25 2:0.49777778 3:0.2 4:0.71428571 \0A-0.01707142805405292 1:0.25 2:0.6 3:0.2 4:0.71428571 \0A0.1965761796205795 1:0.27666667 2:0.19815668 3:0.39759036 4:0.71428571 \0A1 1:0.27666667 2:0.40092166 3:0.20481928 4:0.71428571 \0A0.01248479228711867 1:0.27666667 2:0.40092166 3:0.65060241 4:0.71428571 \0A0.1681702669771042 1:0.3 2:0.54761905 3:0.54444444 4:0.71428571 \0A0.5367880161492208 1:0.35 2:0.8 3:0.4 4:0.71428571 \0A0.2786612702941667 1:0.37666667 2:0.7486631 3:0.20353982 4:0.71428571 \0A0.001149715427723506 1:0.4 2:0.5 3:0.6 4:0.71428571 \0A-0.04768988701739543 1:0.4 2:0.55 3:0.35 4:0.71428571 \0A-0.003371292988313713 1:0.4 2:0.8 3:0.55 4:0.71428571 \0A-0.004036417229161445 1:0.42666667 2:0.40116279 3:0.453125 4:0.71428571 \0A0.0004850820523512712 1:0.42666667 2:0.40116279 3:0.75 4:0.71428571 \0A0.198031177330325 1:0.45 2:0.44848485 3:0.45185185 4:0.71428571 \0A-1 1:0.47666667 2:0.35031847 3:0.34965035 4:0.71428571 \0A-0.3365812408602349 1:0.47666667 2:0.75159236 3:0.3986014 4:0.71428571 \0A-0.1906757558265303 1:0.5 2:0.2 3:0.7 4:0.71428571 \0A0.1218698027718366 1:0.5 2:0.25333333 3:0.3 4:0.71428571 \0A-1 1:0.5 2:0.8 3:0.4 4:0.71428571 \0A-0.934905502312028 1:0.52666667 2:0.3028169 3:0.5 4:0.71428571 \0A1 1:0.52666667 2:0.64788732 3:0.70253165 4:0.71428571 \0A1 1:0.55 2:0.8 3:0.55151515 4:0.71428571 \0A1 1:0.57666667 2:0.4488189 3:0.35260116 4:0.71428571 \0A0.198101648161742 1:0.57666667 2:0.65354331 3:0.39884393 4:0.71428571 \0A-1 1:0.57666667 2:0.7007874 3:0.64739884 4:0.71428571 \0A-1 1:0.6 2:0.4 3:0.65 4:0.71428571 \0A1 1:0.6 2:0.7 3:0.5 4:0.71428571 \0A0.7325164329539459 1:0.62666667 2:0.34821429 3:0.45212766 4:0.71428571 \0A0.4325198612801907 1:0.65 2:0.3047619 3:0.3025641 4:0.71428571 \0A1 1:0.65 2:0.3047619 3:0.4974359 4:0.71428571 \0A-0.2123898748356873 1:0.65 2:0.6 3:0.4 4:0.71428571 \0A0.200151570096095 1:0.65 2:0.7047619 3:0.65128205 4:0.71428571 \0A-1 1:0.67666667 2:0.40206186 3:0.55172414 4:0.71428571 \0A1 1:0.67666667 2:0.40206186 3:0.69950739 4:0.71428571 \0A-0.0145641384238197 1:0.67666667 2:0.45360825 3:0.44827586 4:0.71428571 \0A-0.0582741051205262 1:0.67666667 2:0.64948454 3:0.49753695 4:0.71428571 \0A-1 1:0.67666667 2:0.64948454 3:0.60098522 4:0.71428571 \0A0.09156037852307627 1:0.7 2:0.3 3:0.54761905 4:0.71428571 \0A-1 1:0.7 2:0.4 3:0.4 4:0.71428571 \0A1 1:0.7 2:0.6 3:0.7 4:0.71428571 \0A-0.9734270597236109 1:0.7 2:0.65555556 3:0.4 4:0.71428571 \0A-0.09505657552929996 1:0.7 2:0.7 3:0.7 4:0.71428571 \0A-0.2020559135968502 1:0.7 2:0.75555556 3:0.8 4:0.71428571 \0A1 1:0.72666667 2:0.30487805 3:0.75229358 4:0.71428571 \0A1 1:0.72666667 2:0.35365854 3:0.55045872 4:0.71428571 \0A-1 1:0.72666667 2:0.5 3:0.60091743 4:0.71428571 \0A-0.001975648498656129 1:0.72666667 2:0.54878049 3:0.20183486 4:0.71428571 \0A1 1:0.72666667 2:0.69512195 3:0.29816514 4:0.71428571 \0A1 1:0.72666667 2:0.69512195 3:0.5 4:0.71428571 \0A0.7658472620592398 1:0.75 2:0.25333333 3:0.4 4:0.71428571 \0A-1 1:0.75 2:0.34666667 3:0.35111111 4:0.71428571 \0A-0.6538221343856171 1:0.75 2:0.4 3:0.8 4:0.71428571 \0A-1 1:0.75 2:0.49333333 3:0.35111111 4:0.71428571 \0A-0.8726105719156585 1:0.75 2:0.65333333 3:0.4 4:0.71428571 \0A-1 1:0.77666667 2:0.44776119 3:0.79828326 4:0.71428571 \0A-1 1:0.77666667 2:0.49253731 3:0.39914163 4:0.71428571 \0A1 1:0.77666667 2:0.59701493 3:0.49785408 4:0.71428571 \0A-1 1:0.77666667 2:0.74626866 3:0.79828326 4:0.71428571 \0A-0.4263801490057078 1:0.77666667 2:0.80597015 3:0.45064378 4:0.71428571 \0A0.4888579561003693 1:0.77666667 2:0.80597015 3:0.69957082 4:0.71428571 \0A-0.03963233589011183 1:0.8 2:0.2 3:0.25 4:0.71428571 \0A-1 1:0.8 2:0.2 3:0.6 4:0.71428571 \0A1 1:0.8 2:0.2 3:0.7 4:0.71428571 \0A0.1927417663366641 1:0.8 2:0.2 3:0.75 4:0.71428571 \0A-0.3511423409014227 1:0.8 2:0.25 3:0.6 4:0.71428571 \0A-1 1:0.8 2:0.25 3:0.65 4:0.71428571 \0A0.07271696019244377 1:0.8 2:0.25 3:0.75 4:0.71428571 \0A-1 1:0.8 2:0.25 3:0.8 4:0.71428571 \0A1 1:0.8 2:0.3 3:0.75 4:0.71428571 \0A-0.01244373864368753 1:0.8 2:0.35 3:0.45 4:0.71428571 \0A1 1:0.8 2:0.35 3:0.7 4:0.71428571 \0A1 1:0.8 2:0.5 3:0.5 4:0.71428571 \0A-0.1901462385849555 1:0.8 2:0.5 3:0.6 4:0.71428571 \0A0.03049664724142667 1:0.8 2:0.5 3:0.75 4:0.71428571 \0A-0.9981782114293078 1:0.8 2:0.55 3:0.65 4:0.71428571 \0A0.217217679035339 1:0.8 2:0.55 3:0.75 4:0.71428571 \0A1 1:0.8 2:0.6 3:0.5 4:0.71428571 \0A1 1:0.8 2:0.65 3:0.75 4:0.71428571 \0A-0.3121585368676181 1:0.8 2:0.7 3:0.3 4:0.71428571 \0A-0.2114246245640124 1:0.8 2:0.7 3:0.6 4:0.71428571 \0A1 1:0.8 2:0.8 3:0.7 4:0.71428571 \0A-0.3264250562719014 1:0.2 2:0.3 3:0.5 4:0.85714286 \0A0.1721577909312348 1:0.2 2:0.3 3:0.8 4:0.85714286 \0A0.02237290455638955 1:0.2 2:0.75 3:0.75714286 4:0.85714286 \0A-0.04063346670867544 1:0.2 2:0.8 3:0.8 4:0.85714286 \0A0.2949674925775551 1:0.22571429 2:0.4501845 3:0.20253165 4:0.85714286 \0A0.05059748362150073 1:0.22571429 2:0.70110701 3:0.20253165 4:0.85714286 \0A0.00974147430624394 1:0.22571429 2:0.70110701 3:0.35443038 4:0.85714286 \0A0.05359728039097782 1:0.22571429 2:0.74907749 3:0.20253165 4:0.85714286 \0A-0.5427767004962329 1:0.22571429 2:0.80073801 3:0.20253165 4:0.85714286 \0A0.02517280269224634 1:0.25142857 2:0.19847328 3:0.29545455 4:0.85714286 \0A0.2531175068178947 1:0.25142857 2:0.19847328 3:0.45454545 4:0.85714286 \0A0.1214485045248486 1:0.25142857 2:0.45038168 3:0.39772727 4:0.85714286 \0A-0.04184775447037521 1:0.25142857 2:0.5 3:0.75 4:0.85714286 \0A0.07181356363444506 1:0.25142857 2:0.7519084 3:0.75 4:0.85714286 \0A-0.07677090596382211 1:0.27428571 2:0.5984252 3:0.25 4:0.85714286 \0A0.2899873363461468 1:0.27428571 2:0.7519685 3:0.35416667 4:0.85714286 \0A-0.03210334454583658 1:0.3 2:0.55102041 3:0.24761905 4:0.85714286 \0A0.04019738535209839 1:0.32571429 2:0.19915254 3:0.25438596 4:0.85714286 \0A0.2758328932311166 1:0.32571429 2:0.75 3:0.20175439 4:0.85714286 \0A-0.07538357441516025 1:0.35142857 2:0.34801762 3:0.3495935 4:0.85714286 \0A-0.1530495033856249 1:0.35142857 2:0.49779736 3:0.25203252 4:0.85714286 \0A-0.01200589848831771 1:0.47428571 2:0.20108696 3:0.80120482 4:0.85714286 \0A0.001405258802173882 1:0.47428571 2:0.40217391 3:0.25301205 4:0.85714286 \0A0.007148346462949275 1:0.47428571 2:0.40217391 3:0.69879518 4:0.85714286 \0A0.04582619911534432 1:0.5 2:0.25142857 3:0.34857143 4:0.85714286 \0A-0.1280436464637393 1:0.5 2:0.25142857 3:0.4 4:0.85714286 \0A-0.8166955006417755 1:0.5 2:0.4 3:0.65142857 4:0.85714286 \0A-0.472255911507537 1:0.5 2:0.49714286 3:0.2 4:0.85714286 \0A0.08487488917289589 1:0.5 2:0.6 3:0.54857143 4:0.85714286 \0A0.09791022066040828 1:0.52571429 2:0.34939759 3:0.75 4:0.85714286 \0A0.02822489308712915 1:0.52571429 2:0.34939759 3:0.79891304 4:0.85714286 \0A-1 1:0.52571429 2:0.69879518 3:0.45108696 4:0.85714286 \0A0.2832961749623599 1:0.55142857 2:0.19745223 3:0.5492228 4:0.85714286 \0A0.3035493282269475 1:0.55142857 2:0.35031847 3:0.5492228 4:0.85714286 \0A-0.6402989185447984 1:0.55142857 2:0.5477707 3:0.69948187 4:0.85714286 \0A0.00843356042750215 1:0.55142857 2:0.64968153 3:0.60103627 4:0.85714286 \0A0.001208088116783187 1:0.57428571 2:0.34899329 3:0.70149254 4:0.85714286 \0A-0.1875150237355284 1:0.57428571 2:0.40268456 3:0.44776119 4:0.85714286 \0A0.117039604604301 1:0.6 2:0.25 3:0.2 4:0.85714286 \0A0.05319089432520391 1:0.6 2:0.25 3:0.7 4:0.85714286 \0A1 1:0.6 2:0.35 3:0.75238095 4:0.85714286 \0A0.9514758201606511 1:0.6 2:0.4 3:0.5 4:0.85714286 \0A0.2401866515202046 1:0.6 2:0.55 3:0.3 4:0.85714286 \0A0.2222768336608065 1:0.6 2:0.8 3:0.54761905 4:0.85714286 \0A-0.2785429149403074 1:0.62571429 2:0.19847328 3:0.30136986 4:0.85714286 \0A0.9334615972149889 1:0.62571429 2:0.19847328 3:0.69863014 4:0.85714286 \0A0.01172676438724969 1:0.62571429 2:0.45038168 3:0.74885845 4:0.85714286 \0A-0.008297074006891393 1:0.62571429 2:0.49618321 3:0.45205479 4:0.85714286 \0A0.3689163082289157 1:0.62571429 2:0.64885496 3:0.54794521 4:0.85714286 \0A0.03364762975177178 1:0.62571429 2:0.7480916 3:0.74885845 4:0.85714286 \0A-1 1:0.65142857 2:0.30327869 3:0.60087719 4:0.85714286 \0A-0.03892964296705419 1:0.65142857 2:0.59836066 3:0.64912281 4:0.85714286 \0A1 1:0.65142857 2:0.75409836 3:0.29824561 4:0.85714286 \0A-0.1643068803315308 1:0.65142857 2:0.80327869 3:0.79824561 4:0.85714286 \0A-0.7014257688599326 1:0.67428571 2:0.20175439 3:0.80084746 4:0.85714286 \0A0.3358891658992599 1:0.67428571 2:0.5 3:0.25 4:0.85714286 \0A-0.9108367350182603 1:0.67428571 2:0.79824561 3:0.19915254 4:0.85714286 \0A1 1:0.67428571 2:0.79824561 3:0.35169492 4:0.85714286 \0A-1 1:0.7 2:0.2 3:0.49795918 4:0.85714286 \0A0.7976438846306403 1:0.7 2:0.64761905 3:0.75102041 4:0.85714286 \0A-1 1:0.7 2:0.75238095 3:0.4 4:0.85714286 \0A-1 1:0.7 2:0.8 3:0.49795918 4:0.85714286 \0A-1 1:0.72571429 2:0.25 3:0.7992126 4:0.85714286 \0A0.9990140486475312 1:0.72571429 2:0.44791667 3:0.5 4:0.85714286 \0A-0.4576182894624443 1:0.72571429 2:0.44791667 3:0.5511811 4:0.85714286 \0A1 1:0.72571429 2:0.64583333 3:0.5 4:0.85714286 \0A0.1284671564274821 1:0.72571429 2:0.80208333 3:0.3503937 4:0.85714286 \0A0.0562616343931033 1:0.75142857 2:0.29885057 3:0.20152091 4:0.85714286 \0A-1 1:0.75142857 2:0.65517241 3:0.39923954 4:0.85714286 \0A1 1:0.75142857 2:0.8045977 3:0.39923954 4:0.85714286 \0A-1 1:0.75142857 2:0.8045977 3:0.49809886 4:0.85714286 \0A0.3283349980851147 1:0.77428571 2:0.25316456 3:0.4501845 4:0.85714286 \0A-0.2628255262324025 1:0.77428571 2:0.25316456 3:0.64944649 4:0.85714286 \0A0.04519543469978991 1:0.77428571 2:0.35443038 3:0.19926199 4:0.85714286 \0A-0.5548910389776439 1:0.77428571 2:0.40506329 3:0.29889299 4:0.85714286 \0A-0.1819244854992227 1:0.77428571 2:0.49367089 3:0.80073801 4:0.85714286 \0A-0.2261995515985763 1:0.77428571 2:0.69620253 3:0.5498155 4:0.85714286 \0A-0.5875371597530349 1:0.8 2:0.2 3:0.3 4:0.85714286 \0A1 1:0.8 2:0.2 3:0.4 4:0.85714286 \0A0.9679928604468668 1:0.8 2:0.2 3:0.7 4:0.85714286 \0A-0.8199675619494869 1:0.8 2:0.25714286 3:0.6 4:0.85714286 \0A0.2746574186008952 1:0.8 2:0.25714286 3:0.75 4:0.85714286 \0A0.01599570118977579 1:0.8 2:0.35714286 3:0.75 4:0.85714286 \0A0.0003079962876343023 1:0.8 2:0.4 3:0.45 4:0.85714286 \0A0.8817029748186554 1:0.8 2:0.5 3:0.2 4:0.85714286 \0A-1 1:0.8 2:0.5 3:0.65 4:0.85714286 \0A1 1:0.8 2:0.5 3:0.75 4:0.85714286 \0A-0.01504096111439584 1:0.8 2:0.54285714 3:0.4 4:0.85714286 \0A1 1:0.8 2:0.6 3:0.5 4:0.85714286 \0A-0.05410679227512152 1:0.8 2:0.6 3:0.7 4:0.85714286 \0A-0.4041389476094161 1:0.8 2:0.65714286 3:0.2 4:0.85714286 \0A-0.6027909101629991 1:0.8 2:0.65714286 3:0.65 4:0.85714286 \0A-1 1:0.8 2:0.7 3:0.65 4:0.85714286 \0A0.4332564748372804 1:0.8 2:0.8 3:0.55 4:0.85714286 \0A-0.7003927070285001 1:0.2 2:0.3 3:0.25 4:1 \0A-0.06910354774346347 1:0.2 2:0.6 3:0.65 4:1 \0A0.4873476540844993 1:0.2 2:0.7 3:0.3 4:1 \0A0.3372038850162719 1:0.2 2:0.7 3:0.75 4:1 \0A-0.2191705202243991 1:0.2 2:0.8 3:0.2 4:1 \0A-0.1421911754618049 1:0.2 2:0.8 3:0.35 4:1 \0A-0.04755529004505616 1:0.2 2:0.8 3:0.5 4:1 \0A-0.1749461836942537 1:0.2 2:0.8 3:0.55 4:1 \0A-0.3540692384849451 1:0.2 2:0.8 3:0.8 4:1 \0A0.003475495147750267 1:0.225 2:0.2 3:0.25555556 4:1 \0A-0.2533755698754066 1:0.225 2:0.2 3:0.8 4:1 \0A-0.01808204954455377 1:0.225 2:0.5483871 3:0.2 4:1 \0A0.1131542358630616 1:0.225 2:0.7516129 3:0.2 4:1 \0A1 1:0.25 2:0.4 3:0.25 4:1 \0A0.005208902064179085 1:0.25 2:0.45 3:0.3 4:1 \0A0.5184387422739661 1:0.25 2:0.5 3:0.45 4:1 \0A-0.1219754693745881 1:0.25 2:0.55 3:0.3 4:1 \0A0.0443710608928285 1:0.25 2:0.65 3:0.7 4:1 \0A0.02725443724576113 1:0.25 2:0.75 3:0.65 4:1 \0A0.2222698929090999 1:0.275 2:0.25172414 3:0.7 4:1 \0A-1 1:0.275 2:0.6 3:0.4 4:1 \0A0.0578267631983939 1:0.275 2:0.75172414 3:0.75454545 4:1 \0A-0.08462997593777237 1:0.3 2:0.55 3:0.8 4:1 \0A-0.1621759097692729 1:0.3 2:0.6 3:0.25 4:1 \0A0.1423366293879199 1:0.325 2:0.2 3:0.25384615 4:1 \0A0.002095748445047786 1:0.325 2:0.2 3:0.35384615 4:1 \0A-0.2390748261882654 1:0.325 2:0.3 3:0.44615385 4:1 \0A-0.3136484793830916 1:0.325 2:0.5 3:0.2 4:1 \0A-0.02802074398665358 1:0.325 2:0.6 3:0.2 4:1 \0A0.3916865144765236 1:0.325 2:0.75185185 3:0.5 4:1 \0A0.06796491332444977 1:0.35 2:0.2 3:0.55 4:1 \0A-0.1171174874823598 1:0.4 2:0.55 3:0.3 4:1 \0A-0.007147836240104062 1:0.4 2:0.6 3:0.5 4:1 \0A0.1090109422265258 1:0.4 2:0.8 3:0.3 4:1 \0A-0.07426717382882767 1:0.45 2:0.3 3:0.5 4:1 \0A1 1:0.45 2:0.6 3:0.35 4:1 \0A-0.2331093046859784 1:0.5 2:0.5 3:0.6 4:1 \0A-0.04677887718587526 1:0.525 2:0.25263158 3:0.5 4:1 \0A0.5821866444070798 1:0.525 2:0.44736842 3:0.44761905 4:1 \0A-1 1:0.525 2:0.54736842 3:0.44761905 4:1 \0A0.05102011276926535 1:0.55 2:0.35 3:0.75 4:1 \0A0.2478282150651829 1:0.55 2:0.45 3:0.8 4:1 \0A0.2635471219318096 1:0.575 2:0.2 3:0.65217391 4:1 \0A0.02259145533771266 1:0.575 2:0.3 3:0.25217391 4:1 \0A-0.9940799302402182 1:0.575 2:0.3 3:0.6 4:1 \0A1 1:0.575 2:0.5 3:0.54782609 4:1 \0A0.2162257254251634 1:0.6 2:0.2 3:0.55 4:1 \0A-0.7365889237859471 1:0.6 2:0.2 3:0.8 4:1 \0A0.117831852673521 1:0.625 2:0.2 3:0.2 4:1 \0A0.02533580308409877 1:0.625 2:0.2 3:0.752 4:1 \0A-0.3142311994593642 1:0.625 2:0.45333333 3:0.448 4:1 \0A0.02079799789547691 1:0.625 2:0.6 3:0.752 4:1 \0A-0.06243873532213483 1:0.625 2:0.75333333 3:0.2 4:1 \0A-0.3215397524754426 1:0.625 2:0.75333333 3:0.548 4:1 \0A1 1:0.65 2:0.2 3:0.75 4:1 \0A1 1:0.65 2:0.4 3:0.55 4:1 \0A-0.4022336453302484 1:0.65 2:0.8 3:0.45 4:1 \0A0.2307398622379147 1:0.675 2:0.3 3:0.7 4:1 \0A-1 1:0.675 2:0.54615385 3:0.4 4:1 \0A0.01192226814480389 1:0.675 2:0.65384615 3:0.8 4:1 \0A0.3794281282232589 1:0.675 2:0.75384615 3:0.35185185 4:1 \0A-0.3804339157141501 1:0.675 2:0.75384615 3:0.5 4:1 \0A1 1:0.675 2:0.8 3:0.65185185 4:1 \0A0.07740940465522768 1:0.7 2:0.25 3:0.75 4:1 \0A-0.4590158891722865 1:0.7 2:0.3 3:0.4 4:1 \0A-0.3775661965723483 1:0.7 2:0.6 3:0.65 4:1 \0A-0.6104296247595336 1:0.7 2:0.75 3:0.8 4:1 \0A-0.1290760653185081 1:0.7 2:0.8 3:0.45 4:1 \0A-1 1:0.725 2:0.35454545 3:0.6 4:1 \0A0.07487715290094314 1:0.725 2:0.44545455 3:0.5 4:1 \0A-0.0203251935455067 1:0.725 2:0.44545455 3:0.8 4:1 \0A0.2109534272345216 1:0.725 2:0.7 3:0.45172414 4:1 \0A0.8576213948026701 1:0.725 2:0.75454545 3:0.6 4:1 \0A-1 1:0.75 2:0.2 3:0.55 4:1 \0A1 1:0.75 2:0.2 3:0.75 4:1 \0A-0.9369049249478433 1:0.75 2:0.2 3:0.8 4:1 \0A1 1:0.75 2:0.3 3:0.45 4:1 \0A-1 1:0.75 2:0.4 3:0.8 4:1 \0A0.6757376857040377 1:0.75 2:0.6 3:0.5 4:1 \0A-1 1:0.75 2:0.65 3:0.8 4:1 \0A0.3331602318609188 1:0.75 2:0.75 3:0.35 4:1 \0A1 1:0.775 2:0.2 3:0.4516129 4:1 \0A-0.5701534184990483 1:0.775 2:0.25555556 3:0.5483871 4:1 \0A0.1150156974033225 1:0.775 2:0.4 3:0.4516129 4:1 \0A1 1:0.775 2:0.6 3:0.7516129 4:1 \0A-1 1:0.775 2:0.7 3:0.6516129 4:1 \0A0.01718174475549202 1:0.775 2:0.8 3:0.2516129 4:1 \0A-0.2052635276433671 1:0.8 2:0.25 3:0.25 4:1 \0A-1 1:0.8 2:0.25 3:0.6 4:1 \0A1 1:0.8 2:0.25 3:0.75 4:1 \0A-0.04518204611438701 1:0.8 2:0.25 3:0.8 4:1 \0A0.6768238613754204 1:0.8 2:0.3 3:0.45 4:1 \0A-0.5138797159875904 1:0.8 2:0.35 3:0.25 4:1 \0A0.0261438872042605 1:0.8 2:0.4 3:0.2 4:1 \0A-0.004793297131704656 1:0.8 2:0.4 3:0.65 4:1 \0A1 1:0.8 2:0.4 3:0.75 4:1 \0A1 1:0.8 2:0.5 3:0.45 4:1 \0A-0.3991872047745405 1:0.8 2:0.5 3:0.6 4:1 \0A-1 1:0.8 2:0.5 3:0.65 4:1 \0A0.2567252018577118 1:0.8 2:0.55 3:0.2 4:1 \0A-0.8822601344526142 1:0.8 2:0.55 3:0.35 4:1 \0A1 1:0.8 2:0.6 3:0.75 4:1 \0A0.223252672606951 1:0.8 2:0.65 3:0.75 4:1 \0A-0.3335795703441325 1:0.8 2:0.65 3:0.8 4:1 \0A-0.5098200396284942 1:0.8 2:0.75 3:0.65 4:1 \0A1 1:0.8 2:0.75 3:0.75 4:1 \0A\00", align 1
@sd_model_string = dso_local global i8* getelementptr inbounds ([54409 x i8], [54409 x i8]* @.str.1, i32 0, i32 0), align 8
@avg_model = internal global %struct.svm_model* null, align 8
@sd_model = internal global %struct.svm_model* null, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"sequence out of bounds\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"c_svc\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"nu_svc\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"one_class\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"epsilon_svr\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"nu_svr\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"polynomial\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"rbf\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"sigmoid\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"SV\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"svm_type\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"unknown svm type.\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"kernel_type\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"unknown kernel type.\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"degree\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"coef0\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"nr_class\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"total_sv\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"rho\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"nr_sv\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"label\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"probA\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"probB\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"%d:%lf\00", align 1
@energy_set = external dso_local global i32, align 4
@alias = internal global [21 x i16] zeroinitializer, align 16
@BP_pair = internal global [8 x [8 x i32]] [[8 x i32] zeroinitializer, [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 5], [8 x i32] [i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0], [8 x i32] [i32 0, i32 0, i32 2, i32 0, i32 3, i32 0, i32 0, i32 0], [8 x i32] [i32 0, i32 6, i32 0, i32 4, i32 0, i32 0, i32 0, i32 6], [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0], [8 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0], [8 x i32] [i32 0, i32 6, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0]], align 16
@pair = internal global [21 x [21 x i32]] zeroinitializer, align 16
@noGU = external dso_local global i32, align 4
@nonstandards = external dso_local global i8*, align 8
@rtype = internal global [8 x i32] [i32 0, i32 2, i32 1, i32 4, i32 3, i32 6, i32 5, i32 7], align 16
@.str.30 = private unnamed_addr constant [32 x i8] c"What energy_set are YOU using??\00", align 1
@Law_and_Order = internal constant [10 x i8] c"_ACGUTXKI\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local float @get_z(i8* noundef %0, double noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca float, align 4
  %8 = alloca i32, align 4
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca double, align 8
  store i8* %0, i8** %3, align 8
  store double %1, double* %4, align 8
  store float 0.000000e+00, float* %7, align 4
  call void @make_pair_matrix()
  %13 = load i8*, i8** %3, align 8
  %14 = call i16* @encode_sequence(i8* noundef %13, i16 noundef signext 0)
  store i16* %14, i16** %9, align 8
  %15 = load i8*, i8** %3, align 8
  %16 = call i64 @strlen(i8* noundef %15) #6
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %10, align 4
  %18 = load i16*, i16** %9, align 8
  %19 = load i32, i32* %10, align 4
  %20 = load i32, i32* %10, align 4
  %21 = call i32* @get_seq_composition(i16* noundef %18, i32 noundef 1, i32 noundef %19, i32 noundef %20)
  store i32* %21, i32** %11, align 8
  %22 = load i8*, i8** @avg_model_string, align 8
  %23 = call %struct.svm_model* @svm_load_model_string(i8* noundef %22)
  store %struct.svm_model* %23, %struct.svm_model** @avg_model, align 8
  %24 = load i8*, i8** @sd_model_string, align 8
  %25 = call %struct.svm_model* @svm_load_model_string(i8* noundef %24)
  store %struct.svm_model* %25, %struct.svm_model** @sd_model, align 8
  %26 = load i32*, i32** %11, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = load i32*, i32** %11, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = load i32*, i32** %11, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 2
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %11, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 3
  %37 = load i32, i32* %36, align 4
  %38 = load i32*, i32** %11, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 4
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.svm_model*, %struct.svm_model** @avg_model, align 8
  %42 = call double @avg_regression(i32 noundef %28, i32 noundef %31, i32 noundef %34, i32 noundef %37, i32 noundef %40, %struct.svm_model* noundef %41, i32* noundef %8)
  store double %42, double* %5, align 8
  %43 = load i32, i32* %8, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %70

45:                                               ; preds = %2
  %46 = load double, double* %4, align 8
  %47 = load double, double* %5, align 8
  %48 = fsub double %46, %47
  store double %48, double* %12, align 8
  %49 = load i32*, i32** %11, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = load i32*, i32** %11, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = load i32*, i32** %11, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %11, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 3
  %60 = load i32, i32* %59, align 4
  %61 = load i32*, i32** %11, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 4
  %63 = load i32, i32* %62, align 4
  %64 = load %struct.svm_model*, %struct.svm_model** @sd_model, align 8
  %65 = call double @sd_regression(i32 noundef %51, i32 noundef %54, i32 noundef %57, i32 noundef %60, i32 noundef %63, %struct.svm_model* noundef %64)
  store double %65, double* %6, align 8
  %66 = load double, double* %12, align 8
  %67 = load double, double* %6, align 8
  %68 = fdiv double %66, %67
  %69 = fptrunc double %68 to float
  store float %69, float* %7, align 4
  br label %71

70:                                               ; preds = %2
  call void (i8*, ...) @vrna_message_warning(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  br label %71

71:                                               ; preds = %70, %45
  %72 = load i32*, i32** %11, align 8
  %73 = bitcast i32* %72 to i8*
  call void @free(i8* noundef %73) #7
  %74 = load i16*, i16** %9, align 8
  %75 = bitcast i16* %74 to i8*
  call void @free(i8* noundef %75) #7
  %76 = load %struct.svm_model*, %struct.svm_model** @avg_model, align 8
  call void @svm_free_model_content(%struct.svm_model* noundef %76)
  %77 = load %struct.svm_model*, %struct.svm_model** @sd_model, align 8
  call void @svm_free_model_content(%struct.svm_model* noundef %77)
  %78 = load float, float* %7, align 4
  ret float %78
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @make_pair_matrix() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load i32, i32* @energy_set, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %116

5:                                                ; preds = %0
  store i32 0, i32* %1, align 4
  br label %6

6:                                                ; preds = %15, %5
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 %7, 5
  br i1 %8, label %9, label %18

9:                                                ; preds = %6
  %10 = load i32, i32* %1, align 4
  %11 = trunc i32 %10 to i16
  %12 = load i32, i32* %1, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %13
  store i16 %11, i16* %14, align 2
  br label %15

15:                                               ; preds = %9
  %16 = load i32, i32* %1, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %1, align 4
  br label %6, !llvm.loop !4

18:                                               ; preds = %6
  store i16 3, i16* getelementptr inbounds ([21 x i16], [21 x i16]* @alias, i64 0, i64 5), align 2
  store i16 2, i16* getelementptr inbounds ([21 x i16], [21 x i16]* @alias, i64 0, i64 6), align 4
  store i16 0, i16* getelementptr inbounds ([21 x i16], [21 x i16]* @alias, i64 0, i64 7), align 2
  store i32 0, i32* %1, align 4
  br label %19

19:                                               ; preds = %44, %18
  %20 = load i32, i32* %1, align 4
  %21 = icmp slt i32 %20, 8
  br i1 %21, label %22, label %47

22:                                               ; preds = %19
  store i32 0, i32* %2, align 4
  br label %23

23:                                               ; preds = %40, %22
  %24 = load i32, i32* %2, align 4
  %25 = icmp slt i32 %24, 8
  br i1 %25, label %26, label %43

26:                                               ; preds = %23
  %27 = load i32, i32* %1, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* @BP_pair, i64 0, i64 %28
  %30 = load i32, i32* %2, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [8 x i32], [8 x i32]* %29, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %1, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %35
  %37 = load i32, i32* %2, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [21 x i32], [21 x i32]* %36, i64 0, i64 %38
  store i32 %33, i32* %39, align 4
  br label %40

40:                                               ; preds = %26
  %41 = load i32, i32* %2, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %2, align 4
  br label %23, !llvm.loop !6

43:                                               ; preds = %23
  br label %44

44:                                               ; preds = %43
  %45 = load i32, i32* %1, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %1, align 4
  br label %19, !llvm.loop !7

47:                                               ; preds = %19
  %48 = load i32, i32* @noGU, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  store i32 0, i32* getelementptr inbounds ([21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 4, i64 3), align 4
  store i32 0, i32* getelementptr inbounds ([21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 3, i64 4), align 4
  br label %51

51:                                               ; preds = %50, %47
  %52 = load i8*, i8** @nonstandards, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %83

54:                                               ; preds = %51
  store i32 0, i32* %1, align 4
  br label %55

55:                                               ; preds = %79, %54
  %56 = load i32, i32* %1, align 4
  %57 = load i8*, i8** @nonstandards, align 8
  %58 = call i64 @strlen(i8* noundef %57) #6
  %59 = trunc i64 %58 to i32
  %60 = icmp slt i32 %56, %59
  br i1 %60, label %61, label %82

61:                                               ; preds = %55
  %62 = load i8*, i8** @nonstandards, align 8
  %63 = load i32, i32* %1, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = call i32 @encode_char(i8 noundef signext %66)
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %68
  %70 = load i8*, i8** @nonstandards, align 8
  %71 = load i32, i32* %1, align 4
  %72 = add nsw i32 %71, 1
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = call i32 @encode_char(i8 noundef signext %75)
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [21 x i32], [21 x i32]* %69, i64 0, i64 %77
  store i32 7, i32* %78, align 4
  br label %79

79:                                               ; preds = %61
  %80 = load i32, i32* %1, align 4
  %81 = add nsw i32 %80, 2
  store i32 %81, i32* %1, align 4
  br label %55, !llvm.loop !8

82:                                               ; preds = %55
  br label %83

83:                                               ; preds = %82, %51
  store i32 0, i32* %1, align 4
  br label %84

84:                                               ; preds = %112, %83
  %85 = load i32, i32* %1, align 4
  %86 = icmp slt i32 %85, 8
  br i1 %86, label %87, label %115

87:                                               ; preds = %84
  store i32 0, i32* %2, align 4
  br label %88

88:                                               ; preds = %108, %87
  %89 = load i32, i32* %2, align 4
  %90 = icmp slt i32 %89, 8
  br i1 %90, label %91, label %111

91:                                               ; preds = %88
  %92 = load i32, i32* %2, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %93
  %95 = load i32, i32* %1, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [21 x i32], [21 x i32]* %94, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = load i32, i32* %1, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %100
  %102 = load i32, i32* %2, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [21 x i32], [21 x i32]* %101, i64 0, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [8 x i32], [8 x i32]* @rtype, i64 0, i64 %106
  store i32 %98, i32* %107, align 4
  br label %108

108:                                              ; preds = %91
  %109 = load i32, i32* %2, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %2, align 4
  br label %88, !llvm.loop !9

111:                                              ; preds = %88
  br label %112

112:                                              ; preds = %111
  %113 = load i32, i32* %1, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %1, align 4
  br label %84, !llvm.loop !10

115:                                              ; preds = %84
  br label %323

116:                                              ; preds = %0
  store i32 0, i32* %1, align 4
  br label %117

117:                                              ; preds = %135, %116
  %118 = load i32, i32* %1, align 4
  %119 = icmp sle i32 %118, 20
  br i1 %119, label %120, label %138

120:                                              ; preds = %117
  store i32 0, i32* %2, align 4
  br label %121

121:                                              ; preds = %131, %120
  %122 = load i32, i32* %2, align 4
  %123 = icmp sle i32 %122, 20
  br i1 %123, label %124, label %134

124:                                              ; preds = %121
  %125 = load i32, i32* %1, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %126
  %128 = load i32, i32* %2, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [21 x i32], [21 x i32]* %127, i64 0, i64 %129
  store i32 0, i32* %130, align 4
  br label %131

131:                                              ; preds = %124
  %132 = load i32, i32* %2, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %2, align 4
  br label %121, !llvm.loop !11

134:                                              ; preds = %121
  br label %135

135:                                              ; preds = %134
  %136 = load i32, i32* %1, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %1, align 4
  br label %117, !llvm.loop !12

138:                                              ; preds = %117
  %139 = load i32, i32* @energy_set, align 4
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %179

141:                                              ; preds = %138
  store i32 1, i32* %1, align 4
  br label %142

142:                                              ; preds = %145, %141
  %143 = load i32, i32* %1, align 4
  %144 = icmp slt i32 %143, 20
  br i1 %144, label %145, label %154

145:                                              ; preds = %142
  %146 = load i32, i32* %1, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %1, align 4
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %148
  store i16 3, i16* %149, align 2
  %150 = load i32, i32* %1, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %1, align 4
  %152 = sext i32 %150 to i64
  %153 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %152
  store i16 2, i16* %153, align 2
  br label %142, !llvm.loop !13

154:                                              ; preds = %142
  store i32 1, i32* %1, align 4
  br label %155

155:                                              ; preds = %175, %154
  %156 = load i32, i32* %1, align 4
  %157 = icmp slt i32 %156, 20
  br i1 %157, label %158, label %178

158:                                              ; preds = %155
  %159 = load i32, i32* %1, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %160
  %162 = load i32, i32* %1, align 4
  %163 = add nsw i32 %162, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [21 x i32], [21 x i32]* %161, i64 0, i64 %164
  store i32 2, i32* %165, align 4
  %166 = load i32, i32* %1, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %1, align 4
  %168 = load i32, i32* %1, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %169
  %171 = load i32, i32* %1, align 4
  %172 = sub nsw i32 %171, 1
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [21 x i32], [21 x i32]* %170, i64 0, i64 %173
  store i32 1, i32* %174, align 4
  br label %175

175:                                              ; preds = %158
  %176 = load i32, i32* %1, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %1, align 4
  br label %155, !llvm.loop !14

178:                                              ; preds = %155
  br label %290

179:                                              ; preds = %138
  %180 = load i32, i32* @energy_set, align 4
  %181 = icmp eq i32 %180, 2
  br i1 %181, label %182, label %220

182:                                              ; preds = %179
  store i32 1, i32* %1, align 4
  br label %183

183:                                              ; preds = %186, %182
  %184 = load i32, i32* %1, align 4
  %185 = icmp slt i32 %184, 20
  br i1 %185, label %186, label %195

186:                                              ; preds = %183
  %187 = load i32, i32* %1, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %1, align 4
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %189
  store i16 1, i16* %190, align 2
  %191 = load i32, i32* %1, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %1, align 4
  %193 = sext i32 %191 to i64
  %194 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %193
  store i16 4, i16* %194, align 2
  br label %183, !llvm.loop !15

195:                                              ; preds = %183
  store i32 1, i32* %1, align 4
  br label %196

196:                                              ; preds = %216, %195
  %197 = load i32, i32* %1, align 4
  %198 = icmp slt i32 %197, 20
  br i1 %198, label %199, label %219

199:                                              ; preds = %196
  %200 = load i32, i32* %1, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %201
  %203 = load i32, i32* %1, align 4
  %204 = add nsw i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [21 x i32], [21 x i32]* %202, i64 0, i64 %205
  store i32 5, i32* %206, align 4
  %207 = load i32, i32* %1, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %1, align 4
  %209 = load i32, i32* %1, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %210
  %212 = load i32, i32* %1, align 4
  %213 = sub nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [21 x i32], [21 x i32]* %211, i64 0, i64 %214
  store i32 6, i32* %215, align 4
  br label %216

216:                                              ; preds = %199
  %217 = load i32, i32* %1, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %1, align 4
  br label %196, !llvm.loop !16

219:                                              ; preds = %196
  br label %289

220:                                              ; preds = %179
  %221 = load i32, i32* @energy_set, align 4
  %222 = icmp eq i32 %221, 3
  br i1 %222, label %223, label %287

223:                                              ; preds = %220
  store i32 1, i32* %1, align 4
  br label %224

224:                                              ; preds = %227, %223
  %225 = load i32, i32* %1, align 4
  %226 = icmp slt i32 %225, 18
  br i1 %226, label %227, label %244

227:                                              ; preds = %224
  %228 = load i32, i32* %1, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %1, align 4
  %230 = sext i32 %228 to i64
  %231 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %230
  store i16 3, i16* %231, align 2
  %232 = load i32, i32* %1, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %1, align 4
  %234 = sext i32 %232 to i64
  %235 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %234
  store i16 2, i16* %235, align 2
  %236 = load i32, i32* %1, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %1, align 4
  %238 = sext i32 %236 to i64
  %239 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %238
  store i16 1, i16* %239, align 2
  %240 = load i32, i32* %1, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %1, align 4
  %242 = sext i32 %240 to i64
  %243 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %242
  store i16 4, i16* %243, align 2
  br label %224, !llvm.loop !17

244:                                              ; preds = %224
  store i32 1, i32* %1, align 4
  br label %245

245:                                              ; preds = %283, %244
  %246 = load i32, i32* %1, align 4
  %247 = icmp slt i32 %246, 18
  br i1 %247, label %248, label %286

248:                                              ; preds = %245
  %249 = load i32, i32* %1, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %250
  %252 = load i32, i32* %1, align 4
  %253 = add nsw i32 %252, 1
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds [21 x i32], [21 x i32]* %251, i64 0, i64 %254
  store i32 2, i32* %255, align 4
  %256 = load i32, i32* %1, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %1, align 4
  %258 = load i32, i32* %1, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %259
  %261 = load i32, i32* %1, align 4
  %262 = sub nsw i32 %261, 1
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [21 x i32], [21 x i32]* %260, i64 0, i64 %263
  store i32 1, i32* %264, align 4
  %265 = load i32, i32* %1, align 4
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %1, align 4
  %267 = load i32, i32* %1, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %268
  %270 = load i32, i32* %1, align 4
  %271 = add nsw i32 %270, 1
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [21 x i32], [21 x i32]* %269, i64 0, i64 %272
  store i32 5, i32* %273, align 4
  %274 = load i32, i32* %1, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %1, align 4
  %276 = load i32, i32* %1, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %277
  %279 = load i32, i32* %1, align 4
  %280 = sub nsw i32 %279, 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [21 x i32], [21 x i32]* %278, i64 0, i64 %281
  store i32 6, i32* %282, align 4
  br label %283

283:                                              ; preds = %248
  %284 = load i32, i32* %1, align 4
  %285 = add nsw i32 %284, 1
  store i32 %285, i32* %1, align 4
  br label %245, !llvm.loop !18

286:                                              ; preds = %245
  br label %288

287:                                              ; preds = %220
  call void (i8*, ...) @vrna_message_error(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0))
  br label %288

288:                                              ; preds = %287, %286
  br label %289

289:                                              ; preds = %288, %219
  br label %290

290:                                              ; preds = %289, %178
  store i32 0, i32* %1, align 4
  br label %291

291:                                              ; preds = %319, %290
  %292 = load i32, i32* %1, align 4
  %293 = icmp sle i32 %292, 20
  br i1 %293, label %294, label %322

294:                                              ; preds = %291
  store i32 0, i32* %2, align 4
  br label %295

295:                                              ; preds = %315, %294
  %296 = load i32, i32* %2, align 4
  %297 = icmp sle i32 %296, 20
  br i1 %297, label %298, label %318

298:                                              ; preds = %295
  %299 = load i32, i32* %2, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %300
  %302 = load i32, i32* %1, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [21 x i32], [21 x i32]* %301, i64 0, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32, i32* %1, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [21 x [21 x i32]], [21 x [21 x i32]]* @pair, i64 0, i64 %307
  %309 = load i32, i32* %2, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [21 x i32], [21 x i32]* %308, i64 0, i64 %310
  %312 = load i32, i32* %311, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds [8 x i32], [8 x i32]* @rtype, i64 0, i64 %313
  store i32 %305, i32* %314, align 4
  br label %315

315:                                              ; preds = %298
  %316 = load i32, i32* %2, align 4
  %317 = add nsw i32 %316, 1
  store i32 %317, i32* %2, align 4
  br label %295, !llvm.loop !19

318:                                              ; preds = %295
  br label %319

319:                                              ; preds = %318
  %320 = load i32, i32* %1, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %1, align 4
  br label %291, !llvm.loop !20

322:                                              ; preds = %291
  br label %323

323:                                              ; preds = %322, %115
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i16* @encode_sequence(i8* noundef %0, i16 noundef signext %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16*, align 8
  store i8* %0, i8** %3, align 8
  store i16 %1, i16* %4, align 2
  %8 = load i8*, i8** %3, align 8
  %9 = call i64 @strlen(i8* noundef %8) #6
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  %12 = add i32 %11, 2
  %13 = zext i32 %12 to i64
  %14 = mul i64 2, %13
  %15 = trunc i64 %14 to i32
  %16 = call i8* @vrna_alloc(i32 noundef %15)
  %17 = bitcast i8* %16 to i16*
  store i16* %17, i16** %7, align 8
  %18 = load i16, i16* %4, align 2
  %19 = sext i16 %18 to i32
  switch i32 %19, label %94 [
    i32 0, label %20
    i32 1, label %54
  ]

20:                                               ; preds = %2
  store i32 1, i32* %5, align 4
  br label %21

21:                                               ; preds = %38, %20
  %22 = load i32, i32* %5, align 4
  %23 = load i32, i32* %6, align 4
  %24 = icmp ule i32 %22, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %5, align 4
  %28 = sub i32 %27, 1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = call i32 @encode_char(i8 noundef signext %31)
  %33 = trunc i32 %32 to i16
  %34 = load i16*, i16** %7, align 8
  %35 = load i32, i32* %5, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %34, i64 %36
  store i16 %33, i16* %37, align 2
  br label %38

38:                                               ; preds = %25
  %39 = load i32, i32* %5, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %5, align 4
  br label %21, !llvm.loop !21

41:                                               ; preds = %21
  %42 = load i16*, i16** %7, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 1
  %44 = load i16, i16* %43, align 2
  %45 = load i16*, i16** %7, align 8
  %46 = load i32, i32* %6, align 4
  %47 = add i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %45, i64 %48
  store i16 %44, i16* %49, align 2
  %50 = load i32, i32* %6, align 4
  %51 = trunc i32 %50 to i16
  %52 = load i16*, i16** %7, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 0
  store i16 %51, i16* %53, align 2
  br label %94

54:                                               ; preds = %2
  store i32 1, i32* %5, align 4
  br label %55

55:                                               ; preds = %75, %54
  %56 = load i32, i32* %5, align 4
  %57 = load i32, i32* %6, align 4
  %58 = icmp ule i32 %56, %57
  br i1 %58, label %59, label %78

59:                                               ; preds = %55
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %5, align 4
  %62 = sub i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = call i32 @encode_char(i8 noundef signext %65)
  %67 = trunc i32 %66 to i16
  %68 = sext i16 %67 to i64
  %69 = getelementptr inbounds [21 x i16], [21 x i16]* @alias, i64 0, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = load i16*, i16** %7, align 8
  %72 = load i32, i32* %5, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i16, i16* %71, i64 %73
  store i16 %70, i16* %74, align 2
  br label %75

75:                                               ; preds = %59
  %76 = load i32, i32* %5, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %5, align 4
  br label %55, !llvm.loop !22

78:                                               ; preds = %55
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds i16, i16* %79, i64 1
  %81 = load i16, i16* %80, align 2
  %82 = load i16*, i16** %7, align 8
  %83 = load i32, i32* %6, align 4
  %84 = add i32 %83, 1
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i16, i16* %82, i64 %85
  store i16 %81, i16* %86, align 2
  %87 = load i16*, i16** %7, align 8
  %88 = load i32, i32* %6, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i16, i16* %87, i64 %89
  %91 = load i16, i16* %90, align 2
  %92 = load i16*, i16** %7, align 8
  %93 = getelementptr inbounds i16, i16* %92, i64 0
  store i16 %91, i16* %93, align 2
  br label %94

94:                                               ; preds = %2, %78, %41
  %95 = load i16*, i16** %7, align 8
  ret i16* %95
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i64 @strlen(i8* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @get_seq_composition(i16* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  store i16* %0, i16** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = call i8* @vrna_alloc(i32 noundef 24)
  %12 = bitcast i8* %11 to i32*
  store i32* %12, i32** %10, align 8
  %13 = load i32, i32* %6, align 4
  %14 = icmp ugt i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = load i32, i32* %6, align 4
  br label %18

17:                                               ; preds = %4
  br label %18

18:                                               ; preds = %17, %15
  %19 = phi i32 [ %16, %15 ], [ 1, %17 ]
  store i32 %19, i32* %9, align 4
  br label %20

20:                                               ; preds = %57, %18
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  %24 = icmp ult i32 %22, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = load i32, i32* %7, align 4
  br label %29

27:                                               ; preds = %20
  %28 = load i32, i32* %8, align 4
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  %31 = icmp ule i32 %21, %30
  br i1 %31, label %32, label %60

32:                                               ; preds = %29
  %33 = load i16*, i16** %5, align 8
  %34 = load i32, i32* %9, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = sext i16 %37 to i32
  %39 = icmp sgt i32 %38, 4
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = load i32*, i32** %10, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %42, align 4
  br label %56

45:                                               ; preds = %32
  %46 = load i32*, i32** %10, align 8
  %47 = load i16*, i16** %5, align 8
  %48 = load i32, i32* %9, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i16, i16* %47, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = sext i16 %51 to i64
  %53 = getelementptr inbounds i32, i32* %46, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %45, %40
  br label %57

57:                                               ; preds = %56
  %58 = load i32, i32* %9, align 4
  %59 = add i32 %58, 1
  store i32 %59, i32* %9, align 4
  br label %20, !llvm.loop !23

60:                                               ; preds = %29
  %61 = load i32*, i32** %10, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 5
  store i32 -1, i32* %62, align 4
  %63 = load i32*, i32** %10, align 8
  ret i32* %63
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.svm_model* @svm_load_model_string(i8* noundef %0) #0 {
  %2 = alloca %struct.svm_model*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca [6 x i8*], align 16
  %5 = alloca [5 x i8*], align 16
  %6 = alloca %struct.svm_model*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.svm_node*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %26 = bitcast [6 x i8*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %26, i8 0, i64 48, i1 false)
  %27 = bitcast i8* %26 to [6 x i8*]*
  %28 = getelementptr inbounds [6 x i8*], [6 x i8*]* %27, i32 0, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i8** %28, align 16
  %29 = getelementptr inbounds [6 x i8*], [6 x i8*]* %27, i32 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8** %29, align 8
  %30 = getelementptr inbounds [6 x i8*], [6 x i8*]* %27, i32 0, i32 2
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i8** %30, align 16
  %31 = getelementptr inbounds [6 x i8*], [6 x i8*]* %27, i32 0, i32 3
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i8** %31, align 8
  %32 = getelementptr inbounds [6 x i8*], [6 x i8*]* %27, i32 0, i32 4
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8** %32, align 16
  %33 = bitcast [5 x i8*]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %33, i8 0, i64 40, i1 false)
  %34 = bitcast i8* %33 to [5 x i8*]*
  %35 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8** %35, align 16
  %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i32 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i8** %36, align 8
  %37 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i32 0, i32 2
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8** %37, align 16
  %38 = getelementptr inbounds [5 x i8*], [5 x i8*]* %34, i32 0, i32 3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8** %38, align 8
  store %struct.svm_node* null, %struct.svm_node** %20, align 8
  %39 = call i8* @vrna_alloc(i32 noundef 184)
  %40 = bitcast i8* %39 to %struct.svm_model*
  store %struct.svm_model* %40, %struct.svm_model** %6, align 8
  %41 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %42 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %41, i32 0, i32 5
  store double* null, double** %42, align 8
  %43 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %44 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %43, i32 0, i32 6
  store double* null, double** %44, align 8
  %45 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %46 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %45, i32 0, i32 7
  store double* null, double** %46, align 8
  %47 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %48 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %47, i32 0, i32 9
  store i32* null, i32** %48, align 8
  %49 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %50 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %49, i32 0, i32 10
  store i32* null, i32** %50, align 8
  %51 = load i8*, i8** %3, align 8
  %52 = call i8** @splitLines(i8* noundef %51)
  store i8** %52, i8*** %7, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %466, %1
  %54 = load i8**, i8*** %7, align 8
  %55 = load i32, i32* %9, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8*, i8** %54, i64 %56
  %58 = load i8*, i8** %57, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %53
  %61 = load i8**, i8*** %7, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %61, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strcmp(i8* noundef %65, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #6
  %67 = icmp ne i32 %66, 0
  br label %68

68:                                               ; preds = %60, %53
  %69 = phi i1 [ false, %53 ], [ %67, %60 ]
  br i1 %69, label %70, label %470

70:                                               ; preds = %68
  %71 = load i8**, i8*** %7, align 8
  %72 = load i32, i32* %9, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8*, i8** %71, i64 %73
  %75 = load i8*, i8** %74, align 8
  %76 = call i8** @splitFields(i8* noundef %75)
  store i8** %76, i8*** %8, align 8
  %77 = load i8**, i8*** %8, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 0
  %79 = load i8*, i8** %78, align 8
  store i8* %79, i8** %14, align 8
  %80 = load i8*, i8** %14, align 8
  %81 = call i32 @strcmp(i8* noundef %80, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #6
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %132

83:                                               ; preds = %70
  %84 = load i8**, i8*** %8, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 1
  %86 = load i8*, i8** %85, align 8
  store i8* %86, i8** %15, align 8
  store i32 0, i32* %10, align 4
  br label %87

87:                                               ; preds = %107, %83
  %88 = load i32, i32* %10, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 %89
  %91 = load i8*, i8** %90, align 8
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %87
  %94 = load i32, i32* %10, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 %95
  %97 = load i8*, i8** %96, align 8
  %98 = load i8*, i8** %15, align 8
  %99 = call i32 @strcmp(i8* noundef %97, i8* noundef %98) #6
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %93
  %102 = load i32, i32* %10, align 4
  %103 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %104 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %103, i32 0, i32 0
  %105 = getelementptr inbounds %struct.svm_parameter, %struct.svm_parameter* %104, i32 0, i32 0
  store i32 %102, i32* %105, align 8
  br label %110

106:                                              ; preds = %93
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %10, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %10, align 4
  br label %87, !llvm.loop !24

110:                                              ; preds = %101, %87
  %111 = load i32, i32* %9, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [6 x i8*], [6 x i8*]* %4, i64 0, i64 %112
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %131

116:                                              ; preds = %110
  call void (i8*, ...) @vrna_message_warning(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %117 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %118 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %117, i32 0, i32 5
  %119 = load double*, double** %118, align 8
  %120 = bitcast double* %119 to i8*
  call void @free(i8* noundef %120) #7
  %121 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %122 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %121, i32 0, i32 9
  %123 = load i32*, i32** %122, align 8
  %124 = bitcast i32* %123 to i8*
  call void @free(i8* noundef %124) #7
  %125 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %126 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %125, i32 0, i32 10
  %127 = load i32*, i32** %126, align 8
  %128 = bitcast i32* %127 to i8*
  call void @free(i8* noundef %128) #7
  %129 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %130 = bitcast %struct.svm_model* %129 to i8*
  call void @free(i8* noundef %130) #7
  store %struct.svm_model* null, %struct.svm_model** %2, align 8
  br label %652

131:                                              ; preds = %110
  br label %200

132:                                              ; preds = %70
  %133 = load i8*, i8** %14, align 8
  %134 = call i32 @strcmp(i8* noundef %133, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #6
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %185

136:                                              ; preds = %132
  %137 = load i8**, i8*** %8, align 8
  %138 = getelementptr inbounds i8*, i8** %137, i64 1
  %139 = load i8*, i8** %138, align 8
  store i8* %139, i8** %15, align 8
  store i32 0, i32* %10, align 4
  br label %140

140:                                              ; preds = %160, %136
  %141 = load i32, i32* %10, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [5 x i8*], [5 x i8*]* %5, i64 0, i64 %142
  %144 = load i8*, i8** %143, align 8
  %145 = icmp ne i8* %144, null
  br i1 %145, label %146, label %163

146:                                              ; preds = %140
  %147 = load i32, i32* %10, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [5 x i8*], [5 x i8*]* %5, i64 0, i64 %148
  %150 = load i8*, i8** %149, align 8
  %151 = load i8*, i8** %15, align 8
  %152 = call i32 @strcmp(i8* noundef %150, i8* noundef %151) #6
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %146
  %155 = load i32, i32* %10, align 4
  %156 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %157 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %156, i32 0, i32 0
  %158 = getelementptr inbounds %struct.svm_parameter, %struct.svm_parameter* %157, i32 0, i32 1
  store i32 %155, i32* %158, align 4
  br label %163

159:                                              ; preds = %146
  br label %160

160:                                              ; preds = %159
  %161 = load i32, i32* %10, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %10, align 4
  br label %140, !llvm.loop !25

163:                                              ; preds = %154, %140
  %164 = load i32, i32* %9, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [5 x i8*], [5 x i8*]* %5, i64 0, i64 %165
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %169, label %184

169:                                              ; preds = %163
  call void (i8*, ...) @vrna_message_warning(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0))
  %170 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %171 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %170, i32 0, i32 5
  %172 = load double*, double** %171, align 8
  %173 = bitcast double* %172 to i8*
  call void @free(i8* noundef %173) #7
  %174 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %175 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %174, i32 0, i32 9
  %176 = load i32*, i32** %175, align 8
  %177 = bitcast i32* %176 to i8*
  call void @free(i8* noundef %177) #7
  %178 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %179 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %178, i32 0, i32 10
  %180 = load i32*, i32** %179, align 8
  %181 = bitcast i32* %180 to i8*
  call void @free(i8* noundef %181) #7
  %182 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %183 = bitcast %struct.svm_model* %182 to i8*
  call void @free(i8* noundef %183) #7
  store %struct.svm_model* null, %struct.svm_model** %2, align 8
  br label %652

184:                                              ; preds = %163
  br label %199

185:                                              ; preds = %132
  %186 = load i8*, i8** %14, align 8
  %187 = call i32 @strcmp(i8* noundef %186, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #6
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %198

189:                                              ; preds = %185
  %190 = load i8**, i8*** %8, align 8
  %191 = getelementptr inbounds i8*, i8** %190, i64 1
  %192 = load i8*, i8** %191, align 8
  store i8* %192, i8** %15, align 8
  %193 = load i8*, i8** %15, align 8
  %194 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %195 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %194, i32 0, i32 0
  %196 = getelementptr inbounds %struct.svm_parameter, %struct.svm_parameter* %195, i32 0, i32 3
  %197 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %193, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %196) #7
  br label %198

198:                                              ; preds = %189, %185
  br label %199

199:                                              ; preds = %198, %184
  br label %200

200:                                              ; preds = %199, %131
  %201 = load i8*, i8** %14, align 8
  %202 = call i32 @strcmp(i8* noundef %201, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)) #6
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %213

204:                                              ; preds = %200
  %205 = load i8**, i8*** %8, align 8
  %206 = getelementptr inbounds i8*, i8** %205, i64 1
  %207 = load i8*, i8** %206, align 8
  store i8* %207, i8** %15, align 8
  %208 = load i8*, i8** %15, align 8
  %209 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %210 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %209, i32 0, i32 0
  %211 = getelementptr inbounds %struct.svm_parameter, %struct.svm_parameter* %210, i32 0, i32 2
  %212 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %208, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32* noundef %211) #7
  br label %466

213:                                              ; preds = %200
  %214 = load i8*, i8** %14, align 8
  %215 = call i32 @strcmp(i8* noundef %214, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #6
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %226

217:                                              ; preds = %213
  %218 = load i8**, i8*** %8, align 8
  %219 = getelementptr inbounds i8*, i8** %218, i64 1
  %220 = load i8*, i8** %219, align 8
  store i8* %220, i8** %15, align 8
  %221 = load i8*, i8** %15, align 8
  %222 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %223 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %222, i32 0, i32 0
  %224 = getelementptr inbounds %struct.svm_parameter, %struct.svm_parameter* %223, i32 0, i32 4
  %225 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %221, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %224) #7
  br label %465

226:                                              ; preds = %213
  %227 = load i8*, i8** %14, align 8
  %228 = call i32 @strcmp(i8* noundef %227, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0)) #6
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %238

230:                                              ; preds = %226
  %231 = load i8**, i8*** %8, align 8
  %232 = getelementptr inbounds i8*, i8** %231, i64 1
  %233 = load i8*, i8** %232, align 8
  store i8* %233, i8** %15, align 8
  %234 = load i8*, i8** %15, align 8
  %235 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %236 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %235, i32 0, i32 1
  %237 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %234, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32* noundef %236) #7
  br label %464

238:                                              ; preds = %226
  %239 = load i8*, i8** %14, align 8
  %240 = call i32 @strcmp(i8* noundef %239, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0)) #6
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = load i8**, i8*** %8, align 8
  %244 = getelementptr inbounds i8*, i8** %243, i64 1
  %245 = load i8*, i8** %244, align 8
  store i8* %245, i8** %15, align 8
  %246 = load i8*, i8** %15, align 8
  %247 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %248 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %247, i32 0, i32 2
  %249 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %246, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32* noundef %248) #7
  br label %463

250:                                              ; preds = %238
  %251 = load i8*, i8** %14, align 8
  %252 = call i32 @strcmp(i8* noundef %251, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #6
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %294

254:                                              ; preds = %250
  %255 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %256 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %255, i32 0, i32 1
  %257 = load i32, i32* %256, align 8
  %258 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %259 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = sub nsw i32 %260, 1
  %262 = mul nsw i32 %257, %261
  %263 = sdiv i32 %262, 2
  store i32 %263, i32* %21, align 4
  %264 = load i32, i32* %21, align 4
  %265 = sext i32 %264 to i64
  %266 = mul i64 8, %265
  %267 = trunc i64 %266 to i32
  %268 = call i8* @vrna_alloc(i32 noundef %267)
  %269 = bitcast i8* %268 to double*
  %270 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %271 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %270, i32 0, i32 5
  store double* %269, double** %271, align 8
  store i32 0, i32* %10, align 4
  br label %272

272:                                              ; preds = %290, %254
  %273 = load i32, i32* %10, align 4
  %274 = load i32, i32* %21, align 4
  %275 = icmp slt i32 %273, %274
  br i1 %275, label %276, label %293

276:                                              ; preds = %272
  %277 = load i8**, i8*** %8, align 8
  %278 = load i32, i32* %10, align 4
  %279 = add nsw i32 %278, 1
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8*, i8** %277, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %284 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %283, i32 0, i32 5
  %285 = load double*, double** %284, align 8
  %286 = load i32, i32* %10, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds double, double* %285, i64 %287
  %289 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %282, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %288) #7
  br label %290

290:                                              ; preds = %276
  %291 = load i32, i32* %10, align 4
  %292 = add nsw i32 %291, 1
  store i32 %292, i32* %10, align 4
  br label %272, !llvm.loop !26

293:                                              ; preds = %272
  br label %462

294:                                              ; preds = %250
  %295 = load i8*, i8** %14, align 8
  %296 = call i32 @strcmp(i8* noundef %295, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #6
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %332

298:                                              ; preds = %294
  %299 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %300 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %299, i32 0, i32 1
  %301 = load i32, i32* %300, align 8
  store i32 %301, i32* %22, align 4
  %302 = load i32, i32* %22, align 4
  %303 = sext i32 %302 to i64
  %304 = mul i64 4, %303
  %305 = trunc i64 %304 to i32
  %306 = call i8* @vrna_alloc(i32 noundef %305)
  %307 = bitcast i8* %306 to i32*
  %308 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %309 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %308, i32 0, i32 10
  store i32* %307, i32** %309, align 8
  store i32 0, i32* %10, align 4
  br label %310

310:                                              ; preds = %328, %298
  %311 = load i32, i32* %10, align 4
  %312 = load i32, i32* %22, align 4
  %313 = icmp slt i32 %311, %312
  br i1 %313, label %314, label %331

314:                                              ; preds = %310
  %315 = load i8**, i8*** %8, align 8
  %316 = load i32, i32* %10, align 4
  %317 = add nsw i32 %316, 1
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8*, i8** %315, i64 %318
  %320 = load i8*, i8** %319, align 8
  %321 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %322 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %321, i32 0, i32 10
  %323 = load i32*, i32** %322, align 8
  %324 = load i32, i32* %10, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds i32, i32* %323, i64 %325
  %327 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %320, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32* noundef %326) #7
  br label %328

328:                                              ; preds = %314
  %329 = load i32, i32* %10, align 4
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %10, align 4
  br label %310, !llvm.loop !27

331:                                              ; preds = %310
  br label %461

332:                                              ; preds = %294
  %333 = load i8*, i8** %14, align 8
  %334 = call i32 @strcmp(i8* noundef %333, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)) #6
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %370

336:                                              ; preds = %332
  %337 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %338 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %337, i32 0, i32 1
  %339 = load i32, i32* %338, align 8
  store i32 %339, i32* %23, align 4
  %340 = load i32, i32* %23, align 4
  %341 = sext i32 %340 to i64
  %342 = mul i64 4, %341
  %343 = trunc i64 %342 to i32
  %344 = call i8* @vrna_alloc(i32 noundef %343)
  %345 = bitcast i8* %344 to i32*
  %346 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %347 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %346, i32 0, i32 9
  store i32* %345, i32** %347, align 8
  store i32 0, i32* %10, align 4
  br label %348

348:                                              ; preds = %366, %336
  %349 = load i32, i32* %10, align 4
  %350 = load i32, i32* %23, align 4
  %351 = icmp slt i32 %349, %350
  br i1 %351, label %352, label %369

352:                                              ; preds = %348
  %353 = load i8**, i8*** %8, align 8
  %354 = load i32, i32* %10, align 4
  %355 = add nsw i32 %354, 1
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8*, i8** %353, i64 %356
  %358 = load i8*, i8** %357, align 8
  %359 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %360 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %359, i32 0, i32 9
  %361 = load i32*, i32** %360, align 8
  %362 = load i32, i32* %10, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i32, i32* %361, i64 %363
  %365 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %358, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32* noundef %364) #7
  br label %366

366:                                              ; preds = %352
  %367 = load i32, i32* %10, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %10, align 4
  br label %348, !llvm.loop !28

369:                                              ; preds = %348
  br label %460

370:                                              ; preds = %332
  %371 = load i8*, i8** %14, align 8
  %372 = call i32 @strcmp(i8* noundef %371, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #6
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %414

374:                                              ; preds = %370
  %375 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %376 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %375, i32 0, i32 1
  %377 = load i32, i32* %376, align 8
  %378 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %379 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %378, i32 0, i32 1
  %380 = load i32, i32* %379, align 8
  %381 = sub nsw i32 %380, 1
  %382 = mul nsw i32 %377, %381
  %383 = sdiv i32 %382, 2
  store i32 %383, i32* %24, align 4
  %384 = load i32, i32* %24, align 4
  %385 = sext i32 %384 to i64
  %386 = mul i64 8, %385
  %387 = trunc i64 %386 to i32
  %388 = call i8* @vrna_alloc(i32 noundef %387)
  %389 = bitcast i8* %388 to double*
  %390 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %391 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %390, i32 0, i32 6
  store double* %389, double** %391, align 8
  store i32 0, i32* %10, align 4
  br label %392

392:                                              ; preds = %410, %374
  %393 = load i32, i32* %10, align 4
  %394 = load i32, i32* %24, align 4
  %395 = icmp slt i32 %393, %394
  br i1 %395, label %396, label %413

396:                                              ; preds = %392
  %397 = load i8**, i8*** %8, align 8
  %398 = load i32, i32* %10, align 4
  %399 = add nsw i32 %398, 1
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i8*, i8** %397, i64 %400
  %402 = load i8*, i8** %401, align 8
  %403 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %404 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %403, i32 0, i32 6
  %405 = load double*, double** %404, align 8
  %406 = load i32, i32* %10, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds double, double* %405, i64 %407
  %409 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %402, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %408) #7
  br label %410

410:                                              ; preds = %396
  %411 = load i32, i32* %10, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %10, align 4
  br label %392, !llvm.loop !29

413:                                              ; preds = %392
  br label %459

414:                                              ; preds = %370
  %415 = load i8*, i8** %14, align 8
  %416 = call i32 @strcmp(i8* noundef %415, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #6
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %458

418:                                              ; preds = %414
  %419 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %420 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %419, i32 0, i32 1
  %421 = load i32, i32* %420, align 8
  %422 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %423 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %422, i32 0, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = sub nsw i32 %424, 1
  %426 = mul nsw i32 %421, %425
  %427 = sdiv i32 %426, 2
  store i32 %427, i32* %25, align 4
  %428 = load i32, i32* %25, align 4
  %429 = sext i32 %428 to i64
  %430 = mul i64 8, %429
  %431 = trunc i64 %430 to i32
  %432 = call i8* @vrna_alloc(i32 noundef %431)
  %433 = bitcast i8* %432 to double*
  %434 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %435 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %434, i32 0, i32 7
  store double* %433, double** %435, align 8
  store i32 0, i32* %10, align 4
  br label %436

436:                                              ; preds = %454, %418
  %437 = load i32, i32* %10, align 4
  %438 = load i32, i32* %25, align 4
  %439 = icmp slt i32 %437, %438
  br i1 %439, label %440, label %457

440:                                              ; preds = %436
  %441 = load i8**, i8*** %8, align 8
  %442 = load i32, i32* %10, align 4
  %443 = add nsw i32 %442, 1
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i8*, i8** %441, i64 %444
  %446 = load i8*, i8** %445, align 8
  %447 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %448 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %447, i32 0, i32 7
  %449 = load double*, double** %448, align 8
  %450 = load i32, i32* %10, align 4
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds double, double* %449, i64 %451
  %453 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %446, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %452) #7
  br label %454

454:                                              ; preds = %440
  %455 = load i32, i32* %10, align 4
  %456 = add nsw i32 %455, 1
  store i32 %456, i32* %10, align 4
  br label %436, !llvm.loop !30

457:                                              ; preds = %436
  br label %458

458:                                              ; preds = %457, %414
  br label %459

459:                                              ; preds = %458, %413
  br label %460

460:                                              ; preds = %459, %369
  br label %461

461:                                              ; preds = %460, %331
  br label %462

462:                                              ; preds = %461, %293
  br label %463

463:                                              ; preds = %462, %242
  br label %464

464:                                              ; preds = %463, %230
  br label %465

465:                                              ; preds = %464, %217
  br label %466

466:                                              ; preds = %465, %204
  %467 = load i32, i32* %9, align 4
  %468 = add nsw i32 %467, 1
  store i32 %468, i32* %9, align 4
  %469 = load i8**, i8*** %8, align 8
  call void @freeFields(i8** noundef %469)
  br label %53, !llvm.loop !31

470:                                              ; preds = %68
  %471 = load i32, i32* %9, align 4
  %472 = add nsw i32 %471, 1
  store i32 %472, i32* %18, align 4
  store i32 0, i32* %19, align 4
  br label %473

473:                                              ; preds = %503, %470
  %474 = load i8**, i8*** %7, align 8
  %475 = load i32, i32* %9, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds i8*, i8** %474, i64 %476
  %478 = load i8*, i8** %477, align 8
  %479 = icmp ne i8* %478, null
  br i1 %479, label %480, label %508

480:                                              ; preds = %473
  store i32 0, i32* %10, align 4
  br label %481

481:                                              ; preds = %500, %480
  %482 = load i8**, i8*** %7, align 8
  %483 = load i32, i32* %9, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds i8*, i8** %482, i64 %484
  %486 = load i8*, i8** %485, align 8
  %487 = load i32, i32* %10, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds i8, i8* %486, i64 %488
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %17, align 1
  %491 = sext i8 %490 to i32
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %493, label %503

493:                                              ; preds = %481
  %494 = load i8, i8* %17, align 1
  %495 = sext i8 %494 to i32
  %496 = icmp eq i32 %495, 58
  br i1 %496, label %497, label %500

497:                                              ; preds = %493
  %498 = load i32, i32* %19, align 4
  %499 = add nsw i32 %498, 1
  store i32 %499, i32* %19, align 4
  br label %500

500:                                              ; preds = %497, %493
  %501 = load i32, i32* %10, align 4
  %502 = add nsw i32 %501, 1
  store i32 %502, i32* %10, align 4
  br label %481, !llvm.loop !32

503:                                              ; preds = %481
  %504 = load i32, i32* %19, align 4
  %505 = add nsw i32 %504, 1
  store i32 %505, i32* %19, align 4
  %506 = load i32, i32* %9, align 4
  %507 = add nsw i32 %506, 1
  store i32 %507, i32* %9, align 4
  br label %473, !llvm.loop !33

508:                                              ; preds = %473
  %509 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %510 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %509, i32 0, i32 1
  %511 = load i32, i32* %510, align 8
  %512 = sub nsw i32 %511, 1
  store i32 %512, i32* %13, align 4
  %513 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %514 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %513, i32 0, i32 2
  %515 = load i32, i32* %514, align 4
  store i32 %515, i32* %12, align 4
  %516 = load i32, i32* %13, align 4
  %517 = sext i32 %516 to i64
  %518 = mul i64 8, %517
  %519 = trunc i64 %518 to i32
  %520 = call i8* @vrna_alloc(i32 noundef %519)
  %521 = bitcast i8* %520 to double**
  %522 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %523 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %522, i32 0, i32 4
  store double** %521, double*** %523, align 8
  store i32 0, i32* %9, align 4
  br label %524

524:                                              ; preds = %541, %508
  %525 = load i32, i32* %9, align 4
  %526 = load i32, i32* %13, align 4
  %527 = icmp slt i32 %525, %526
  br i1 %527, label %528, label %544

528:                                              ; preds = %524
  %529 = load i32, i32* %12, align 4
  %530 = sext i32 %529 to i64
  %531 = mul i64 8, %530
  %532 = trunc i64 %531 to i32
  %533 = call i8* @vrna_alloc(i32 noundef %532)
  %534 = bitcast i8* %533 to double*
  %535 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %536 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %535, i32 0, i32 4
  %537 = load double**, double*** %536, align 8
  %538 = load i32, i32* %9, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds double*, double** %537, i64 %539
  store double* %534, double** %540, align 8
  br label %541

541:                                              ; preds = %528
  %542 = load i32, i32* %9, align 4
  %543 = add nsw i32 %542, 1
  store i32 %543, i32* %9, align 4
  br label %524, !llvm.loop !34

544:                                              ; preds = %524
  %545 = load i32, i32* %12, align 4
  %546 = sext i32 %545 to i64
  %547 = mul i64 8, %546
  %548 = trunc i64 %547 to i32
  %549 = call i8* @vrna_alloc(i32 noundef %548)
  %550 = bitcast i8* %549 to %struct.svm_node**
  %551 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %552 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %551, i32 0, i32 3
  store %struct.svm_node** %550, %struct.svm_node*** %552, align 8
  %553 = load i32, i32* %12, align 4
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %555, label %562

555:                                              ; preds = %544
  %556 = load i32, i32* %19, align 4
  %557 = sext i32 %556 to i64
  %558 = mul i64 16, %557
  %559 = trunc i64 %558 to i32
  %560 = call i8* @vrna_alloc(i32 noundef %559)
  %561 = bitcast i8* %560 to %struct.svm_node*
  store %struct.svm_node* %561, %struct.svm_node** %20, align 8
  br label %562

562:                                              ; preds = %555, %544
  store i32 0, i32* %10, align 4
  store i32 0, i32* %9, align 4
  br label %563

563:                                              ; preds = %644, %562
  %564 = load i32, i32* %9, align 4
  %565 = load i32, i32* %12, align 4
  %566 = icmp slt i32 %564, %565
  br i1 %566, label %567, label %647

567:                                              ; preds = %563
  %568 = load i8**, i8*** %7, align 8
  %569 = load i32, i32* %18, align 4
  %570 = load i32, i32* %9, align 4
  %571 = add nsw i32 %569, %570
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds i8*, i8** %568, i64 %572
  %574 = load i8*, i8** %573, align 8
  %575 = call i8** @splitFields(i8* noundef %574)
  store i8** %575, i8*** %8, align 8
  %576 = load %struct.svm_node*, %struct.svm_node** %20, align 8
  %577 = load i32, i32* %10, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %576, i64 %578
  %580 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %581 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %580, i32 0, i32 3
  %582 = load %struct.svm_node**, %struct.svm_node*** %581, align 8
  %583 = load i32, i32* %9, align 4
  %584 = sext i32 %583 to i64
  %585 = getelementptr inbounds %struct.svm_node*, %struct.svm_node** %582, i64 %584
  store %struct.svm_node* %579, %struct.svm_node** %585, align 8
  store i32 0, i32* %11, align 4
  br label %586

586:                                              ; preds = %633, %567
  %587 = load i8**, i8*** %8, align 8
  %588 = load i32, i32* %11, align 4
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds i8*, i8** %587, i64 %589
  %591 = load i8*, i8** %590, align 8
  store i8* %591, i8** %16, align 8
  %592 = icmp ne i8* %591, null
  br i1 %592, label %593, label %636

593:                                              ; preds = %586
  %594 = load i32, i32* %11, align 4
  %595 = load i32, i32* %13, align 4
  %596 = icmp slt i32 %594, %595
  br i1 %596, label %597, label %614

597:                                              ; preds = %593
  %598 = load i8**, i8*** %8, align 8
  %599 = load i32, i32* %11, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i8*, i8** %598, i64 %600
  %602 = load i8*, i8** %601, align 8
  %603 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %604 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %603, i32 0, i32 4
  %605 = load double**, double*** %604, align 8
  %606 = load i32, i32* %11, align 4
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds double*, double** %605, i64 %607
  %609 = load double*, double** %608, align 8
  %610 = load i32, i32* %9, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds double, double* %609, i64 %611
  %613 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %602, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double* noundef %612) #7
  br label %633

614:                                              ; preds = %593
  %615 = load i8**, i8*** %8, align 8
  %616 = load i32, i32* %11, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds i8*, i8** %615, i64 %617
  %619 = load i8*, i8** %618, align 8
  %620 = load %struct.svm_node*, %struct.svm_node** %20, align 8
  %621 = load i32, i32* %10, align 4
  %622 = sext i32 %621 to i64
  %623 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %620, i64 %622
  %624 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %623, i32 0, i32 0
  %625 = load %struct.svm_node*, %struct.svm_node** %20, align 8
  %626 = load i32, i32* %10, align 4
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %625, i64 %627
  %629 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %628, i32 0, i32 1
  %630 = call i32 (i8*, i8*, ...) @sscanf(i8* noundef %619, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i32* noundef %624, double* noundef %629) #7
  %631 = load i32, i32* %10, align 4
  %632 = add nsw i32 %631, 1
  store i32 %632, i32* %10, align 4
  br label %633

633:                                              ; preds = %614, %597
  %634 = load i32, i32* %11, align 4
  %635 = add nsw i32 %634, 1
  store i32 %635, i32* %11, align 4
  br label %586, !llvm.loop !35

636:                                              ; preds = %586
  %637 = load %struct.svm_node*, %struct.svm_node** %20, align 8
  %638 = load i32, i32* %10, align 4
  %639 = add nsw i32 %638, 1
  store i32 %639, i32* %10, align 4
  %640 = sext i32 %638 to i64
  %641 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %637, i64 %640
  %642 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %641, i32 0, i32 0
  store i32 -1, i32* %642, align 8
  %643 = load i8**, i8*** %8, align 8
  call void @freeFields(i8** noundef %643)
  br label %644

644:                                              ; preds = %636
  %645 = load i32, i32* %9, align 4
  %646 = add nsw i32 %645, 1
  store i32 %646, i32* %9, align 4
  br label %563, !llvm.loop !36

647:                                              ; preds = %563
  %648 = load i8**, i8*** %7, align 8
  call void @freeFields(i8** noundef %648)
  %649 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  %650 = getelementptr inbounds %struct.svm_model, %struct.svm_model* %649, i32 0, i32 11
  store i32 1, i32* %650, align 8
  %651 = load %struct.svm_model*, %struct.svm_model** %6, align 8
  store %struct.svm_model* %651, %struct.svm_model** %2, align 8
  br label %652

652:                                              ; preds = %647, %169, %116
  %653 = load %struct.svm_model*, %struct.svm_model** %2, align 8
  ret %struct.svm_model* %653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @avg_regression(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, %struct.svm_model* noundef %5, i32* noundef %6) #0 {
  %8 = alloca double, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.svm_model*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca double, align 8
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca [5 x %struct.svm_node], align 16
  store i32 %0, i32* %9, align 4
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store %struct.svm_model* %5, %struct.svm_model** %14, align 8
  store i32* %6, i32** %15, align 8
  store double 0.000000e+00, double* %16, align 8
  %24 = load i32, i32* %10, align 4
  %25 = load i32, i32* %11, align 4
  %26 = add nsw i32 %24, %25
  %27 = load i32, i32* %12, align 4
  %28 = add nsw i32 %26, %27
  %29 = load i32, i32* %13, align 4
  %30 = add nsw i32 %28, %29
  %31 = load i32, i32* %9, align 4
  %32 = add nsw i32 %30, %31
  store i32 %32, i32* %17, align 4
  %33 = load i32, i32* %9, align 4
  %34 = sitofp i32 %33 to double
  %35 = load i32, i32* %17, align 4
  %36 = sitofp i32 %35 to double
  %37 = fdiv double %34, %36
  store double %37, double* %18, align 8
  %38 = load i32, i32* %12, align 4
  %39 = load i32, i32* %11, align 4
  %40 = add nsw i32 %38, %39
  %41 = sitofp i32 %40 to double
  %42 = load i32, i32* %17, align 4
  %43 = sitofp i32 %42 to double
  %44 = fdiv double %41, %43
  store double %44, double* %19, align 8
  %45 = load i32, i32* %10, align 4
  %46 = sitofp i32 %45 to double
  %47 = load i32, i32* %10, align 4
  %48 = load i32, i32* %13, align 4
  %49 = add nsw i32 %47, %48
  %50 = sitofp i32 %49 to double
  %51 = fdiv double %46, %50
  store double %51, double* %20, align 8
  %52 = load i32, i32* %11, align 4
  %53 = sitofp i32 %52 to double
  %54 = load i32, i32* %11, align 4
  %55 = load i32, i32* %12, align 4
  %56 = add nsw i32 %54, %55
  %57 = sitofp i32 %56 to double
  %58 = fdiv double %53, %57
  store double %58, double* %21, align 8
  %59 = load i32, i32* %17, align 4
  %60 = sub nsw i32 %59, 50
  %61 = sitofp i32 %60 to double
  %62 = fdiv double %61, 3.500000e+02
  store double %62, double* %22, align 8
  %63 = load i32*, i32** %15, align 8
  store i32 0, i32* %63, align 4
  %64 = load i32, i32* %17, align 4
  %65 = icmp slt i32 %64, 50
  br i1 %65, label %69, label %66

66:                                               ; preds = %7
  %67 = load i32, i32* %17, align 4
  %68 = icmp sgt i32 %67, 400
  br i1 %68, label %69, label %71

69:                                               ; preds = %66, %7
  %70 = load i32*, i32** %15, align 8
  store i32 1, i32* %70, align 4
  store double 0.000000e+00, double* %8, align 8
  br label %131

71:                                               ; preds = %66
  %72 = load double, double* %18, align 8
  %73 = fcmp ogt double %72, 5.000000e-02
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = load i32*, i32** %15, align 8
  store i32 2, i32* %75, align 4
  store double 0.000000e+00, double* %8, align 8
  br label %131

76:                                               ; preds = %71
  %77 = load double, double* %19, align 8
  %78 = fcmp olt double %77, 2.000000e-01
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = load double, double* %19, align 8
  %81 = fcmp ogt double %80, 8.000000e-01
  br i1 %81, label %82, label %84

82:                                               ; preds = %79, %76
  %83 = load i32*, i32** %15, align 8
  store i32 3, i32* %83, align 4
  store double 0.000000e+00, double* %8, align 8
  br label %131

84:                                               ; preds = %79
  %85 = load double, double* %20, align 8
  %86 = fcmp olt double %85, 2.000000e-01
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = load double, double* %20, align 8
  %89 = fcmp ogt double %88, 8.000000e-01
  br i1 %89, label %90, label %92

90:                                               ; preds = %87, %84
  %91 = load i32*, i32** %15, align 8
  store i32 4, i32* %91, align 4
  store double 0.000000e+00, double* %8, align 8
  br label %131

92:                                               ; preds = %87
  %93 = load double, double* %21, align 8
  %94 = fcmp olt double %93, 2.000000e-01
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = load double, double* %21, align 8
  %97 = fcmp ogt double %96, 8.000000e-01
  br i1 %97, label %98, label %100

98:                                               ; preds = %95, %92
  %99 = load i32*, i32** %15, align 8
  store i32 5, i32* %99, align 4
  store double 0.000000e+00, double* %8, align 8
  br label %131

100:                                              ; preds = %95
  %101 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 0
  %102 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %101, i32 0, i32 0
  store i32 1, i32* %102, align 16
  %103 = load double, double* %19, align 8
  %104 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 0
  %105 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %104, i32 0, i32 1
  store double %103, double* %105, align 8
  %106 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 1
  %107 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %106, i32 0, i32 0
  store i32 2, i32* %107, align 16
  %108 = load double, double* %20, align 8
  %109 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 1
  %110 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %109, i32 0, i32 1
  store double %108, double* %110, align 8
  %111 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 2
  %112 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %111, i32 0, i32 0
  store i32 3, i32* %112, align 16
  %113 = load double, double* %21, align 8
  %114 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 2
  %115 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %114, i32 0, i32 1
  store double %113, double* %115, align 8
  %116 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 3
  %117 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %116, i32 0, i32 0
  store i32 4, i32* %117, align 16
  %118 = load double, double* %22, align 8
  %119 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 3
  %120 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %119, i32 0, i32 1
  store double %118, double* %120, align 8
  %121 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 4
  %122 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %121, i32 0, i32 0
  store i32 -1, i32* %122, align 16
  %123 = load %struct.svm_model*, %struct.svm_model** %14, align 8
  %124 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %23, i64 0, i64 0
  %125 = call double @svm_predict(%struct.svm_model* noundef %123, %struct.svm_node* noundef %124)
  store double %125, double* %16, align 8
  %126 = load double, double* %16, align 8
  %127 = load i32, i32* %17, align 4
  %128 = sitofp i32 %127 to double
  %129 = fmul double %126, %128
  store double %129, double* %16, align 8
  %130 = load double, double* %16, align 8
  store double %130, double* %8, align 8
  br label %131

131:                                              ; preds = %100, %98, %90, %82, %74, %69
  %132 = load double, double* %8, align 8
  ret double %132
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @sd_regression(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, %struct.svm_model* noundef %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.svm_model*, align 8
  %13 = alloca double, align 8
  %14 = alloca i32, align 4
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca [5 x %struct.svm_node], align 16
  store i32 %0, i32* %7, align 4
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store %struct.svm_model* %5, %struct.svm_model** %12, align 8
  store double 0.000000e+00, double* %13, align 8
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 4
  %22 = add nsw i32 %20, %21
  %23 = load i32, i32* %10, align 4
  %24 = add nsw i32 %22, %23
  %25 = load i32, i32* %11, align 4
  %26 = add nsw i32 %24, %25
  %27 = load i32, i32* %7, align 4
  %28 = add nsw i32 %26, %27
  store i32 %28, i32* %14, align 4
  %29 = load i32, i32* %10, align 4
  %30 = load i32, i32* %9, align 4
  %31 = add nsw i32 %29, %30
  %32 = sitofp i32 %31 to double
  %33 = load i32, i32* %14, align 4
  %34 = sitofp i32 %33 to double
  %35 = fdiv double %32, %34
  store double %35, double* %15, align 8
  %36 = load i32, i32* %8, align 4
  %37 = sitofp i32 %36 to double
  %38 = load i32, i32* %8, align 4
  %39 = load i32, i32* %11, align 4
  %40 = add nsw i32 %38, %39
  %41 = sitofp i32 %40 to double
  %42 = fdiv double %37, %41
  store double %42, double* %16, align 8
  %43 = load i32, i32* %9, align 4
  %44 = sitofp i32 %43 to double
  %45 = load i32, i32* %9, align 4
  %46 = load i32, i32* %10, align 4
  %47 = add nsw i32 %45, %46
  %48 = sitofp i32 %47 to double
  %49 = fdiv double %44, %48
  store double %49, double* %17, align 8
  %50 = load i32, i32* %14, align 4
  %51 = sub nsw i32 %50, 50
  %52 = sitofp i32 %51 to double
  %53 = fdiv double %52, 3.500000e+02
  store double %53, double* %18, align 8
  %54 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 0
  %55 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %54, i32 0, i32 0
  store i32 1, i32* %55, align 16
  %56 = load double, double* %15, align 8
  %57 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 0
  %58 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %57, i32 0, i32 1
  store double %56, double* %58, align 8
  %59 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 1
  %60 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %59, i32 0, i32 0
  store i32 2, i32* %60, align 16
  %61 = load double, double* %16, align 8
  %62 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 1
  %63 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %62, i32 0, i32 1
  store double %61, double* %63, align 8
  %64 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 2
  %65 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %64, i32 0, i32 0
  store i32 3, i32* %65, align 16
  %66 = load double, double* %17, align 8
  %67 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 2
  %68 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %67, i32 0, i32 1
  store double %66, double* %68, align 8
  %69 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 3
  %70 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %69, i32 0, i32 0
  store i32 4, i32* %70, align 16
  %71 = load double, double* %18, align 8
  %72 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 3
  %73 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %72, i32 0, i32 1
  store double %71, double* %73, align 8
  %74 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 4
  %75 = getelementptr inbounds %struct.svm_node, %struct.svm_node* %74, i32 0, i32 0
  store i32 -1, i32* %75, align 16
  %76 = load %struct.svm_model*, %struct.svm_model** %12, align 8
  %77 = getelementptr inbounds [5 x %struct.svm_node], [5 x %struct.svm_node]* %19, i64 0, i64 0
  %78 = call double @svm_predict(%struct.svm_model* noundef %76, %struct.svm_node* noundef %77)
  store double %78, double* %13, align 8
  %79 = load double, double* %13, align 8
  %80 = load i32, i32* %14, align 4
  %81 = sitofp i32 %80 to double
  %82 = call double @sqrt(double noundef %81) #7
  %83 = fmul double %79, %82
  store double %83, double* %13, align 8
  %84 = load double, double* %13, align 8
  ret double %84
}

declare dso_local void @vrna_message_warning(i8* noundef, ...) #2

; Function Attrs: nounwind
declare dso_local void @free(i8* noundef) #3

declare dso_local void @svm_free_model_content(%struct.svm_model* noundef) #2

declare dso_local i8* @vrna_alloc(i32 noundef) #2

declare dso_local double @svm_predict(%struct.svm_model* noundef, %struct.svm_node* noundef) #2

; Function Attrs: nounwind
declare dso_local double @sqrt(double noundef) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @minimal_sd(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %7, align 4
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %13 = load i32, i32* %8, align 4
  %14 = load i32, i32* %9, align 4
  %15 = add nsw i32 %13, %14
  %16 = load i32, i32* %10, align 4
  %17 = add nsw i32 %15, %16
  %18 = load i32, i32* %11, align 4
  %19 = add nsw i32 %17, %18
  %20 = load i32, i32* %7, align 4
  %21 = add nsw i32 %19, %20
  store i32 %21, i32* %12, align 4
  %22 = load i32, i32* %12, align 4
  %23 = icmp slt i32 %22, 60
  br i1 %23, label %24, label %25

24:                                               ; preds = %5
  store double 4.503240e-01, double* %6, align 8
  br label %74

25:                                               ; preds = %5
  %26 = load i32, i32* %12, align 4
  %27 = icmp slt i32 %26, 70
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  store double 7.497710e-01, double* %6, align 8
  br label %74

29:                                               ; preds = %25
  %30 = load i32, i32* %12, align 4
  %31 = icmp slt i32 %30, 80
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store double 0x3FF07882278D0CC3, double* %6, align 8
  br label %74

33:                                               ; preds = %29
  %34 = load i32, i32* %12, align 4
  %35 = icmp slt i32 %34, 90
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store double 0x3FF070B5AA715832, double* %6, align 8
  br label %74

37:                                               ; preds = %33
  %38 = load i32, i32* %12, align 4
  %39 = icmp slt i32 %38, 100
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  store double 0x3FF58E789E774EEC, double* %6, align 8
  br label %74

41:                                               ; preds = %37
  %42 = load i32, i32* %12, align 4
  %43 = icmp slt i32 %42, 120
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store double 0x3FF1CB1AB0856E69, double* %6, align 8
  br label %74

45:                                               ; preds = %41
  %46 = load i32, i32* %12, align 4
  %47 = icmp slt i32 %46, 150
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store double 0x3FF9307E175D13D7, double* %6, align 8
  br label %74

49:                                               ; preds = %45
  %50 = load i32, i32* %12, align 4
  %51 = icmp slt i32 %50, 170
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  store double 0x3FFC76F5CAF2D7F9, double* %6, align 8
  br label %74

53:                                               ; preds = %49
  %54 = load i32, i32* %12, align 4
  %55 = icmp slt i32 %54, 200
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  store double 0x3FFEC43B2DD377E2, double* %6, align 8
  br label %74

57:                                               ; preds = %53
  %58 = load i32, i32* %12, align 4
  %59 = icmp slt i32 %58, 250
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  store double 0x4001D099E0E73605, double* %6, align 8
  br label %74

61:                                               ; preds = %57
  %62 = load i32, i32* %12, align 4
  %63 = icmp slt i32 %62, 300
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  store double 2.349300e+00, double* %6, align 8
  br label %74

65:                                               ; preds = %61
  %66 = load i32, i32* %12, align 4
  %67 = icmp slt i32 %66, 350
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  store double 0x4004B7B634DAD320, double* %6, align 8
  br label %74

69:                                               ; preds = %65
  %70 = load i32, i32* %12, align 4
  %71 = icmp slt i32 %70, 400
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store double 0x4006546887A8D64D, double* %6, align 8
  br label %74

73:                                               ; preds = %69
  store double 4.503240e-01, double* %6, align 8
  br label %74

74:                                               ; preds = %73, %72, %68, %64, %60, %56, %52, %48, %44, %40, %36, %32, %28, %24
  %75 = load double, double* %6, align 8
  ret double %75
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal i8** @splitLines(i8* noundef %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i8* null, i8** %4, align 8
  store i8** null, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %9

9:                                                ; preds = %64, %1
  %10 = load i8*, i8** %2, align 8
  %11 = load i32, i32* %6, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = load i8, i8* %13, align 1
  store i8 %14, i8* %3, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %67

17:                                               ; preds = %9
  %18 = load i8, i8* %3, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 10
  br i1 %20, label %21, label %49

21:                                               ; preds = %17
  %22 = load i8**, i8*** %5, align 8
  %23 = bitcast i8** %22 to i8*
  %24 = load i32, i32* %8, align 4
  %25 = add nsw i32 %24, 1
  %26 = sext i32 %25 to i64
  %27 = mul i64 8, %26
  %28 = trunc i64 %27 to i32
  %29 = call i8* @vrna_realloc(i8* noundef %23, i32 noundef %28)
  %30 = bitcast i8* %29 to i8**
  store i8** %30, i8*** %5, align 8
  %31 = load i8*, i8** %4, align 8
  %32 = load i32, i32* %7, align 4
  %33 = add nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = mul i64 1, %34
  %36 = trunc i64 %35 to i32
  %37 = call i8* @vrna_realloc(i8* noundef %31, i32 noundef %36)
  store i8* %37, i8** %4, align 8
  %38 = load i8*, i8** %4, align 8
  %39 = load i32, i32* %7, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  store i8 0, i8* %41, align 1
  %42 = load i8*, i8** %4, align 8
  %43 = load i8**, i8*** %5, align 8
  %44 = load i32, i32* %8, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8*, i8** %43, i64 %45
  store i8* %42, i8** %46, align 8
  store i32 0, i32* %7, align 4
  store i8* null, i8** %4, align 8
  %47 = load i32, i32* %8, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %8, align 4
  br label %64

49:                                               ; preds = %17
  %50 = load i8*, i8** %4, align 8
  %51 = load i32, i32* %7, align 4
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = mul i64 1, %53
  %55 = trunc i64 %54 to i32
  %56 = call i8* @vrna_realloc(i8* noundef %50, i32 noundef %55)
  store i8* %56, i8** %4, align 8
  %57 = load i8, i8* %3, align 1
  %58 = load i8*, i8** %4, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  store i8 %57, i8* %61, align 1
  %62 = load i32, i32* %7, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %7, align 4
  br label %64

64:                                               ; preds = %49, %21
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %9, !llvm.loop !37

67:                                               ; preds = %9
  %68 = load i8**, i8*** %5, align 8
  %69 = bitcast i8** %68 to i8*
  %70 = load i32, i32* %8, align 4
  %71 = add nsw i32 %70, 1
  %72 = sext i32 %71 to i64
  %73 = mul i64 8, %72
  %74 = trunc i64 %73 to i32
  %75 = call i8* @vrna_realloc(i8* noundef %69, i32 noundef %74)
  %76 = bitcast i8* %75 to i8**
  store i8** %76, i8*** %5, align 8
  %77 = load i8**, i8*** %5, align 8
  %78 = load i32, i32* %8, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %77, i64 %79
  store i8* null, i8** %80, align 8
  %81 = load i8**, i8*** %5, align 8
  ret i8** %81
}

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal i8** @splitFields(i8* noundef %0) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8** null, i8*** %6, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %16 = load i8*, i8** %3, align 8
  %17 = call i64 @strlen(i8* noundef %16) #6
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %1
  %20 = load i8*, i8** %3, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %19, %1
  store i8** null, i8*** %2, align 8
  br label %195

23:                                               ; preds = %19
  %24 = call i8* @vrna_alloc(i32 noundef 4)
  %25 = bitcast i8* %24 to i32*
  store i32* %25, i32** %7, align 8
  %26 = load i32*, i32** %7, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 0
  store i32 -1, i32* %27, align 4
  store i32 1, i32* %8, align 4
  br label %28

28:                                               ; preds = %69, %23
  %29 = load i8*, i8** %3, align 8
  %30 = load i32, i32* %10, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = load i8, i8* %32, align 1
  store i8 %33, i8* %4, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  %37 = load i8, i8* %4, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp ne i32 %38, 10
  br label %40

40:                                               ; preds = %36, %28
  %41 = phi i1 [ false, %28 ], [ %39, %36 ]
  br i1 %41, label %42, label %72

42:                                               ; preds = %40
  %43 = call i16** @__ctype_b_loc() #8
  %44 = load i16*, i16** %43, align 8
  %45 = load i8, i8* %4, align 1
  %46 = sext i8 %45 to i32
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %44, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = zext i16 %49 to i32
  %51 = and i32 %50, 8192
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %69

53:                                               ; preds = %42
  %54 = load i32*, i32** %7, align 8
  %55 = bitcast i32* %54 to i8*
  %56 = load i32, i32* %8, align 4
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = mul i64 4, %58
  %60 = trunc i64 %59 to i32
  %61 = call i8* @vrna_realloc(i8* noundef %55, i32 noundef %60)
  %62 = bitcast i8* %61 to i32*
  store i32* %62, i32** %7, align 8
  %63 = load i32, i32* %10, align 4
  %64 = load i32*, i32** %7, align 8
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %8, align 4
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i32, i32* %64, i64 %67
  store i32 %63, i32* %68, align 4
  br label %69

69:                                               ; preds = %53, %42
  %70 = load i32, i32* %10, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %10, align 4
  br label %28, !llvm.loop !38

72:                                               ; preds = %40
  %73 = load i32*, i32** %7, align 8
  %74 = bitcast i32* %73 to i8*
  %75 = load i32, i32* %8, align 4
  %76 = add nsw i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = mul i64 4, %77
  %79 = trunc i64 %78 to i32
  %80 = call i8* @vrna_realloc(i8* noundef %74, i32 noundef %79)
  %81 = bitcast i8* %80 to i32*
  store i32* %81, i32** %7, align 8
  %82 = load i8*, i8** %3, align 8
  %83 = call i64 @strlen(i8* noundef %82) #6
  %84 = trunc i64 %83 to i32
  %85 = load i32*, i32** %7, align 8
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %85, i64 %87
  store i32 %84, i32* %88, align 4
  store i32 0, i32* %10, align 4
  br label %89

89:                                               ; preds = %171, %72
  %90 = load i32, i32* %10, align 4
  %91 = load i32, i32* %8, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %174

93:                                               ; preds = %89
  %94 = load i32*, i32** %7, align 8
  %95 = load i32, i32* %10, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %11, align 4
  %99 = load i32*, i32** %7, align 8
  %100 = load i32, i32* %10, align 4
  %101 = add nsw i32 %100, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %99, i64 %102
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %12, align 4
  %105 = load i32, i32* %12, align 4
  %106 = load i32, i32* %11, align 4
  %107 = sub nsw i32 %105, %106
  store i32 %107, i32* %13, align 4
  %108 = load i32, i32* %13, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = mul i64 1, %110
  %112 = trunc i64 %111 to i32
  %113 = call i8* @vrna_alloc(i32 noundef %112)
  store i8* %113, i8** %5, align 8
  %114 = load i8*, i8** %5, align 8
  %115 = load i8*, i8** %3, align 8
  %116 = load i32, i32* %11, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = getelementptr inbounds i8, i8* %118, i64 1
  %120 = load i32, i32* %13, align 4
  %121 = sub nsw i32 %120, 1
  %122 = sext i32 %121 to i64
  %123 = call i8* @strncpy(i8* noundef %114, i8* noundef %119, i64 noundef %122) #7
  %124 = load i8*, i8** %5, align 8
  %125 = load i32, i32* %13, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  store i8 0, i8* %127, align 1
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  br label %128

128:                                              ; preds = %148, %93
  %129 = load i8*, i8** %5, align 8
  %130 = load i32, i32* %15, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %4, align 1
  %134 = sext i8 %133 to i32
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %149

136:                                              ; preds = %128
  %137 = call i16** @__ctype_b_loc() #8
  %138 = load i16*, i16** %137, align 8
  %139 = load i8, i8* %4, align 1
  %140 = sext i8 %139 to i32
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i16, i16* %138, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i32
  %145 = and i32 %144, 8192
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %136
  store i32 1, i32* %14, align 4
  br label %149

148:                                              ; preds = %136
  br label %128, !llvm.loop !39

149:                                              ; preds = %147, %128
  %150 = load i32, i32* %14, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %168

152:                                              ; preds = %149
  %153 = load i8**, i8*** %6, align 8
  %154 = bitcast i8** %153 to i8*
  %155 = load i32, i32* %9, align 4
  %156 = add nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = mul i64 8, %157
  %159 = trunc i64 %158 to i32
  %160 = call i8* @vrna_realloc(i8* noundef %154, i32 noundef %159)
  %161 = bitcast i8* %160 to i8**
  store i8** %161, i8*** %6, align 8
  %162 = load i8*, i8** %5, align 8
  %163 = load i8**, i8*** %6, align 8
  %164 = load i32, i32* %9, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %9, align 4
  %166 = sext i32 %164 to i64
  %167 = getelementptr inbounds i8*, i8** %163, i64 %166
  store i8* %162, i8** %167, align 8
  store i8* null, i8** %5, align 8
  br label %170

168:                                              ; preds = %149
  %169 = load i8*, i8** %5, align 8
  call void @free(i8* noundef %169) #7
  store i8* null, i8** %5, align 8
  br label %170

170:                                              ; preds = %168, %152
  br label %171

171:                                              ; preds = %170
  %172 = load i32, i32* %10, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %10, align 4
  br label %89, !llvm.loop !40

174:                                              ; preds = %89
  %175 = load i32, i32* %9, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  store i8** null, i8*** %2, align 8
  br label %195

178:                                              ; preds = %174
  %179 = load i8**, i8*** %6, align 8
  %180 = bitcast i8** %179 to i8*
  %181 = load i32, i32* %9, align 4
  %182 = add nsw i32 %181, 1
  %183 = sext i32 %182 to i64
  %184 = mul i64 8, %183
  %185 = trunc i64 %184 to i32
  %186 = call i8* @vrna_realloc(i8* noundef %180, i32 noundef %185)
  %187 = bitcast i8* %186 to i8**
  store i8** %187, i8*** %6, align 8
  %188 = load i8**, i8*** %6, align 8
  %189 = load i32, i32* %9, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8*, i8** %188, i64 %190
  store i8* null, i8** %191, align 8
  %192 = load i32*, i32** %7, align 8
  %193 = bitcast i32* %192 to i8*
  call void @free(i8* noundef %193) #7
  %194 = load i8**, i8*** %6, align 8
  store i8** %194, i8*** %2, align 8
  br label %195

195:                                              ; preds = %178, %177, %22
  %196 = load i8**, i8*** %2, align 8
  ret i8** %196
}

; Function Attrs: nounwind
declare dso_local i32 @sscanf(i8* noundef, i8* noundef, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @freeFields(i8** noundef %0) #0 {
  %2 = alloca i8**, align 8
  %3 = alloca i32, align 4
  store i8** %0, i8*** %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %11, %1
  %5 = load i8**, i8*** %2, align 8
  %6 = load i32, i32* %3, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8*, i8** %5, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %4
  %12 = load i8**, i8*** %2, align 8
  %13 = load i32, i32* %3, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %3, align 4
  %15 = sext i32 %13 to i64
  %16 = getelementptr inbounds i8*, i8** %12, i64 %15
  %17 = load i8*, i8** %16, align 8
  call void @free(i8* noundef %17) #7
  br label %4, !llvm.loop !41

18:                                               ; preds = %4
  %19 = load i8**, i8*** %2, align 8
  %20 = bitcast i8** %19 to i8*
  call void @free(i8* noundef %20) #7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @encode_char(i8 noundef signext %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i8 %0, i8* %2, align 1
  %5 = load i8, i8* %2, align 1
  %6 = sext i8 %5 to i32
  %7 = call i32 @toupper(i32 noundef %6) #6
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* %2, align 1
  %9 = load i32, i32* @energy_set, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = load i8, i8* %2, align 1
  %13 = sext i8 %12 to i32
  %14 = sub nsw i32 %13, 65
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %3, align 4
  br label %39

16:                                               ; preds = %1
  %17 = load i8, i8* %2, align 1
  %18 = sext i8 %17 to i32
  %19 = call i8* @strchr(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @Law_and_Order, i64 0, i64 0), i32 noundef %18) #6
  store i8* %19, i8** %4, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 0, i32* %3, align 4
  br label %28

23:                                               ; preds = %16
  %24 = load i8*, i8** %4, align 8
  %25 = ptrtoint i8* %24 to i64
  %26 = sub i64 %25, ptrtoint ([10 x i8]* @Law_and_Order to i64)
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %3, align 4
  br label %28

28:                                               ; preds = %23, %22
  %29 = load i32, i32* %3, align 4
  %30 = icmp sgt i32 %29, 5
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i32 0, i32* %3, align 4
  br label %32

32:                                               ; preds = %31, %28
  %33 = load i32, i32* %3, align 4
  %34 = icmp sgt i32 %33, 4
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = load i32, i32* %3, align 4
  %37 = add nsw i32 %36, -1
  store i32 %37, i32* %3, align 4
  br label %38

38:                                               ; preds = %35, %32
  br label %39

39:                                               ; preds = %38, %11
  %40 = load i32, i32* %3, align 4
  ret i32 %40
}

declare dso_local void @vrna_message_error(i8* noundef, ...) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @toupper(i32 noundef) #1

; Function Attrs: nounwind readonly willreturn
declare dso_local i8* @strchr(i8* noundef, i32 noundef) #1

; Function Attrs: nounwind readnone willreturn
declare dso_local i16** @__ctype_b_loc() #5

declare dso_local i8* @vrna_realloc(i8* noundef, i32 noundef) #2

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8* noundef, i8* noundef, i64 noundef) #3

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { nounwind readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind readonly willreturn }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.0 (https://github.com/llvm/llvm-project.git a2a7fc7ea5612fd86c46f054690f532092d92a3d)"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.mustprogress"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !5}
!9 = distinct !{!9, !5}
!10 = distinct !{!10, !5}
!11 = distinct !{!11, !5}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !5}
!14 = distinct !{!14, !5}
!15 = distinct !{!15, !5}
!16 = distinct !{!16, !5}
!17 = distinct !{!17, !5}
!18 = distinct !{!18, !5}
!19 = distinct !{!19, !5}
!20 = distinct !{!20, !5}
!21 = distinct !{!21, !5}
!22 = distinct !{!22, !5}
!23 = distinct !{!23, !5}
!24 = distinct !{!24, !5}
!25 = distinct !{!25, !5}
!26 = distinct !{!26, !5}
!27 = distinct !{!27, !5}
!28 = distinct !{!28, !5}
!29 = distinct !{!29, !5}
!30 = distinct !{!30, !5}
!31 = distinct !{!31, !5}
!32 = distinct !{!32, !5}
!33 = distinct !{!33, !5}
!34 = distinct !{!34, !5}
!35 = distinct !{!35, !5}
!36 = distinct !{!36, !5}
!37 = distinct !{!37, !5}
!38 = distinct !{!38, !5}
!39 = distinct !{!39, !5}
!40 = distinct !{!40, !5}
!41 = distinct !{!41, !5}
